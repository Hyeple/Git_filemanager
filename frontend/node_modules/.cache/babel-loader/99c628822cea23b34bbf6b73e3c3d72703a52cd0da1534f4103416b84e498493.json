{"ast":null,"code":"import _defineProperty from \"C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { mergeToken, genComponentStyleHook } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nvar genQRCodeStyle = function genQRCodeStyle(token) {\n  var _Object$assign, _ref;\n  var componentCls = token.componentCls;\n  return _ref = {}, _defineProperty(_ref, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: token.paddingSM,\n    backgroundColor: token.colorWhite,\n    borderRadius: token.borderRadiusLG,\n    border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorSplit),\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden'\n  }, _defineProperty(_Object$assign, \"& > \".concat(componentCls, \"-mask\"), _defineProperty({\n    position: 'absolute',\n    insetBlockStart: 0,\n    insetInlineStart: 0,\n    zIndex: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    color: token.colorText,\n    lineHeight: token.lineHeight,\n    background: token.QRCodeMaskBackgroundColor,\n    textAlign: 'center'\n  }, \"& > \".concat(componentCls, \"-expired\"), {\n    color: token.QRCodeExpiredTextColor\n  })), _defineProperty(_Object$assign, '&-icon', {\n    marginBlockEnd: token.marginXS,\n    fontSize: token.controlHeight\n  }), _Object$assign))), _defineProperty(_ref, \"\".concat(componentCls, \"-borderless\"), {\n    borderColor: 'transparent'\n  }), _ref;\n};\nexport default genComponentStyleHook('QRCode', function (token) {\n  return genQRCodeStyle(mergeToken(token, {\n    QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n    QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n  }));\n});","map":{"version":3,"names":["mergeToken","genComponentStyleHook","resetComponent","genQRCodeStyle","token","_Object$assign","_ref","componentCls","_defineProperty","Object","assign","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","concat","lineWidth","lineType","colorSplit","position","width","height","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeExpiredTextColor","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor"],"sources":["C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/antd/es/qrcode/style/index.js"],"sourcesContent":["import { mergeToken, genComponentStyleHook } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired`]: {\n          color: token.QRCodeExpiredTextColor\n        }\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport default genComponentStyleHook('QRCode', token => genQRCodeStyle(mergeToken(token, {\n  QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n  QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n})));"],"mappings":";AAAA,SAASA,UAAU,EAAEC,qBAAqB,QAAQ,sBAAsB;AACxE,SAASC,cAAc,QAAQ,aAAa;AAC5C,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,KAAK,EAAI;EAAA,IAAAC,cAAA,EAAAC,IAAA;EAC9B,IACEC,YAAY,GACVH,KAAK,CADPG,YAAY;EAEd,OAAAD,IAAA,OAAAE,eAAA,CAAAF,IAAA,EACGC,YAAY,EAAGE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,cAAc,CAACE,KAAK,CAAC,CAAC,GAAAC,cAAA;IACpEM,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAEV,KAAK,CAACW,SAAS;IACxBC,eAAe,EAAEZ,KAAK,CAACa,UAAU;IACjCC,YAAY,EAAEd,KAAK,CAACe,cAAc;IAClCC,MAAM,KAAAC,MAAA,CAAKjB,KAAK,CAACkB,SAAS,SAAAD,MAAA,CAAMjB,KAAK,CAACmB,QAAQ,OAAAF,MAAA,CAAIjB,KAAK,CAACoB,UAAU,CAAE;IACpEC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EAAQ,GAAApB,eAAA,CAAAH,cAAA,SAAAgB,MAAA,CACVd,YAAY,YAAAC,eAAA;IAClBiB,QAAQ,EAAE,UAAU;IACpBI,eAAe,EAAE,CAAC;IAClBC,gBAAgB,EAAE,CAAC;IACnBC,MAAM,EAAE,EAAE;IACVpB,OAAO,EAAE,MAAM;IACfqB,aAAa,EAAE,QAAQ;IACvBpB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBa,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdM,KAAK,EAAE7B,KAAK,CAAC8B,SAAS;IACtBC,UAAU,EAAE/B,KAAK,CAAC+B,UAAU;IAC5BC,UAAU,EAAEhC,KAAK,CAACiC,yBAAyB;IAC3CC,SAAS,EAAE;EAAQ,UAAAjB,MAAA,CACXd,YAAY,eAAa;IAC/B0B,KAAK,EAAE7B,KAAK,CAACmC;EACf,CAAC,IAAA/B,eAAA,CAAAH,cAAA,EAEH,QAAQ,EAAE;IACRmC,cAAc,EAAEpC,KAAK,CAACqC,QAAQ;IAC9BC,QAAQ,EAAEtC,KAAK,CAACuC;EAClB,CAAC,GAAAtC,cAAA,CACF,CAAC,GAAAG,eAAA,CAAAF,IAAA,KAAAe,MAAA,CACEd,YAAY,kBAAgB;IAC9BqC,WAAW,EAAE;EACf,CAAC,GAAAtC,IAAA;AAEL,CAAC;AACD,eAAeL,qBAAqB,CAAC,QAAQ,EAAE,UAAAG,KAAK;EAAA,OAAID,cAAc,CAACH,UAAU,CAACI,KAAK,EAAE;IACvFmC,sBAAsB,EAAE,qBAAqB;IAC7CF,yBAAyB,EAAE;EAC7B,CAAC,CAAC,CAAC;AAAA,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}