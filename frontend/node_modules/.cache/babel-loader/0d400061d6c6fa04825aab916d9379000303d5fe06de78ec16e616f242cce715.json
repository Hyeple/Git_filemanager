{"ast":null,"code":"/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n\n/**\r\n * Colors.\r\n */\n\nexports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||\n  // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) ||\n  // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||\n  // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit');\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch (e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n  return r;\n}\n\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\n\nexports.enable(load());\n\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","map":{"version":3,"names":["exports","module","require","log","formatArgs","save","load","useColors","storage","chrome","local","localstorage","colors","window","process","type","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatters","j","v","JSON","stringify","err","message","args","namespace","humanize","diff","c","color","splice","index","lastC","replace","Function","prototype","apply","call","arguments","namespaces","removeItem","debug","e","r","env","DEBUG","enable","localStorage"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/express/node_modules/debug/src/browser.js"],"sourcesContent":["/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = require('./debug');\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = 'undefined' != typeof chrome\r\n               && 'undefined' != typeof chrome.storage\r\n                  ? chrome.storage.local\r\n                  : localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  'lightseagreen',\r\n  'forestgreen',\r\n  'goldenrod',\r\n  'dodgerblue',\r\n  'darkorchid',\r\n  'crimson'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // NB: In an Electron preload script, document will be defined but not fully\r\n  // initialized. Since we know we're in Chrome, we'll just detect this case\r\n  // explicitly\r\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\r\n    return true;\r\n  }\r\n\r\n  // is webkit? http://stackoverflow.com/a/16459606/376773\r\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n    // double check webkit in userAgent just in case we are in a worker\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  try {\r\n    return JSON.stringify(v);\r\n  } catch (err) {\r\n    return '[UnexpectedJSONParseError]: ' + err.message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? '%c' : '')\r\n    + this.namespace\r\n    + (useColors ? ' %c' : ' ')\r\n    + args[0]\r\n    + (useColors ? '%c ' : ' ')\r\n    + '+' + exports.humanize(this.diff);\r\n\r\n  if (!useColors) return;\r\n\r\n  var c = 'color: ' + this.color;\r\n  args.splice(1, 0, c, 'color: inherit')\r\n\r\n  // the final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments passed either before or after the %c, so we need to\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\r\n    if ('%%' === match) return;\r\n    index++;\r\n    if ('%c' === match) {\r\n      // we only are interested in the *last* %c\r\n      // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // this hackery is required for IE8/9, where\r\n  // the `console.log` function doesn't have 'apply'\r\n  return 'object' === typeof console\r\n    && console.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r\n      exports.storage.removeItem('debug');\r\n    } else {\r\n      exports.storage.debug = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  var r;\r\n  try {\r\n    r = exports.storage.debug;\r\n  } catch(e) {}\r\n\r\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\r\n    r = process.env.DEBUG;\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}