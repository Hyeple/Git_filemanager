{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"value\", \"defaultExpanded\", \"renderer\", \"pageSize\", \"copyable\"];\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nimport { displayValue, styled } from './utils.mjs';\nimport SuperJSON from 'superjson';\nvar Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '1em',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word'\n});\nvar Label = styled('span', {\n  color: 'white'\n});\nvar LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white'\n});\nvar ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0\n});\nvar CopyButton = function CopyButton(_ref) {\n  var value = _ref.value;\n  var _React$useState = React.useState('NoCopy'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    copyState = _React$useState2[0],\n    setCopyState = _React$useState2[1];\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: copyState === 'NoCopy' ? function () {\n      navigator.clipboard.writeText(SuperJSON.stringify(value)).then(function () {\n        setCopyState('SuccessCopy');\n        setTimeout(function () {\n          setCopyState('NoCopy');\n        }, 1500);\n      }, function (err) {\n        console.error('Failed to copy: ', err);\n        setCopyState('ErrorCopy');\n        setTimeout(function () {\n          setCopyState('NoCopy');\n        }, 1500);\n      });\n    } : undefined,\n    style: {\n      cursor: 'pointer',\n      color: 'inherit',\n      font: 'inherit',\n      outline: 'inherit',\n      background: 'transparent',\n      border: 'none',\n      padding: 0\n    }\n  }, copyState === 'NoCopy' ? /*#__PURE__*/React.createElement(Copier, null) : copyState === 'SuccessCopy' ? /*#__PURE__*/React.createElement(CopiedCopier, null) : /*#__PURE__*/React.createElement(ErrorCopier, null));\n};\nvar Value = styled('span', function (_props, theme) {\n  return {\n    color: theme.danger\n  };\n});\nvar SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)'\n});\nvar Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em'\n});\nvar Expander = function Expander(_ref2) {\n  var expanded = _ref2.expanded,\n    _ref2$style = _ref2.style,\n    style = _ref2$style === void 0 ? {} : _ref2$style;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: _objectSpread({\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: \"rotate(\" + (expanded ? 90 : 0) + \"deg) \" + (style.transform || '')\n    }, style)\n  }, \"\\u25B6\");\n};\nvar Copier = function Copier() {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"Copy object to clipboard\",\n    title: \"Copy object to clipboard\",\n    style: {\n      paddingLeft: '1em'\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"12\",\n    viewBox: \"0 0 16 12\",\n    width: \"10\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n  })));\n};\nvar ErrorCopier = function ErrorCopier() {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"Failed copying to clipboard\",\n    title: \"Failed copying to clipboard\",\n    style: {\n      paddingLeft: '1em',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"12\",\n    viewBox: \"0 0 16 12\",\n    width: \"10\",\n    display: \"block\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"red\",\n    d: \"M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z\"\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red',\n      fontSize: '12px',\n      paddingLeft: '4px',\n      position: 'relative',\n      top: '2px'\n    }\n  }, \"See console\"));\n};\nvar CopiedCopier = function CopiedCopier() {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"Object copied to clipboard\",\n    title: \"Object copied to clipboard\",\n    style: {\n      paddingLeft: '1em',\n      display: 'inline-block',\n      verticalAlign: 'middle'\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"16\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\",\n    display: \"block\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"green\",\n    d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n  })));\n};\n\n/**\r\n * Chunk elements in the array by size\r\n *\r\n * when the array cannot be chunked evenly by size, the last chunk will be\r\n * filled with the remaining elements\r\n *\r\n * @example\r\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\r\n */\nfunction chunkArray(array, size) {\n  if (size < 1) return [];\n  var i = 0;\n  var result = [];\n  while (i < array.length) {\n    result.push(array.slice(i, i + size));\n    i = i + size;\n  }\n  return result;\n}\nvar DefaultRenderer = function DefaultRenderer(_ref3) {\n  var handleEntry = _ref3.handleEntry,\n    label = _ref3.label,\n    value = _ref3.value,\n    _ref3$subEntries = _ref3.subEntries,\n    subEntries = _ref3$subEntries === void 0 ? [] : _ref3$subEntries,\n    _ref3$subEntryPages = _ref3.subEntryPages,\n    subEntryPages = _ref3$subEntryPages === void 0 ? [] : _ref3$subEntryPages,\n    type = _ref3.type,\n    _ref3$expanded = _ref3.expanded,\n    expanded = _ref3$expanded === void 0 ? false : _ref3$expanded,\n    _ref3$copyable = _ref3.copyable,\n    copyable = _ref3$copyable === void 0 ? false : _ref3$copyable,\n    toggleExpanded = _ref3.toggleExpanded,\n    pageSize = _ref3.pageSize;\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    expandedPages = _React$useState4[0],\n    setExpandedPages = _React$useState4[1];\n  return /*#__PURE__*/React.createElement(Entry, {\n    key: label\n  }, subEntryPages.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ExpandButton, {\n    onClick: function onClick() {\n      return toggleExpanded();\n    }\n  }, /*#__PURE__*/React.createElement(Expander, {\n    expanded: expanded\n  }), \" \", label, ' ', /*#__PURE__*/React.createElement(Info, null, String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : '', subEntries.length, \" \", subEntries.length > 1 ? \"items\" : \"item\")), copyable ? /*#__PURE__*/React.createElement(CopyButton, {\n    value: value\n  }) : null, expanded ? subEntryPages.length === 1 ? /*#__PURE__*/React.createElement(SubEntries, null, subEntries.map(handleEntry)) : /*#__PURE__*/React.createElement(SubEntries, null, subEntryPages.map(function (entries, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index\n    }, /*#__PURE__*/React.createElement(Entry, null, /*#__PURE__*/React.createElement(LabelButton, {\n      onClick: function onClick() {\n        return setExpandedPages(function (old) {\n          return old.includes(index) ? old.filter(function (d) {\n            return d !== index;\n          }) : [].concat(_toConsumableArray(old), [index]);\n        });\n      }\n    }, /*#__PURE__*/React.createElement(Expander, {\n      expanded: expanded\n    }), \" [\", index * pageSize, \" ...\", ' ', index * pageSize + pageSize - 1, \"]\"), expandedPages.includes(index) ? /*#__PURE__*/React.createElement(SubEntries, null, entries.map(handleEntry)) : null));\n  })) : null) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, null, label, \":\"), \" \", /*#__PURE__*/React.createElement(Value, null, displayValue(value))));\n};\nfunction isIterable(x) {\n  return Symbol.iterator in x;\n}\nfunction Explorer(_ref4) {\n  var value = _ref4.value,\n    defaultExpanded = _ref4.defaultExpanded,\n    _ref4$renderer = _ref4.renderer,\n    renderer = _ref4$renderer === void 0 ? DefaultRenderer : _ref4$renderer,\n    _ref4$pageSize = _ref4.pageSize,\n    pageSize = _ref4$pageSize === void 0 ? 100 : _ref4$pageSize,\n    _ref4$copyable = _ref4.copyable,\n    copyable = _ref4$copyable === void 0 ? false : _ref4$copyable,\n    rest = _objectWithoutProperties(_ref4, _excluded);\n  var _React$useState5 = React.useState(Boolean(defaultExpanded)),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    expanded = _React$useState6[0],\n    setExpanded = _React$useState6[1];\n  var toggleExpanded = React.useCallback(function () {\n    return setExpanded(function (old) {\n      return !old;\n    });\n  }, []);\n  var type = typeof value;\n  var subEntries = [];\n  var makeProperty = function makeProperty(sub) {\n    var subDefaultExpanded = defaultExpanded === true ? _defineProperty({}, sub.label, true) : defaultExpanded == null ? void 0 : defaultExpanded[sub.label];\n    return _objectSpread(_objectSpread({}, sub), {}, {\n      defaultExpanded: subDefaultExpanded\n    });\n  };\n  if (Array.isArray(value)) {\n    type = 'array';\n    subEntries = value.map(function (d, i) {\n      return makeProperty({\n        label: i.toString(),\n        value: d\n      });\n    });\n  } else if (value !== null && typeof value === 'object' && isIterable(value) && typeof value[Symbol.iterator] === 'function') {\n    type = 'Iterable';\n    subEntries = Array.from(value, function (val, i) {\n      return makeProperty({\n        label: i.toString(),\n        value: val\n      });\n    });\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object';\n    subEntries = Object.entries(value).map(function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n        key = _ref7[0],\n        val = _ref7[1];\n      return makeProperty({\n        label: key,\n        value: val\n      });\n    });\n  }\n  var subEntryPages = chunkArray(subEntries, pageSize);\n  return renderer(_objectSpread({\n    handleEntry: function handleEntry(entry) {\n      return /*#__PURE__*/React.createElement(Explorer, _extends({\n        key: entry.label,\n        value: value,\n        renderer: renderer,\n        copyable: copyable\n      }, rest, entry));\n    },\n    type: type,\n    subEntries: subEntries,\n    subEntryPages: subEntryPages,\n    value: value,\n    expanded: expanded,\n    copyable: copyable,\n    toggleExpanded: toggleExpanded,\n    pageSize: pageSize\n  }, rest));\n}\nexport { CopyButton, DefaultRenderer, Entry, ExpandButton, Expander, Info, Label, LabelButton, SubEntries, Value, chunkArray, Explorer as default };","map":{"version":3,"names":["fontFamily","fontSize","lineHeight","outline","wordBreak","color","cursor","font","background","border","padding","CopyButton","_ref","value","onClick","copyState","navigator","clipboard","writeText","SuperJSON","stringify","then","setTimeout","console","error","err","undefined","style","React","createElement","Copier","CopiedCopier","ErrorCopier","Value","styled","_props","theme","marginLeft","paddingLeft","borderLeft","Expander","_ref2","_ref2$style","_objectSpread","display","transition","transform","expanded","title","height","viewBox","width","fill","d","alignItems","position","top","verticalAlign","chunkArray","array","size","i","length","result","push","slice","DefaultRenderer","_ref3","subEntries","_ref3$subEntries","_ref3$subEntryPages","subEntryPages","_ref3$expanded","_ref3$copyable","copyable","pageSize","Entry","key","label","Fragment","ExpandButton","Info","String","type","toLowerCase","SubEntries","map","handleEntry","entries","index","LabelButton","setExpandedPages","old","includes","filter","concat","_toConsumableArray","isIterable","x","Symbol","iterator","Explorer","_ref4","renderer","_ref4$renderer","_ref4$pageSize","_ref4$copyable","_React$useState5","useState","Boolean","defaultExpanded","_React$useState6","_slicedToArray","setExpanded","toggleExpanded","useCallback","subDefaultExpanded","_defineProperty","Array","isArray","toString","from","val","makeProperty","Object","_ref6","_ref7","entry","_extends"],"sources":["C:\\Users\\parkj\\Desktop\\OSS\\Git_filemanager\\frontend\\node_modules\\@tanstack\\react-query-devtools\\src\\Explorer.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport { displayValue, styled } from './utils'\nimport superjson from 'superjson'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '1em',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  color: 'white',\n})\n\nexport const LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0,\n})\n\ntype CopyState = 'NoCopy' | 'SuccessCopy' | 'ErrorCopy'\n\nexport const CopyButton = ({ value }: { value: unknown }) => {\n  const [copyState, setCopyState] = React.useState<CopyState>('NoCopy')\n\n  return (\n    <button\n      onClick={\n        copyState === 'NoCopy'\n          ? () => {\n              navigator.clipboard.writeText(superjson.stringify(value)).then(\n                () => {\n                  setCopyState('SuccessCopy')\n                  setTimeout(() => {\n                    setCopyState('NoCopy')\n                  }, 1500)\n                },\n                (err) => {\n                  console.error('Failed to copy: ', err)\n                  setCopyState('ErrorCopy')\n                  setTimeout(() => {\n                    setCopyState('NoCopy')\n                  }, 1500)\n                },\n              )\n            }\n          : undefined\n      }\n      style={{\n        cursor: 'pointer',\n        color: 'inherit',\n        font: 'inherit',\n        outline: 'inherit',\n        background: 'transparent',\n        border: 'none',\n        padding: 0,\n      }}\n    >\n      {copyState === 'NoCopy' ? (\n        <Copier />\n      ) : copyState === 'SuccessCopy' ? (\n        <CopiedCopier />\n      ) : (\n        <ErrorCopier />\n      )}\n    </button>\n  )\n}\n\nexport const Value = styled('span', (_props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em',\n})\n\ntype ExpanderProps = {\n  expanded: boolean\n  style?: React.CSSProperties\n}\n\nexport const Expander = ({ expanded, style = {} }: ExpanderProps) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    ▶\n  </span>\n)\n\nconst Copier = () => (\n  <span\n    aria-label=\"Copy object to clipboard\"\n    title=\"Copy object to clipboard\"\n    style={{\n      paddingLeft: '1em',\n    }}\n  >\n    <svg height=\"12\" viewBox=\"0 0 16 12\" width=\"10\">\n      <path\n        fill=\"currentColor\"\n        d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n      ></path>\n      <path\n        fill=\"currentColor\"\n        d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n      ></path>\n    </svg>\n  </span>\n)\n\nconst ErrorCopier = () => (\n  <span\n    aria-label=\"Failed copying to clipboard\"\n    title=\"Failed copying to clipboard\"\n    style={{\n      paddingLeft: '1em',\n      display: 'flex',\n      alignItems: 'center',\n    }}\n  >\n    <svg height=\"12\" viewBox=\"0 0 16 12\" width=\"10\" display=\"block\">\n      <path\n        fill=\"red\"\n        d=\"M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z\"\n      ></path>\n    </svg>\n    <span\n      style={{\n        color: 'red',\n        fontSize: '12px',\n        paddingLeft: '4px',\n        position: 'relative',\n        top: '2px',\n      }}\n    >\n      See console\n    </span>\n  </span>\n)\n\nconst CopiedCopier = () => (\n  <span\n    aria-label=\"Object copied to clipboard\"\n    title=\"Object copied to clipboard\"\n    style={{\n      paddingLeft: '1em',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n    }}\n  >\n    <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" display=\"block\">\n      <path\n        fill=\"green\"\n        d=\"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n      ></path>\n    </svg>\n  </span>\n)\n\ntype Entry = {\n  label: string\n}\n\ntype RendererProps = {\n  handleEntry: (entry: Entry) => JSX.Element\n  label?: string\n  value: unknown\n  subEntries: Entry[]\n  subEntryPages: Entry[][]\n  type: string\n  expanded: boolean\n  copyable: boolean\n  toggleExpanded: () => void\n  pageSize: number\n}\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nexport function chunkArray<T>(array: T[], size: number): T[][] {\n  if (size < 1) return []\n  let i = 0\n  const result: T[][] = []\n  while (i < array.length) {\n    result.push(array.slice(i, i + size))\n    i = i + size\n  }\n  return result\n}\n\ntype Renderer = (props: RendererProps) => JSX.Element\n\nexport const DefaultRenderer: Renderer = ({\n  handleEntry,\n  label,\n  value,\n  subEntries = [],\n  subEntryPages = [],\n  type,\n  expanded = false,\n  copyable = false,\n  toggleExpanded,\n  pageSize,\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState<number[]>([])\n\n  return (\n    <Entry key={label}>\n      {subEntryPages.length ? (\n        <>\n          <ExpandButton onClick={() => toggleExpanded()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </ExpandButton>\n          {copyable ? <CopyButton value={value} /> : null}\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>{subEntries.map(handleEntry)}</SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <LabelButton\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </LabelButton>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>{entries.map(handleEntry)}</SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label> <Value>{displayValue(value)}</Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\ntype ExplorerProps = Partial<RendererProps> & {\n  renderer?: Renderer\n  defaultExpanded?: true | Record<string, boolean>\n  copyable?: boolean\n}\n\ntype Property = {\n  defaultExpanded?: boolean | Record<string, boolean>\n  label: string\n  value: unknown\n}\n\nfunction isIterable(x: any): x is Iterable<unknown> {\n  return Symbol.iterator in x\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  copyable = false,\n  ...rest\n}: ExplorerProps) {\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded))\n  const toggleExpanded = React.useCallback(() => setExpanded((old) => !old), [])\n\n  let type: string = typeof value\n  let subEntries: Property[] = []\n\n  const makeProperty = (sub: { label: string; value: unknown }): Property => {\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    isIterable(value) &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    subEntries = Object.entries(value).map(([key, val]) =>\n      makeProperty({\n        label: key,\n        value: val,\n      }),\n    )\n  }\n\n  const subEntryPages = chunkArray(subEntries, pageSize)\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer\n        key={entry.label}\n        value={value}\n        renderer={renderer}\n        copyable={copyable}\n        {...rest}\n        {...entry}\n      />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    copyable,\n    toggleExpanded,\n    pageSize,\n    ...rest,\n  })\n}\n"],"mappings":";;;;;;;;;;;;;EAOEA,UAAA;EACAC,QAAA;EACAC,UAAA;EACAC,OAAA;EACAC,SAAA;AALiC;;EASjCC,KAAA;AADkC;;EAKlCC,MAAA;EACAD,KAAA;AAF0C;;EAM1CC,MAAA;EACAD,KAAA;EACAE,IAAA;EACAJ,OAAA;EACAK,UAAA;EACAC,MAAA;EACAC,OAAA;AAP2C;AAYtC,IAAAC,UAAA,YAAAA,WAAAC,IAAA,EAAoB;EAAA,IAAEC,KAAA,GAAAD,IAAA,CAAAC,KAAA;;;;;;IAKvBC,OAAA,EAAAC,SAAA;MAGQC,SAAA,CAAAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,CAAAP,KAAA,GAAAQ,IAAA;;QAGIC,UAAA;;;;QAKAC,OAAA,CAAAC,KAAA,qBAAAC,GAAA;;QAEAH,UAAA;;;;IAKL,IAAAI,SAAA;IAGPC,KAAA;MACErB,MAAA;MACAD,KAAA;MACAE,IAAA;MACAJ,OAAA;MACAK,UAAA;MACAC,MAAA;MACAC,OAAA;IAPK;EAtBT,GAAAK,SAAA,6BAAAa,KAAA,CAAAC,aAAA,CAAAC,MAAA,UAAAf,SAAA,kCAAAa,KAAA,CAAAC,aAAA,CAAAE,YAAA,uBAAAH,KAAA,CAAAC,aAAA,CAAAG,WAAA;AAyCH;AAEM,IAAAC,KAAA,GAAAC,MAAA,mBAAAC,MAAA,EAAAC,KAAA;EAAA;;EAAiD;AAAA;;EAKtDC,UAAA;EACAC,WAAA;EACAC,UAAA;AAHsC;;EAOtClC,KAAA;EACAJ,QAAA;AAFiC;AAU5B,IAAAuC,QAAA,YAAAA,SAAAC,KAAA;EAAA,I;wBAA8Bd,KAAA;IAAAA,KAAA,GAAAe,WAAA,mBAAAA,WAAA;EAAA,OAAZ,aAAAd,KAAA,CAAAC,aAAA;IAErBF,KAAA,EAAAgB,aAAA;MACEC,OAAA;MACAC,UAAA;MACAC,SAAA,eAAAC,QAAA,wBAAApB,KAAA,CAAAmB,SAAA;IAAA,G;EAJJ;AAAA;AAYF,IAAAhB,MAAA,YAAAA,OAAA;EAAA,oBAAAF,KAAA,CAAAC,aAAA;IAEI;IACAmB,KAAA;IACArB,KAAA;MACEW,WAAA;IADK;EAHT,gBAAAV,KAAA,CAAAC,aAAA;IAOOoB,MAAA;IAAYC,OAAA;IAAoBC,KAAA;EAArC,gBAAAvB,KAAA,CAAAC,aAAA;IAEIuB,IAAA;IACAC,CAAA;EAFF,iBAAAzB,KAAA,CAAAC,aAAA;IAKEuB,IAAA;IACAC,CAAA;EAFF;AAAA;AAQN,IAAArB,WAAA,YAAAA,YAAA;EAAA,oBAAAJ,KAAA,CAAAC,aAAA;IAEI;IACAmB,KAAA;IACArB,KAAA;MACEW,WAAA;MACAM,OAAA;MACAU,UAAA;IAHK;EAHT,gBAAA1B,KAAA,CAAAC,aAAA;IASOoB,MAAA;IAAYC,OAAA;IAAoBC,KAAA;IAAWP,OAAA;EAAhD,gBAAAhB,KAAA,CAAAC,aAAA;IAEIuB,IAAA;IACAC,CAAA;EAFF,kBAAAzB,KAAA,CAAAC,aAAA;IAMAF,KAAA;MACEtB,KAAA;MACAJ,QAAA;MACAqC,WAAA;MACAiB,QAAA;MACAC,GAAA;IALK;EADT;AAAA;AAcJ,IAAAzB,YAAA,YAAAA,aAAA;EAAA,oBAAAH,KAAA,CAAAC,aAAA;IAEI;IACAmB,KAAA;IACArB,KAAA;MACEW,WAAA;MACAM,OAAA;MACAa,aAAA;IAHK;EAHT,gBAAA7B,KAAA,CAAAC,aAAA;IASOoB,MAAA;IAAYC,OAAA;IAAoBC,KAAA;IAAWP,OAAA;EAAhD,gBAAAhB,KAAA,CAAAC,aAAA;IAEIuB,IAAA;IACAC,CAAA;EAFF;AAAA;;AAyBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAAK,WAAAC,KAAA,EAAAC,IAAA;EACL,IAAAA,IAAA;;;EAGA,OAAAC,CAAA,GAAAF,KAAA,CAAAG,MAAA;IACEC,MAAA,CAAAC,IAAA,CAAAL,KAAA,CAAAM,KAAA,CAAAJ,CAAA,EAAAA,CAAA,GAAAD,IAAA;;EAED;EACD,OAAAG,MAAA;AACD;AAIM,IAAAG,eAAA,YAAAA,gBAAAC,KAAA,EAAmC;EAAA,I;;;6BAIxCC,UAAA;IAAAA,UAAA,GAAAC,gBAAA,mBAAAA,gBAAA;IAAAC,mBAAA,GAAAH,KAAA,CACAI,aAAA;IAAAA,aAAA,GAAAD,mBAAA,mBAAAA,mBAAA;;2BAEAvB,QAAA;IAAAA,QAAA,GAAAyB,cAAA,sBAAAA,cAAA;IAAAC,cAAA,GAAAN,KAAA,CACAO,QAAA;IAAAA,QAAA,GAAAD,cAAA,sBAAAA,cAAA;;IAEAE,QAAA,GAAAR,KAAA,CAAAQ,QAAA;;;;;EAIA,oBAAA/C,KAAA,CAAAC,aAAA,CAAA+C,KAAA;IACSC,GAAA,EAAAC;EAAP,GAAAP,aAAA,CAAAT,MAAA,gBAAAlC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAmD,QAAA,qBAAAnD,KAAA,CAAAC,aAAA,CAAAmD,YAAA;;;;EAGM,gBAAApD,KAAA,CAAAC,aAAA,CAAAW,QAAA;IACYO,QAAA,EAAAA;EAAV,SAAA+B,KAAA,oBAAAlD,KAAA,CAAAC,aAAA,CAAAoD,IAAA,QAAAC,MAAA,CAAAC,IAAA,EAAAC,WAAA,wCAAAhB,UAAA,CAAAN,MAAA,OAAAM,UAAA,CAAAN,MAAA,2BAAAY,QAAA,gBAAA9C,KAAA,CAAAC,aAAA,CAAAlB,UAAA;IAMsBE,KAAA,EAAAA;EAAZ,WAAAkC,QAAA,GAAAwB,aAAA,CAAAT,MAAA,sBAAAlC,KAAA,CAAAC,aAAA,CAAAwD,UAAA,QAAAjB,UAAA,CAAAkB,GAAA,CAAAC,WAAA,kBAAA3D,KAAA,CAAAC,aAAA,CAAAwD,UAAA,QAAAd,aAAA,CAAAe,GAAA,WAAAE,OAAA,EAAAC,KAAA;IAAA,oBAAA7D,KAAA,CAAAC,aAAA;MAOCgD,GAAA,EAAAY;IAAL,gBAAA7D,KAAA,CAAAC,aAAA,CAAA+C,KAAA,qBAAAhD,KAAA,CAAAC,aAAA,CAAA6D,WAAA;MAGM5E,OAAA,WAAAA,QAAA;QAAA,OAAA6E,gBAAA,WAAAC,GAAA;UAAA,OAAAA,GAAA,CAAAC,QAAA,CAAAJ,KAAA,IAAAG,GAAA,CAAAE,MAAA,WAAAzC,CAAA;YAAA,OAAAA,CAAA,KAAAoC,KAAA;UAAA,QAAAM,MAAA,CAAAC,kBAAA,CAAAJ,GAAA,IAAAH,KAAA;QAAA;MAAA;IADF,gBAAA7D,KAAA,CAAAC,aAAA,CAAAW,QAAA;MASYO,QAAA,EAAAA;;;AAoBjC;AAcD,SAAAkD,WAAAC,CAAA;EACE,OAAAC,MAAA,CAAAC,QAAA,IAAAF,CAAA;AACD;AAEc,SAAAG,SAAAC,KAAA,EAAkB;EAAA,I;;2BAG/BC,QAAA;IAAAA,QAAA,GAAAC,cAAA,cAAAtC,eAAA,GAAAsC,cAAA;IAAAC,cAAA,GAAAH,KAAA,CACA3B,QAAA;IAAAA,QAAA,GAAA8B,cAAA,oBAAAA,cAAA;IAAAC,cAAA,GAAAJ,KAAA,CACA5B,QAAA;IAAAA,QAAA,GAAAgC,cAAA,sBAAAA,cAAA;;EAGA,IAAAC,gBAAA,GAAA/E,KAAA,CAAAgF,QAAA,CAAAC,OAAA,CAAAC,eAAA;IAAAC,gBAAA,GAAAC,cAAA,CAAAL,gBAAA;IAAA5D,QAAA,GAAAgE,gBAAA;IAAAE,WAAA,GAAAF,gBAAA;EACA,IAAAG,cAAA,GAAAtF,KAAA,CAAAuF,WAAA;IAAA,OAAAF,WAAA,WAAArB,GAAA;MAAA,QAAAA,GAAA;IAAA;EAAA;;;;IAME,IAAAwB,kBAAA,GAAAN,eAAA,YAAAO,eAAA,K;;MAMEP,eAAA,EAAAM;IAAA;;EAIJ,IAAAE,KAAA,CAAAC,OAAA,CAAA1G,KAAA;IACEsE,IAAA;;;QAGIL,KAAA,EAAAjB,CAAA,CAAA2D,QAAA;QACA3G,KAAA,EAAAwC;MAFW;IAAA;;IAWf8B,IAAA;IACAf,UAAA,GAAAkD,KAAA,CAAAG,IAAA,CAAA5G,KAAA,YAAA6G,GAAA,EAAA7D,CAAA;MAAA,OAAA8D,YAAA;QAEI7C,KAAA,EAAAjB,CAAA,CAAA2D,QAAA;QACA3G,KAAA,EAAA6G;MAFW;IAAA;;IAMfvC,IAAA;IACAf,UAAA,GAAAwD,MAAA,CAAApC,OAAA,CAAA3E,KAAA,EAAAyE,GAAA,WAAAuC,KAAA;MAAA,IAAAC,KAAA,GAAAd,cAAA,CAAAa,KAAA;QAAAhD,GAAA,GAAAiD,KAAA;QAAAJ,GAAA,GAAAI,KAAA;MAAA,OAAAH,YAAA;QAEI7C,KAAA,EAAAD,GAAA;QACAhE,KAAA,EAAA6G;MAFW;IAAA;EAKhB;EAED,IAAAnD,aAAA,GAAAb,UAAA,CAAAU,UAAA,EAAAO,QAAA;EAEA,OAAA4B,QAAA,CAAA5D,aAAA;IACE4C,WAAA,WAAAA,YAAAwC,KAAA;MAAA,oBAAAnG,KAAA,CAAAC,aAAA,CAAAwE,QAAA,EAAA2B,QAAA;;QAGInH,KAAA,EAAAA,KAAA;QACA0F,QAAA,EAAAA,QAAA;QACA7B,QAAA,EAAAA;;;;;;;;;;;UANU;AAqBjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}