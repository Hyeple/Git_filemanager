{"ast":null,"code":"import { DoubleIndexedKV } from './double-indexed-kv';\nvar Registry = /** @class */function () {\n  function Registry(generateIdentifier) {\n    this.generateIdentifier = generateIdentifier;\n    this.kv = new DoubleIndexedKV();\n  }\n  Registry.prototype.register = function (value, identifier) {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n    this.kv.set(identifier, value);\n  };\n  Registry.prototype.clear = function () {\n    this.kv.clear();\n  };\n  Registry.prototype.getIdentifier = function (value) {\n    return this.kv.getByValue(value);\n  };\n  Registry.prototype.getValue = function (identifier) {\n    return this.kv.getByKey(identifier);\n  };\n  return Registry;\n}();\nexport { Registry };","map":{"version":3,"names":["DoubleIndexedKV","Registry","generateIdentifier","kv","prototype","register","value","identifier","getByValue","set","clear","getIdentifier","getValue","getByKey"],"sources":["C:\\Users\\parkj\\Desktop\\OSS\\Git_filemanager\\frontend\\node_modules\\superjson\\src\\registry.ts"],"sourcesContent":["import { DoubleIndexedKV } from './double-indexed-kv';\r\n\r\nexport class Registry<T> {\r\n  private kv = new DoubleIndexedKV<string, T>();\r\n\r\n  constructor(private readonly generateIdentifier: (v: T) => string) {}\r\n\r\n  register(value: T, identifier?: string): void {\r\n    if (this.kv.getByValue(value)) {\r\n      return;\r\n    }\r\n\r\n    if (!identifier) {\r\n      identifier = this.generateIdentifier(value);\r\n    }\r\n\r\n    this.kv.set(identifier, value);\r\n  }\r\n\r\n  clear(): void {\r\n    this.kv.clear();\r\n  }\r\n\r\n  getIdentifier(value: T) {\r\n    return this.kv.getByValue(value);\r\n  }\r\n\r\n  getValue(identifier: string) {\r\n    return this.kv.getByKey(identifier);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,qBAAqB;AAErD,IAAAC,QAAA;EAGE,SAAAA,SAA6BC,kBAAoC;IAApC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IAFvC,KAAAC,EAAE,GAAG,IAAIH,eAAe,EAAa;EAEuB;EAEpEC,QAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR,UAASC,KAAQ,EAAEC,UAAmB;IACpC,IAAI,IAAI,CAACJ,EAAE,CAACK,UAAU,CAACF,KAAK,CAAC,EAAE;MAC7B;;IAGF,IAAI,CAACC,UAAU,EAAE;MACfA,UAAU,GAAG,IAAI,CAACL,kBAAkB,CAACI,KAAK,CAAC;;IAG7C,IAAI,CAACH,EAAE,CAACM,GAAG,CAACF,UAAU,EAAED,KAAK,CAAC;EAChC,CAAC;EAEDL,QAAA,CAAAG,SAAA,CAAAM,KAAK,GAAL;IACE,IAAI,CAACP,EAAE,CAACO,KAAK,EAAE;EACjB,CAAC;EAEDT,QAAA,CAAAG,SAAA,CAAAO,aAAa,GAAb,UAAcL,KAAQ;IACpB,OAAO,IAAI,CAACH,EAAE,CAACK,UAAU,CAACF,KAAK,CAAC;EAClC,CAAC;EAEDL,QAAA,CAAAG,SAAA,CAAAQ,QAAQ,GAAR,UAASL,UAAkB;IACzB,OAAO,IAAI,CAACJ,EAAE,CAACU,QAAQ,CAACN,UAAU,CAAC;EACrC,CAAC;EACH,OAAAN,QAAC;AAAD,CAAC,CA5BD"},"metadata":{},"sourceType":"module","externalDependencies":[]}