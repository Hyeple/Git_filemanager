{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\nfunction getAlphaColor(frontColor, backgroundColor) {\n  var _TinyColor$toRgb = new TinyColor(frontColor).toRgb(),\n    fR = _TinyColor$toRgb.r,\n    fG = _TinyColor$toRgb.g,\n    fB = _TinyColor$toRgb.b,\n    originAlpha = _TinyColor$toRgb.a;\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n  var _TinyColor$toRgb2 = new TinyColor(backgroundColor).toRgb(),\n    bR = _TinyColor$toRgb2.r,\n    bG = _TinyColor$toRgb2.g,\n    bB = _TinyColor$toRgb2.b;\n  for (var fA = 0.01; fA <= 1; fA += 0.01) {\n    var r = Math.round((fR - bR * (1 - fA)) / fA);\n    var g = Math.round((fG - bG * (1 - fA)) / fA);\n    var b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\n      return new TinyColor({\n        r: r,\n        g: g,\n        b: b,\n        a: Math.round(fA * 100) / 100\n      }).toRgbString();\n    }\n  }\n  // fallback\n  /* istanbul ignore next */\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\nexport default getAlphaColor;","map":{"version":3,"names":["TinyColor","isStableColor","color","getAlphaColor","frontColor","backgroundColor","_TinyColor$toRgb","toRgb","fR","r","fG","g","fB","b","originAlpha","a","_TinyColor$toRgb2","bR","bG","bB","fA","Math","round","toRgbString"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/antd/es/theme/util/getAlphaColor.js"],"sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\r\nfunction isStableColor(color) {\r\n  return color >= 0 && color <= 255;\r\n}\r\nfunction getAlphaColor(frontColor, backgroundColor) {\r\n  const {\r\n    r: fR,\r\n    g: fG,\r\n    b: fB,\r\n    a: originAlpha\r\n  } = new TinyColor(frontColor).toRgb();\r\n  if (originAlpha < 1) {\r\n    return frontColor;\r\n  }\r\n  const {\r\n    r: bR,\r\n    g: bG,\r\n    b: bB\r\n  } = new TinyColor(backgroundColor).toRgb();\r\n  for (let fA = 0.01; fA <= 1; fA += 0.01) {\r\n    const r = Math.round((fR - bR * (1 - fA)) / fA);\r\n    const g = Math.round((fG - bG * (1 - fA)) / fA);\r\n    const b = Math.round((fB - bB * (1 - fA)) / fA);\r\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\r\n      return new TinyColor({\r\n        r,\r\n        g,\r\n        b,\r\n        a: Math.round(fA * 100) / 100\r\n      }).toRgbString();\r\n    }\r\n  }\r\n  // fallback\r\n  /* istanbul ignore next */\r\n  return new TinyColor({\r\n    r: fR,\r\n    g: fG,\r\n    b: fB,\r\n    a: 1\r\n  }).toRgbString();\r\n}\r\nexport default getAlphaColor;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;AACnC;AACA,SAASC,aAAaA,CAACC,UAAU,EAAEC,eAAe,EAAE;EAClD,IAAAC,gBAAA,GAKI,IAAIN,SAAS,CAACI,UAAU,CAAC,CAACG,KAAK,CAAC,CAAC;IAJhCC,EAAE,GAAAF,gBAAA,CAALG,CAAC;IACEC,EAAE,GAAAJ,gBAAA,CAALK,CAAC;IACEC,EAAE,GAAAN,gBAAA,CAALO,CAAC;IACEC,WAAW,GAAAR,gBAAA,CAAdS,CAAC;EAEH,IAAID,WAAW,GAAG,CAAC,EAAE;IACnB,OAAOV,UAAU;EACnB;EACA,IAAAY,iBAAA,GAII,IAAIhB,SAAS,CAACK,eAAe,CAAC,CAACE,KAAK,CAAC,CAAC;IAHrCU,EAAE,GAAAD,iBAAA,CAALP,CAAC;IACES,EAAE,GAAAF,iBAAA,CAALL,CAAC;IACEQ,EAAE,GAAAH,iBAAA,CAALH,CAAC;EAEH,KAAK,IAAIO,EAAE,GAAG,IAAI,EAAEA,EAAE,IAAI,CAAC,EAAEA,EAAE,IAAI,IAAI,EAAE;IACvC,IAAMX,CAAC,GAAGY,IAAI,CAACC,KAAK,CAAC,CAACd,EAAE,GAAGS,EAAE,IAAI,CAAC,GAAGG,EAAE,CAAC,IAAIA,EAAE,CAAC;IAC/C,IAAMT,CAAC,GAAGU,IAAI,CAACC,KAAK,CAAC,CAACZ,EAAE,GAAGQ,EAAE,IAAI,CAAC,GAAGE,EAAE,CAAC,IAAIA,EAAE,CAAC;IAC/C,IAAMP,CAAC,GAAGQ,IAAI,CAACC,KAAK,CAAC,CAACV,EAAE,GAAGO,EAAE,IAAI,CAAC,GAAGC,EAAE,CAAC,IAAIA,EAAE,CAAC;IAC/C,IAAInB,aAAa,CAACQ,CAAC,CAAC,IAAIR,aAAa,CAACU,CAAC,CAAC,IAAIV,aAAa,CAACY,CAAC,CAAC,EAAE;MAC5D,OAAO,IAAIb,SAAS,CAAC;QACnBS,CAAC,EAADA,CAAC;QACDE,CAAC,EAADA,CAAC;QACDE,CAAC,EAADA,CAAC;QACDE,CAAC,EAAEM,IAAI,CAACC,KAAK,CAACF,EAAE,GAAG,GAAG,CAAC,GAAG;MAC5B,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;IAClB;EACF;EACA;EACA;EACA,OAAO,IAAIvB,SAAS,CAAC;IACnBS,CAAC,EAAED,EAAE;IACLG,CAAC,EAAED,EAAE;IACLG,CAAC,EAAED,EAAE;IACLG,CAAC,EAAE;EACL,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC;AAClB;AACA,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}