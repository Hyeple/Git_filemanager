{"ast":null,"code":"import _defineProperty from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport { Circle as RCCircle } from 'rc-progress';\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport { getPercentage, getSize, getStrokeColor } from './utils';\nvar CIRCLE_MIN_STROKE_WIDTH = 3;\nvar getMinPercent = function getMinPercent(width) {\n  return CIRCLE_MIN_STROKE_WIDTH / width * 100;\n};\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n    _props$trailColor = props.trailColor,\n    trailColor = _props$trailColor === void 0 ? null : _props$trailColor,\n    _props$strokeLinecap = props.strokeLinecap,\n    strokeLinecap = _props$strokeLinecap === void 0 ? 'round' : _props$strokeLinecap,\n    gapPosition = props.gapPosition,\n    gapDegree = props.gapDegree,\n    _props$width = props.width,\n    originWidth = _props$width === void 0 ? 120 : _props$width,\n    type = props.type,\n    children = props.children,\n    success = props.success,\n    size = props.size;\n  var mergedSize = size !== null && size !== void 0 ? size : [originWidth, originWidth];\n  var _getSize = getSize(mergedSize, 'circle'),\n    _getSize2 = _slicedToArray(_getSize, 2),\n    width = _getSize2[0],\n    height = _getSize2[1];\n  var strokeWidth = props.strokeWidth;\n  if (strokeWidth === undefined) {\n    strokeWidth = Math.max(getMinPercent(width), 6);\n  }\n  var circleStyle = {\n    width: width,\n    height: height,\n    fontSize: width * 0.15 + 6\n  };\n  var realGapDegree = React.useMemo(function () {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n    if (type === 'dashboard') {\n      return 75;\n    }\n    return undefined;\n  }, [gapDegree, type]);\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\n  // using className to style stroke color\n  var isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  var strokeColor = getStrokeColor({\n    success: success,\n    strokeColor: props.strokeColor\n  });\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  var circleContent = /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, width <= 20 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: children\n  }, /*#__PURE__*/React.createElement(\"span\", null, circleContent)) : /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children));\n};\nexport default Circle;","map":{"version":3,"names":["classNames","Circle","RCCircle","React","Tooltip","getPercentage","getSize","getStrokeColor","CIRCLE_MIN_STROKE_WIDTH","getMinPercent","width","props","prefixCls","_props$trailColor","trailColor","_props$strokeLinecap","strokeLinecap","gapPosition","gapDegree","_props$width","originWidth","type","children","success","size","mergedSize","_getSize","_getSize2","_slicedToArray","height","strokeWidth","undefined","Math","max","circleStyle","fontSize","realGapDegree","useMemo","gapPos","isGradient","Object","prototype","toString","call","strokeColor","wrapperClassName","concat","_defineProperty","circleContent","createElement","percent","trailWidth","className","style","title","Fragment"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/antd/es/progress/Circle.js"],"sourcesContent":["import classNames from 'classnames';\r\nimport { Circle as RCCircle } from 'rc-progress';\r\nimport * as React from 'react';\r\nimport Tooltip from '../tooltip';\r\nimport { getPercentage, getSize, getStrokeColor } from './utils';\r\nconst CIRCLE_MIN_STROKE_WIDTH = 3;\r\nconst getMinPercent = width => CIRCLE_MIN_STROKE_WIDTH / width * 100;\r\nconst Circle = props => {\r\n  const {\r\n    prefixCls,\r\n    trailColor = null,\r\n    strokeLinecap = 'round',\r\n    gapPosition,\r\n    gapDegree,\r\n    width: originWidth = 120,\r\n    type,\r\n    children,\r\n    success,\r\n    size\r\n  } = props;\r\n  const mergedSize = size !== null && size !== void 0 ? size : [originWidth, originWidth];\r\n  const [width, height] = getSize(mergedSize, 'circle');\r\n  let {\r\n    strokeWidth\r\n  } = props;\r\n  if (strokeWidth === undefined) {\r\n    strokeWidth = Math.max(getMinPercent(width), 6);\r\n  }\r\n  const circleStyle = {\r\n    width,\r\n    height,\r\n    fontSize: width * 0.15 + 6\r\n  };\r\n  const realGapDegree = React.useMemo(() => {\r\n    // Support gapDeg = 0 when type = 'dashboard'\r\n    if (gapDegree || gapDegree === 0) {\r\n      return gapDegree;\r\n    }\r\n    if (type === 'dashboard') {\r\n      return 75;\r\n    }\r\n    return undefined;\r\n  }, [gapDegree, type]);\r\n  const gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\r\n  // using className to style stroke color\r\n  const isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\r\n  const strokeColor = getStrokeColor({\r\n    success,\r\n    strokeColor: props.strokeColor\r\n  });\r\n  const wrapperClassName = classNames(`${prefixCls}-inner`, {\r\n    [`${prefixCls}-circle-gradient`]: isGradient\r\n  });\r\n  const circleContent = /*#__PURE__*/React.createElement(RCCircle, {\r\n    percent: getPercentage(props),\r\n    strokeWidth: strokeWidth,\r\n    trailWidth: strokeWidth,\r\n    strokeColor: strokeColor,\r\n    strokeLinecap: strokeLinecap,\r\n    trailColor: trailColor,\r\n    prefixCls: prefixCls,\r\n    gapDegree: realGapDegree,\r\n    gapPosition: gapPos\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"div\", {\r\n    className: wrapperClassName,\r\n    style: circleStyle\r\n  }, width <= 20 ? /*#__PURE__*/React.createElement(Tooltip, {\r\n    title: children\r\n  }, /*#__PURE__*/React.createElement(\"span\", null, circleContent)) : /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children));\r\n};\r\nexport default Circle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}