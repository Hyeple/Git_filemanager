{"ast":null,"code":"import _slicedToArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nfunction useMediaQuery(query) {\n  // Keep track of the preference in state, start with the current match\n  var _React$useState = React.useState(function () {\n      if (typeof window !== 'undefined') {\n        return window.matchMedia(query).matches;\n      }\n      return;\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isMatch = _React$useState2[0],\n    setIsMatch = _React$useState2[1]; // Watch for changes\n\n  React.useEffect(function () {\n    if (typeof window !== 'undefined') {\n      // Create a matcher\n      var matcher = window.matchMedia(query); // Create our handler\n\n      var onChange = function onChange(_ref) {\n        var matches = _ref.matches;\n        return setIsMatch(matches);\n      }; // Listen for changes\n\n      matcher.addListener(onChange);\n      return function () {\n        // Stop listening for changes\n        matcher.removeListener(onChange);\n      };\n    }\n    return;\n  }, [isMatch, query, setIsMatch]);\n  return isMatch;\n}\nexport { useMediaQuery as default };","map":{"version":3,"names":["useMediaQuery","query","_React$useState","React","useState","window","matchMedia","matches","_React$useState2","_slicedToArray","isMatch","setIsMatch","useEffect","matcher","onChange","_ref","addListener","removeListener"],"sources":["C:\\Users\\parkj\\Desktop\\OSS\\Git_filemanager\\frontend\\node_modules\\@tanstack\\react-query-devtools\\src\\useMediaQuery.ts"],"sourcesContent":["import * as React from 'react'\n\nexport default function useMediaQuery(query: string): boolean | undefined {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches\n    }\n    return\n  })\n\n  // Watch for changes\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Create a matcher\n      const matcher = window.matchMedia(query)\n\n      // Create our handler\n      const onChange = ({ matches }: { matches: boolean }) =>\n        setIsMatch(matches)\n\n      // Listen for changes\n      matcher.addListener(onChange)\n\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange)\n      }\n    }\n    return\n  }, [isMatch, query, setIsMatch])\n\n  return isMatch\n}\n"],"mappings":";;AAEe,SAASA,aAATA,CAAuBC,KAAvB,EAA2D;EACxE;EACA,IAAAC,eAAA,GAA8BC,KAAK,CAACC,QAAN,CAAe,YAAM;MACjD,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;QACjC,OAAOA,MAAM,CAACC,UAAP,CAAkBL,KAAlB,EAAyBM,OAAhC;MACD;MACD;KAJ4B,CAA9B;IAAAC,gBAAA,GAAAC,cAAA,CAAAP,eAAA;IAAOQ,OAAD,GAAAF,gBAAA;IAAUG,UAAV,GAAAH,gBAAA,IAFkE;;EAUxEL,KAAK,CAACS,SAAN,CAAgB,YAAM;IACpB,IAAI,OAAOP,MAAP,KAAkB,WAAtB,EAAmC;MACjC;MACA,IAAMQ,OAAO,GAAGR,MAAM,CAACC,UAAP,CAAkBL,KAAlB,CAAhB,CAFiC;;MAKjC,IAAMa,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA;QAAA,IAAMR,OAAA,GAAAQ,IAAA,CAAAR,OAAA;QAAA,OAClBI,UAAU,CAACJ,OAAD,CADZ;MAAA,EALiC;;MASjCM,OAAO,CAACG,WAAR,CAAoBF,QAApB;MAEA,OAAO,YAAM;QACX;QACAD,OAAO,CAACI,cAAR,CAAuBH,QAAvB;OAFF;IAID;IACD;EACD,CAlBD,EAkBG,CAACJ,OAAD,EAAUT,KAAV,EAAiBU,UAAjB,CAlBH;EAoBA,OAAOD,OAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}