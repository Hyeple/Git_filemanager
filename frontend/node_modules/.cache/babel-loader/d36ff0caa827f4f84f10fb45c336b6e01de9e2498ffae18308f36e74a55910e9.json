{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"];\n/**\r\n * Handle virtual list of the TreeNodes.\r\n */\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nvar noop = function noop() {};\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n  nodes: [MotionNode]\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  title: null,\n  key: MOTION_KEY,\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\r\n * We only need get visible content items to play the animation.\r\n */\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\n  if (virtual === false || !height) {\n    return list;\n  }\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\nfunction itemKey(item) {\n  var key = item.key,\n    pos = item.pos;\n  return getKey(key, pos);\n}\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n  return path;\n}\nvar NodeList = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n    data = props.data,\n    selectable = props.selectable,\n    checkable = props.checkable,\n    expandedKeys = props.expandedKeys,\n    selectedKeys = props.selectedKeys,\n    checkedKeys = props.checkedKeys,\n    loadedKeys = props.loadedKeys,\n    loadingKeys = props.loadingKeys,\n    halfCheckedKeys = props.halfCheckedKeys,\n    keyEntities = props.keyEntities,\n    disabled = props.disabled,\n    dragging = props.dragging,\n    dragOverNodeKey = props.dragOverNodeKey,\n    dropPosition = props.dropPosition,\n    motion = props.motion,\n    height = props.height,\n    itemHeight = props.itemHeight,\n    virtual = props.virtual,\n    focusable = props.focusable,\n    activeItem = props.activeItem,\n    focused = props.focused,\n    tabIndex = props.tabIndex,\n    onKeyDown = props.onKeyDown,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onActiveChange = props.onActiveChange,\n    onListChangeStart = props.onListChangeStart,\n    onListChangeEnd = props.onListChangeEnd,\n    domProps = _objectWithoutProperties(props, _excluded);\n  // =============================== Ref ================================\n  var listRef = React.useRef(null);\n  var indentMeasurerRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      },\n      getIndentWidth: function getIndentWidth() {\n        return indentMeasurerRef.current.offsetWidth;\n      }\n    };\n  });\n  // ============================== Motion ==============================\n  var _React$useState = React.useState(expandedKeys),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    prevExpandedKeys = _React$useState2[0],\n    setPrevExpandedKeys = _React$useState2[1];\n  var _React$useState3 = React.useState(data),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    prevData = _React$useState4[0],\n    setPrevData = _React$useState4[1];\n  var _React$useState5 = React.useState(data),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    transitionData = _React$useState6[0],\n    setTransitionData = _React$useState6[1];\n  var _React$useState7 = React.useState([]),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    transitionRange = _React$useState8[0],\n    setTransitionRange = _React$useState8[1];\n  var _React$useState9 = React.useState(null),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    motionType = _React$useState10[0],\n    setMotionType = _React$useState10[1];\n  // When motion end but data change, this will makes data back to previous one\n  var dataRef = React.useRef(data);\n  dataRef.current = data;\n  function onMotionEnd() {\n    var latestData = dataRef.current;\n    setPrevData(latestData);\n    setTransitionData(latestData);\n    setTransitionRange([]);\n    setMotionType(null);\n    onListChangeEnd();\n  }\n  // Do animation if expanded keys changed\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.key;\n          return key === diffExpanded.key;\n        });\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.key;\n          return key === diffExpanded.key;\n        });\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\n        var _newTransitionData = data.slice();\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]);\n  // We should clean up motion if is changed by dragging\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, focused && activeItem && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop,\n    \"aria-label\": \"for screen reader\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-treenode\"),\n    \"aria-hidden\": true,\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      height: 0,\n      overflow: 'hidden',\n      border: 0,\n      padding: 0\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-indent\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: indentMeasurerRef,\n    className: \"\".concat(prefixCls, \"-indent-unit\")\n  }))), /*#__PURE__*/React.createElement(VirtualList, _extends({}, domProps, {\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef,\n    onVisibleChange: function onVisibleChange(originList, fullList) {\n      var originSet = new Set(originList);\n      var restList = fullList.filter(function (item) {\n        return !originSet.has(item);\n      });\n      // Motion node is not render. Skip motion\n      if (restList.some(function (item) {\n        return itemKey(item) === MOTION_KEY;\n      })) {\n        onMotionEnd();\n      }\n    }\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n      restProps = _extends({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n      title = treeNode.title,\n      key = treeNode.key,\n      isStart = treeNode.isStart,\n      isEnd = treeNode.isEnd;\n    var mergedKey = getKey(key, pos);\n    delete restProps.key;\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return /*#__PURE__*/React.createElement(MotionTreeNode, _extends({}, restProps, treeNodeProps, {\n      title: title,\n      active: !!activeItem && key === activeItem.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionStart: onListChangeStart,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n});\nNodeList.displayName = 'NodeList';\nexport default NodeList;","map":{"version":3,"names":["_objectDestructuringEmpty","_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","VirtualList","MotionTreeNode","findExpandedKeys","getExpandRange","getTreeNodeProps","getKey","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","noop","MOTION_KEY","concat","Math","random","MotionNode","key","MotionEntity","level","index","pos","node","nodes","MotionFlattenData","parent","children","data","title","isStart","isEnd","getMinimumRangeTransitionRange","list","virtual","itemHeight","slice","ceil","itemKey","item","getAccessibilityPath","path","String","current","NodeList","forwardRef","props","ref","prefixCls","selectable","checkable","expandedKeys","selectedKeys","checkedKeys","loadedKeys","loadingKeys","halfCheckedKeys","keyEntities","disabled","dragging","dragOverNodeKey","dropPosition","motion","focusable","activeItem","focused","tabIndex","onKeyDown","onFocus","onBlur","onActiveChange","onListChangeStart","onListChangeEnd","domProps","listRef","useRef","indentMeasurerRef","useImperativeHandle","scrollTo","scroll","getIndentWidth","offsetWidth","_React$useState","useState","_React$useState2","prevExpandedKeys","setPrevExpandedKeys","_React$useState3","_React$useState4","prevData","setPrevData","_React$useState5","_React$useState6","transitionData","setTransitionData","_React$useState7","_React$useState8","transitionRange","setTransitionRange","_React$useState9","_React$useState10","motionType","setMotionType","dataRef","onMotionEnd","latestData","useEffect","diffExpanded","add","keyIndex","findIndex","_ref","rangeNodes","newTransitionData","splice","_keyIndex","_ref2","_rangeNodes","_newTransitionData","mergedData","treeNodeRequiredProps","createElement","Fragment","style","value","onChange","className","position","pointerEvents","visibility","fullHeight","onVisibleChange","originList","fullList","originSet","Set","restList","filter","has","some","treeNode","restProps","mergedKey","treeNodeProps","active","motionNodes","onMotionStart","onMouseMove","displayName"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/rc-tree/es/NodeList.js"],"sourcesContent":["import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nvar _excluded = [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"];\r\n/**\r\n * Handle virtual list of the TreeNodes.\r\n */\r\nimport * as React from 'react';\r\nimport VirtualList from 'rc-virtual-list';\r\nimport MotionTreeNode from './MotionTreeNode';\r\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\r\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\r\nvar HIDDEN_STYLE = {\r\n  width: 0,\r\n  height: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  opacity: 0,\r\n  border: 0,\r\n  padding: 0,\r\n  margin: 0\r\n};\r\nvar noop = function noop() {};\r\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\r\nvar MotionNode = {\r\n  key: MOTION_KEY\r\n};\r\nexport var MotionEntity = {\r\n  key: MOTION_KEY,\r\n  level: 0,\r\n  index: 0,\r\n  pos: '0',\r\n  node: MotionNode,\r\n  nodes: [MotionNode]\r\n};\r\nvar MotionFlattenData = {\r\n  parent: null,\r\n  children: [],\r\n  pos: MotionEntity.pos,\r\n  data: MotionNode,\r\n  title: null,\r\n  key: MOTION_KEY,\r\n  /** Hold empty list here since we do not use it */\r\n  isStart: [],\r\n  isEnd: []\r\n};\r\n/**\r\n * We only need get visible content items to play the animation.\r\n */\r\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\r\n  if (virtual === false || !height) {\r\n    return list;\r\n  }\r\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\r\n}\r\nfunction itemKey(item) {\r\n  var key = item.key,\r\n    pos = item.pos;\r\n  return getKey(key, pos);\r\n}\r\nfunction getAccessibilityPath(item) {\r\n  var path = String(item.data.key);\r\n  var current = item;\r\n  while (current.parent) {\r\n    current = current.parent;\r\n    path = \"\".concat(current.data.key, \" > \").concat(path);\r\n  }\r\n  return path;\r\n}\r\nvar NodeList = /*#__PURE__*/React.forwardRef(function (props, ref) {\r\n  var prefixCls = props.prefixCls,\r\n    data = props.data,\r\n    selectable = props.selectable,\r\n    checkable = props.checkable,\r\n    expandedKeys = props.expandedKeys,\r\n    selectedKeys = props.selectedKeys,\r\n    checkedKeys = props.checkedKeys,\r\n    loadedKeys = props.loadedKeys,\r\n    loadingKeys = props.loadingKeys,\r\n    halfCheckedKeys = props.halfCheckedKeys,\r\n    keyEntities = props.keyEntities,\r\n    disabled = props.disabled,\r\n    dragging = props.dragging,\r\n    dragOverNodeKey = props.dragOverNodeKey,\r\n    dropPosition = props.dropPosition,\r\n    motion = props.motion,\r\n    height = props.height,\r\n    itemHeight = props.itemHeight,\r\n    virtual = props.virtual,\r\n    focusable = props.focusable,\r\n    activeItem = props.activeItem,\r\n    focused = props.focused,\r\n    tabIndex = props.tabIndex,\r\n    onKeyDown = props.onKeyDown,\r\n    onFocus = props.onFocus,\r\n    onBlur = props.onBlur,\r\n    onActiveChange = props.onActiveChange,\r\n    onListChangeStart = props.onListChangeStart,\r\n    onListChangeEnd = props.onListChangeEnd,\r\n    domProps = _objectWithoutProperties(props, _excluded);\r\n  // =============================== Ref ================================\r\n  var listRef = React.useRef(null);\r\n  var indentMeasurerRef = React.useRef(null);\r\n  React.useImperativeHandle(ref, function () {\r\n    return {\r\n      scrollTo: function scrollTo(scroll) {\r\n        listRef.current.scrollTo(scroll);\r\n      },\r\n      getIndentWidth: function getIndentWidth() {\r\n        return indentMeasurerRef.current.offsetWidth;\r\n      }\r\n    };\r\n  });\r\n  // ============================== Motion ==============================\r\n  var _React$useState = React.useState(expandedKeys),\r\n    _React$useState2 = _slicedToArray(_React$useState, 2),\r\n    prevExpandedKeys = _React$useState2[0],\r\n    setPrevExpandedKeys = _React$useState2[1];\r\n  var _React$useState3 = React.useState(data),\r\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\r\n    prevData = _React$useState4[0],\r\n    setPrevData = _React$useState4[1];\r\n  var _React$useState5 = React.useState(data),\r\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\r\n    transitionData = _React$useState6[0],\r\n    setTransitionData = _React$useState6[1];\r\n  var _React$useState7 = React.useState([]),\r\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\r\n    transitionRange = _React$useState8[0],\r\n    setTransitionRange = _React$useState8[1];\r\n  var _React$useState9 = React.useState(null),\r\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\r\n    motionType = _React$useState10[0],\r\n    setMotionType = _React$useState10[1];\r\n  // When motion end but data change, this will makes data back to previous one\r\n  var dataRef = React.useRef(data);\r\n  dataRef.current = data;\r\n  function onMotionEnd() {\r\n    var latestData = dataRef.current;\r\n    setPrevData(latestData);\r\n    setTransitionData(latestData);\r\n    setTransitionRange([]);\r\n    setMotionType(null);\r\n    onListChangeEnd();\r\n  }\r\n  // Do animation if expanded keys changed\r\n  React.useEffect(function () {\r\n    setPrevExpandedKeys(expandedKeys);\r\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\r\n    if (diffExpanded.key !== null) {\r\n      if (diffExpanded.add) {\r\n        var keyIndex = prevData.findIndex(function (_ref) {\r\n          var key = _ref.key;\r\n          return key === diffExpanded.key;\r\n        });\r\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\r\n        var newTransitionData = prevData.slice();\r\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\r\n        setTransitionData(newTransitionData);\r\n        setTransitionRange(rangeNodes);\r\n        setMotionType('show');\r\n      } else {\r\n        var _keyIndex = data.findIndex(function (_ref2) {\r\n          var key = _ref2.key;\r\n          return key === diffExpanded.key;\r\n        });\r\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\r\n        var _newTransitionData = data.slice();\r\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\r\n        setTransitionData(_newTransitionData);\r\n        setTransitionRange(_rangeNodes);\r\n        setMotionType('hide');\r\n      }\r\n    } else if (prevData !== data) {\r\n      // If whole data changed, we just refresh the list\r\n      setPrevData(data);\r\n      setTransitionData(data);\r\n    }\r\n  }, [expandedKeys, data]);\r\n  // We should clean up motion if is changed by dragging\r\n  React.useEffect(function () {\r\n    if (!dragging) {\r\n      onMotionEnd();\r\n    }\r\n  }, [dragging]);\r\n  var mergedData = motion ? transitionData : data;\r\n  var treeNodeRequiredProps = {\r\n    expandedKeys: expandedKeys,\r\n    selectedKeys: selectedKeys,\r\n    loadedKeys: loadedKeys,\r\n    loadingKeys: loadingKeys,\r\n    checkedKeys: checkedKeys,\r\n    halfCheckedKeys: halfCheckedKeys,\r\n    dragOverNodeKey: dragOverNodeKey,\r\n    dropPosition: dropPosition,\r\n    keyEntities: keyEntities\r\n  };\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, focused && activeItem && /*#__PURE__*/React.createElement(\"span\", {\r\n    style: HIDDEN_STYLE,\r\n    \"aria-live\": \"assertive\"\r\n  }, getAccessibilityPath(activeItem)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\r\n    style: HIDDEN_STYLE,\r\n    disabled: focusable === false || disabled,\r\n    tabIndex: focusable !== false ? tabIndex : null,\r\n    onKeyDown: onKeyDown,\r\n    onFocus: onFocus,\r\n    onBlur: onBlur,\r\n    value: \"\",\r\n    onChange: noop,\r\n    \"aria-label\": \"for screen reader\"\r\n  })), /*#__PURE__*/React.createElement(\"div\", {\r\n    className: \"\".concat(prefixCls, \"-treenode\"),\r\n    \"aria-hidden\": true,\r\n    style: {\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      visibility: 'hidden',\r\n      height: 0,\r\n      overflow: 'hidden',\r\n      border: 0,\r\n      padding: 0\r\n    }\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    className: \"\".concat(prefixCls, \"-indent\")\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    ref: indentMeasurerRef,\r\n    className: \"\".concat(prefixCls, \"-indent-unit\")\r\n  }))), /*#__PURE__*/React.createElement(VirtualList, _extends({}, domProps, {\r\n    data: mergedData,\r\n    itemKey: itemKey,\r\n    height: height,\r\n    fullHeight: false,\r\n    virtual: virtual,\r\n    itemHeight: itemHeight,\r\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\r\n    ref: listRef,\r\n    onVisibleChange: function onVisibleChange(originList, fullList) {\r\n      var originSet = new Set(originList);\r\n      var restList = fullList.filter(function (item) {\r\n        return !originSet.has(item);\r\n      });\r\n      // Motion node is not render. Skip motion\r\n      if (restList.some(function (item) {\r\n        return itemKey(item) === MOTION_KEY;\r\n      })) {\r\n        onMotionEnd();\r\n      }\r\n    }\r\n  }), function (treeNode) {\r\n    var pos = treeNode.pos,\r\n      restProps = _extends({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\r\n      title = treeNode.title,\r\n      key = treeNode.key,\r\n      isStart = treeNode.isStart,\r\n      isEnd = treeNode.isEnd;\r\n    var mergedKey = getKey(key, pos);\r\n    delete restProps.key;\r\n    delete restProps.children;\r\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\r\n    return /*#__PURE__*/React.createElement(MotionTreeNode, _extends({}, restProps, treeNodeProps, {\r\n      title: title,\r\n      active: !!activeItem && key === activeItem.key,\r\n      pos: pos,\r\n      data: treeNode.data,\r\n      isStart: isStart,\r\n      isEnd: isEnd,\r\n      motion: motion,\r\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\r\n      motionType: motionType,\r\n      onMotionStart: onListChangeStart,\r\n      onMotionEnd: onMotionEnd,\r\n      treeNodeRequiredProps: treeNodeRequiredProps,\r\n      onMouseMove: function onMouseMove() {\r\n        onActiveChange(null);\r\n      }\r\n    }));\r\n  }));\r\n});\r\nNodeList.displayName = 'NodeList';\r\nexport default NodeList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}