{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"pageParam\"],\n  _excluded2 = [\"pageParam\"];\nimport { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\nvar InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inherits(InfiniteQueryObserver, _QueryObserver);\n  var _super = _createSuper(InfiniteQueryObserver);\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    _classCallCheck(this, InfiniteQueryObserver);\n    return _super.call(this, client, options);\n  }\n  _createClass(InfiniteQueryObserver, [{\n    key: \"bindMethods\",\n    value: function bindMethods() {\n      _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"bindMethods\", this).call(this);\n      this.fetchNextPage = this.fetchNextPage.bind(this);\n      this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options, notifyOptions) {\n      _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"setOptions\", this).call(this, _objectSpread(_objectSpread({}, options), {}, {\n        behavior: infiniteQueryBehavior()\n      }), notifyOptions);\n    }\n  }, {\n    key: \"getOptimisticResult\",\n    value: function getOptimisticResult(options) {\n      options.behavior = infiniteQueryBehavior();\n      return _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"getOptimisticResult\", this).call(this, options);\n    }\n  }, {\n    key: \"fetchNextPage\",\n    value: function fetchNextPage() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        pageParam = _ref.pageParam,\n        options = _objectWithoutProperties(_ref, _excluded);\n      return this.fetch(_objectSpread(_objectSpread({}, options), {}, {\n        meta: {\n          fetchMore: {\n            direction: 'forward',\n            pageParam: pageParam\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"fetchPreviousPage\",\n    value: function fetchPreviousPage() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        pageParam = _ref2.pageParam,\n        options = _objectWithoutProperties(_ref2, _excluded2);\n      return this.fetch(_objectSpread(_objectSpread({}, options), {}, {\n        meta: {\n          fetchMore: {\n            direction: 'backward',\n            pageParam: pageParam\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"createResult\",\n    value: function createResult(query, options) {\n      var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n      var state = query.state;\n      var result = _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"createResult\", this).call(this, query, options);\n      var isFetching = result.isFetching,\n        isRefetching = result.isRefetching;\n      var isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n      var isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n      return _objectSpread(_objectSpread({}, result), {}, {\n        fetchNextPage: this.fetchNextPage,\n        fetchPreviousPage: this.fetchPreviousPage,\n        hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n        hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n        isFetchingNextPage: isFetchingNextPage,\n        isFetchingPreviousPage: isFetchingPreviousPage,\n        isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n      });\n    }\n  }]);\n  return InfiniteQueryObserver;\n}(QueryObserver);\nexport { InfiniteQueryObserver };","map":{"version":3,"names":["InfiniteQueryObserver","_QueryObserver","_inherits","_super","_createSuper","client","options","_classCallCheck","call","_createClass","key","value","bindMethods","_get","_getPrototypeOf","prototype","fetchNextPage","bind","fetchPreviousPage","setOptions","notifyOptions","_objectSpread","behavior","infiniteQueryBehavior","getOptimisticResult","_ref","arguments","length","undefined","pageParam","_objectWithoutProperties","_excluded","fetch","meta","fetchMore","direction","_ref2","_excluded2","createResult","query","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_state$data","_state$data2","state","result","isFetching","isRefetching","isFetchingNextPage","fetchMeta","isFetchingPreviousPage","hasNextPage","data","pages","hasPreviousPage","QueryObserver"],"sources":["C:\\Users\\parkj\\Desktop\\OSS\\Git_filemanager\\frontend\\node_modules\\@tanstack\\query-core\\src\\infiniteQueryObserver.ts"],"sourcesContent":["import type {\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions, ObserverFetchOptions } from './queryObserver'\nimport { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  InfiniteData<TData>,\n  InfiniteData<TQueryData>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: (\n    listener?: InfiniteQueryObserverListener<TData, TError>,\n  ) => () => void\n\n  // Type override\n  getCurrentResult!: () => InfiniteQueryObserverResult<TData, TError>\n\n  // Type override\n  protected fetch!: (\n    fetchOptions: ObserverFetchOptions,\n  ) => Promise<InfiniteQueryObserverResult<TData, TError>>\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options?: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior(),\n      },\n      notifyOptions,\n    )\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage({ pageParam, ...options }: FetchNextPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward', pageParam },\n      },\n    })\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  }: FetchPreviousPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward', pageParam },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, InfiniteData<TQueryData>, TQueryKey>,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const result = super.createResult(query, options)\n\n    const { isFetching, isRefetching } = result\n\n    const isFetchingNextPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'forward'\n\n    const isFetchingPreviousPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'backward'\n\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data?.pages),\n      hasPreviousPage: hasPreviousPage(options, state.data?.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}