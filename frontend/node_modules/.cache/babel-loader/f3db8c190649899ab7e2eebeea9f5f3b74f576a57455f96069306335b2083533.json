{"ast":null,"code":"import _slicedToArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { presetPrimaryColors } from '@ant-design/colors';\nimport warning from '../_util/warning';\nexport function validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  }\n  if (progress > 100) {\n    return 100;\n  }\n  return progress;\n}\nexport function getSuccessPercent(_ref) {\n  var success = _ref.success,\n    successPercent = _ref.successPercent;\n  var percent = successPercent;\n  /** @deprecated Use `percent` instead */\n  if (success && 'progress' in success) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', '`success.progress` is deprecated. Please use `success.percent` instead.') : void 0;\n    percent = success.progress;\n  }\n  if (success && 'percent' in success) {\n    percent = success.percent;\n  }\n  return percent;\n}\nexport var getPercentage = function getPercentage(_ref2) {\n  var percent = _ref2.percent,\n    success = _ref2.success,\n    successPercent = _ref2.successPercent;\n  var realSuccessPercent = validProgress(getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  }));\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\n};\nexport var getStrokeColor = function getStrokeColor(_ref3) {\n  var _ref3$success = _ref3.success,\n    success = _ref3$success === void 0 ? {} : _ref3$success,\n    strokeColor = _ref3.strokeColor;\n  var successColor = success.strokeColor;\n  return [successColor || presetPrimaryColors.green, strokeColor || null];\n};\nexport var getSize = function getSize(size, type, extra) {\n  var _a, _b, _c, _d;\n  var width = -1;\n  var height = -1;\n  if (type === 'step') {\n    var steps = extra.steps;\n    var strokeWidth = extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      width = size === 'small' ? 2 : 14;\n      height = strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 8;\n    } else if (typeof size === 'number') {\n      width = size;\n      height = size;\n    } else {\n      var _size = _slicedToArray(size, 2);\n      var _size$ = _size[0];\n      width = _size$ === void 0 ? 14 : _size$;\n      var _size$2 = _size[1];\n      height = _size$2 === void 0 ? 8 : _size$2;\n    }\n    width *= steps;\n  } else if (type === 'line') {\n    var _strokeWidth = extra === null || extra === void 0 ? void 0 : extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      height = _strokeWidth || (size === 'small' ? 6 : 8);\n    } else if (typeof size === 'number') {\n      width = size;\n      height = size;\n    } else {\n      var _size2 = _slicedToArray(size, 2);\n      var _size2$ = _size2[0];\n      width = _size2$ === void 0 ? -1 : _size2$;\n      var _size2$2 = _size2[1];\n      height = _size2$2 === void 0 ? 8 : _size2$2;\n    }\n  } else if (type === 'circle' || type === 'dashboard') {\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      var _ref4 = size === 'small' ? [60, 60] : [120, 120];\n      var _ref5 = _slicedToArray(_ref4, 2);\n      width = _ref5[0];\n      height = _ref5[1];\n    } else if (typeof size === 'number') {\n      width = size;\n      height = size;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', 'Type \"circle\" and \"dashbord\" do not accept array as `size`, please use number or preset size instead.') : void 0;\n      }\n      width = (_b = (_a = size[0]) !== null && _a !== void 0 ? _a : size[1]) !== null && _b !== void 0 ? _b : 120;\n      height = (_d = (_c = size[0]) !== null && _c !== void 0 ? _c : size[1]) !== null && _d !== void 0 ? _d : 120;\n    }\n  }\n  return [width, height];\n};","map":{"version":3,"names":["presetPrimaryColors","warning","validProgress","progress","getSuccessPercent","_ref","success","successPercent","percent","process","env","NODE_ENV","getPercentage","_ref2","realSuccessPercent","getStrokeColor","_ref3","_ref3$success","strokeColor","successColor","green","getSize","size","type","extra","_a","_b","_c","_d","width","height","steps","strokeWidth","_size","_slicedToArray","_size$","_size$2","_size2","_size2$","_size2$2","_ref4","_ref5"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/antd/es/progress/utils.js"],"sourcesContent":["import { presetPrimaryColors } from '@ant-design/colors';\r\nimport warning from '../_util/warning';\r\nexport function validProgress(progress) {\r\n  if (!progress || progress < 0) {\r\n    return 0;\r\n  }\r\n  if (progress > 100) {\r\n    return 100;\r\n  }\r\n  return progress;\r\n}\r\nexport function getSuccessPercent(_ref) {\r\n  let {\r\n    success,\r\n    successPercent\r\n  } = _ref;\r\n  let percent = successPercent;\r\n  /** @deprecated Use `percent` instead */\r\n  if (success && 'progress' in success) {\r\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', '`success.progress` is deprecated. Please use `success.percent` instead.') : void 0;\r\n    percent = success.progress;\r\n  }\r\n  if (success && 'percent' in success) {\r\n    percent = success.percent;\r\n  }\r\n  return percent;\r\n}\r\nexport const getPercentage = _ref2 => {\r\n  let {\r\n    percent,\r\n    success,\r\n    successPercent\r\n  } = _ref2;\r\n  const realSuccessPercent = validProgress(getSuccessPercent({\r\n    success,\r\n    successPercent\r\n  }));\r\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\r\n};\r\nexport const getStrokeColor = _ref3 => {\r\n  let {\r\n    success = {},\r\n    strokeColor\r\n  } = _ref3;\r\n  const {\r\n    strokeColor: successColor\r\n  } = success;\r\n  return [successColor || presetPrimaryColors.green, strokeColor || null];\r\n};\r\nexport const getSize = (size, type, extra) => {\r\n  var _a, _b, _c, _d;\r\n  let width = -1;\r\n  let height = -1;\r\n  if (type === 'step') {\r\n    const steps = extra.steps;\r\n    const strokeWidth = extra.strokeWidth;\r\n    if (typeof size === 'string' || typeof size === 'undefined') {\r\n      width = size === 'small' ? 2 : 14;\r\n      height = strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 8;\r\n    } else if (typeof size === 'number') {\r\n      [width, height] = [size, size];\r\n    } else {\r\n      [width = 14, height = 8] = size;\r\n    }\r\n    width *= steps;\r\n  } else if (type === 'line') {\r\n    const strokeWidth = extra === null || extra === void 0 ? void 0 : extra.strokeWidth;\r\n    if (typeof size === 'string' || typeof size === 'undefined') {\r\n      height = strokeWidth || (size === 'small' ? 6 : 8);\r\n    } else if (typeof size === 'number') {\r\n      [width, height] = [size, size];\r\n    } else {\r\n      [width = -1, height = 8] = size;\r\n    }\r\n  } else if (type === 'circle' || type === 'dashboard') {\r\n    if (typeof size === 'string' || typeof size === 'undefined') {\r\n      [width, height] = size === 'small' ? [60, 60] : [120, 120];\r\n    } else if (typeof size === 'number') {\r\n      [width, height] = [size, size];\r\n    } else {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', 'Type \"circle\" and \"dashbord\" do not accept array as `size`, please use number or preset size instead.') : void 0;\r\n      }\r\n      width = (_b = (_a = size[0]) !== null && _a !== void 0 ? _a : size[1]) !== null && _b !== void 0 ? _b : 120;\r\n      height = (_d = (_c = size[0]) !== null && _c !== void 0 ? _c : size[1]) !== null && _d !== void 0 ? _d : 120;\r\n    }\r\n  }\r\n  return [width, height];\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}