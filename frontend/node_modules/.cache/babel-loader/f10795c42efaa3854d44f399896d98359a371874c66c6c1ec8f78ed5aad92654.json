{"ast":null,"code":"/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n'use strict';\n\n/**\r\n * Module dependencies.\r\n */\nvar merge = require('utils-merge');\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\r\n * @param {Object} options\r\n * @return {Function}\r\n * @api public\r\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options);\n  var queryparse = qs.parse;\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n  return function query(req, res, next) {\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n    next();\n  };\n};","map":{"version":3,"names":["merge","require","parseUrl","qs","module","exports","query","options","opts","queryparse","parse","undefined","allowPrototypes","req","res","next","val"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/express/lib/middleware/query.js"],"sourcesContent":["/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar merge = require('utils-merge')\r\nvar parseUrl = require('parseurl');\r\nvar qs = require('qs');\r\n\r\n/**\r\n * @param {Object} options\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function query(options) {\r\n  var opts = merge({}, options)\r\n  var queryparse = qs.parse;\r\n\r\n  if (typeof options === 'function') {\r\n    queryparse = options;\r\n    opts = undefined;\r\n  }\r\n\r\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\r\n    // back-compat for qs module\r\n    opts.allowPrototypes = true;\r\n  }\r\n\r\n  return function query(req, res, next){\r\n    if (!req.query) {\r\n      var val = parseUrl(req).query;\r\n      req.query = queryparse(val, opts);\r\n    }\r\n\r\n    next();\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAa,CAAC;AAClC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;;AAEtB;AACA;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACC,OAAO,EAAE;EACvC,IAAIC,IAAI,GAAGR,KAAK,CAAC,CAAC,CAAC,EAAEO,OAAO,CAAC;EAC7B,IAAIE,UAAU,GAAGN,EAAE,CAACO,KAAK;EAEzB,IAAI,OAAOH,OAAO,KAAK,UAAU,EAAE;IACjCE,UAAU,GAAGF,OAAO;IACpBC,IAAI,GAAGG,SAAS;EAClB;EAEA,IAAIH,IAAI,KAAKG,SAAS,IAAIH,IAAI,CAACI,eAAe,KAAKD,SAAS,EAAE;IAC5D;IACAH,IAAI,CAACI,eAAe,GAAG,IAAI;EAC7B;EAEA,OAAO,SAASN,KAAKA,CAACO,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAC;IACnC,IAAI,CAACF,GAAG,CAACP,KAAK,EAAE;MACd,IAAIU,GAAG,GAAGd,QAAQ,CAACW,GAAG,CAAC,CAACP,KAAK;MAC7BO,GAAG,CAACP,KAAK,GAAGG,UAAU,CAACO,GAAG,EAAER,IAAI,CAAC;IACnC;IAEAO,IAAI,CAAC,CAAC;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}