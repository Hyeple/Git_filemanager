{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport hash from '@emotion/hash';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport StyleContext, { ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { flattenToken, token2key } from \"../util\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar EMPTY_OVERRIDE = {};\n\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        var _style$parentNode;\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n}\n\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\n\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _useContext = useContext(StyleContext),\n    instanceId = _useContext.cache.instanceId;\n  var _option$salt = option.salt,\n    salt = _option$salt === void 0 ? '' : _option$salt,\n    _option$override = option.override,\n    override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n    formatToken = option.formatToken;\n\n  // Basic - We do basic cache here\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var derivativeToken = theme.getDerivativeToken(mergedToken);\n\n    // Merge with override\n    var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), override);\n\n    // Format if needed\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    }\n\n    // Optimize for `useStyleRegister` performance\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey, instanceId);\n  });\n  return cachedToken;\n}","map":{"version":3,"names":["_objectSpread","_toConsumableArray","hash","React","useContext","StyleContext","ATTR_TOKEN","CSS_IN_JS_INSTANCE","flattenToken","token2key","useGlobalCache","EMPTY_OVERRIDE","hashPrefix","process","env","NODE_ENV","tokenKeys","Map","recordCleanToken","tokenKey","set","get","removeStyleTags","key","instanceId","document","styles","querySelectorAll","concat","forEach","style","_style$parentNode","parentNode","removeChild","cleanTokenStyle","tokenKeyList","Array","from","keys","cleanableKeyList","filter","count","length","delete","useCacheToken","theme","tokens","option","arguments","undefined","_useContext","cache","_option$salt","salt","_option$override","override","formatToken","mergedToken","useMemo","Object","assign","apply","tokenStr","overrideTokenStr","cachedToken","id","derivativeToken","getDerivativeToken","mergedDerivativeToken","_tokenKey","hashId","_hashId"],"sources":["C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/@ant-design/cssinjs/es/hooks/useCacheToken.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport hash from '@emotion/hash';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport StyleContext, { ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { flattenToken, token2key } from \"../util\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar EMPTY_OVERRIDE = {};\n\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        var _style$parentNode;\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n}\n\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\n\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _useContext = useContext(StyleContext),\n    instanceId = _useContext.cache.instanceId;\n  var _option$salt = option.salt,\n    salt = _option$salt === void 0 ? '' : _option$salt,\n    _option$override = option.override,\n    override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n    formatToken = option.formatToken;\n\n  // Basic - We do basic cache here\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var derivativeToken = theme.getDerivativeToken(mergedToken);\n\n    // Merge with override\n    var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), override);\n\n    // Format if needed\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    }\n\n    // Optimize for `useStyleRegister` performance\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey, instanceId);\n  });\n  return cachedToken;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}