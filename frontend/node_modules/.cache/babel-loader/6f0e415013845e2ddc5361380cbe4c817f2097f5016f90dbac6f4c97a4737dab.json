{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"rootClassName\", \"style\", \"className\", \"tabIndex\", \"items\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\nimport classNames from 'classnames';\nimport Overflow from 'rc-overflow';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { useImperativeHandle } from 'react';\nimport { flushSync } from 'react-dom';\nimport isEqual from \"rc-util/es/isEqual\";\nimport { getMenuId, IdContext } from \"./context/IdContext\";\nimport MenuContextProvider from \"./context/MenuContext\";\nimport { PathRegisterContext, PathUserContext } from \"./context/PathContext\";\nimport PrivateContext from \"./context/PrivateContext\";\nimport useAccessibility from \"./hooks/useAccessibility\";\nimport useKeyRecords, { OVERFLOW_KEY } from \"./hooks/useKeyRecords\";\nimport useMemoCallback from \"./hooks/useMemoCallback\";\nimport useUUID from \"./hooks/useUUID\";\nimport MenuItem from \"./MenuItem\";\nimport SubMenu from \"./SubMenu\";\nimport { parseItems } from \"./utils/nodeUtil\";\nimport { warnItemProp } from \"./utils/warnUtil\";\n\n/**\r\n * Menu modify after refactor:\r\n * ## Add\r\n * - disabled\r\n *\r\n * ## Remove\r\n * - openTransitionName\r\n * - openAnimation\r\n * - onDestroy\r\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\r\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\r\n */\n\n// optimize for render\nvar EMPTY_LIST = [];\nvar Menu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _childList$, _classNames;\n  var _ref = props,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-menu' : _ref$prefixCls,\n    rootClassName = _ref.rootClassName,\n    style = _ref.style,\n    className = _ref.className,\n    _ref$tabIndex = _ref.tabIndex,\n    tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,\n    items = _ref.items,\n    children = _ref.children,\n    direction = _ref.direction,\n    id = _ref.id,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'vertical' : _ref$mode,\n    inlineCollapsed = _ref.inlineCollapsed,\n    disabled = _ref.disabled,\n    disabledOverflow = _ref.disabledOverflow,\n    _ref$subMenuOpenDelay = _ref.subMenuOpenDelay,\n    subMenuOpenDelay = _ref$subMenuOpenDelay === void 0 ? 0.1 : _ref$subMenuOpenDelay,\n    _ref$subMenuCloseDela = _ref.subMenuCloseDelay,\n    subMenuCloseDelay = _ref$subMenuCloseDela === void 0 ? 0.1 : _ref$subMenuCloseDela,\n    forceSubMenuRender = _ref.forceSubMenuRender,\n    defaultOpenKeys = _ref.defaultOpenKeys,\n    openKeys = _ref.openKeys,\n    activeKey = _ref.activeKey,\n    defaultActiveFirst = _ref.defaultActiveFirst,\n    _ref$selectable = _ref.selectable,\n    selectable = _ref$selectable === void 0 ? true : _ref$selectable,\n    _ref$multiple = _ref.multiple,\n    multiple = _ref$multiple === void 0 ? false : _ref$multiple,\n    defaultSelectedKeys = _ref.defaultSelectedKeys,\n    selectedKeys = _ref.selectedKeys,\n    onSelect = _ref.onSelect,\n    onDeselect = _ref.onDeselect,\n    _ref$inlineIndent = _ref.inlineIndent,\n    inlineIndent = _ref$inlineIndent === void 0 ? 24 : _ref$inlineIndent,\n    motion = _ref.motion,\n    defaultMotions = _ref.defaultMotions,\n    _ref$triggerSubMenuAc = _ref.triggerSubMenuAction,\n    triggerSubMenuAction = _ref$triggerSubMenuAc === void 0 ? 'hover' : _ref$triggerSubMenuAc,\n    builtinPlacements = _ref.builtinPlacements,\n    itemIcon = _ref.itemIcon,\n    expandIcon = _ref.expandIcon,\n    _ref$overflowedIndica = _ref.overflowedIndicator,\n    overflowedIndicator = _ref$overflowedIndica === void 0 ? '...' : _ref$overflowedIndica,\n    overflowedIndicatorPopupClassName = _ref.overflowedIndicatorPopupClassName,\n    getPopupContainer = _ref.getPopupContainer,\n    onClick = _ref.onClick,\n    onOpenChange = _ref.onOpenChange,\n    onKeyDown = _ref.onKeyDown,\n    openAnimation = _ref.openAnimation,\n    openTransitionName = _ref.openTransitionName,\n    _internalRenderMenuItem = _ref._internalRenderMenuItem,\n    _internalRenderSubMenuItem = _ref._internalRenderSubMenuItem,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var childList = React.useMemo(function () {\n    return parseItems(children, items, EMPTY_LIST);\n  }, [children, items]);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mounted = _React$useState2[0],\n    setMounted = _React$useState2[1];\n  var containerRef = React.useRef();\n  var uuid = useUUID(id);\n  var isRtl = direction === 'rtl';\n\n  // ========================= Warn =========================\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\n  }\n\n  // ========================= Open =========================\n  var _useMergedState = useMergedState(defaultOpenKeys, {\n      value: openKeys,\n      postState: function postState(keys) {\n        return keys || EMPTY_LIST;\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedOpenKeys = _useMergedState2[0],\n    setMergedOpenKeys = _useMergedState2[1];\n\n  // React 18 will merge mouse event which means we open key will not sync\n  // ref: https://github.com/ant-design/ant-design/issues/38818\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    var forceFlush = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    function doUpdate() {\n      setMergedOpenKeys(keys);\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n    }\n    if (forceFlush) {\n      flushSync(doUpdate);\n    } else {\n      doUpdate();\n    }\n  };\n\n  // >>>>> Cache & Reset open keys when inlineCollapsed changed\n  var _React$useState3 = React.useState(mergedOpenKeys),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    inlineCacheOpenKeys = _React$useState4[0],\n    setInlineCacheOpenKeys = _React$useState4[1];\n  var mountRef = React.useRef(false);\n\n  // ========================= Mode =========================\n  var _React$useMemo = React.useMemo(function () {\n      if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\n        return ['vertical', inlineCollapsed];\n      }\n      return [mode, false];\n    }, [mode, inlineCollapsed]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    mergedMode = _React$useMemo2[0],\n    mergedInlineCollapsed = _React$useMemo2[1];\n  var isInlineMode = mergedMode === 'inline';\n  var _React$useState5 = React.useState(mergedMode),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    internalMode = _React$useState6[0],\n    setInternalMode = _React$useState6[1];\n  var _React$useState7 = React.useState(mergedInlineCollapsed),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    internalInlineCollapsed = _React$useState8[0],\n    setInternalInlineCollapsed = _React$useState8[1];\n  React.useEffect(function () {\n    setInternalMode(mergedMode);\n    setInternalInlineCollapsed(mergedInlineCollapsed);\n    if (!mountRef.current) {\n      return;\n    }\n    // Synchronously update MergedOpenKeys\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [mergedMode, mergedInlineCollapsed]);\n\n  // ====================== Responsive ======================\n  var _React$useState9 = React.useState(0),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    lastVisibleIndex = _React$useState10[0],\n    setLastVisibleIndex = _React$useState10[1];\n  var allVisible = lastVisibleIndex >= childList.length - 1 || internalMode !== 'horizontal' || disabledOverflow;\n\n  // Cache\n  React.useEffect(function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]);\n  React.useEffect(function () {\n    mountRef.current = true;\n    return function () {\n      mountRef.current = false;\n    };\n  }, []);\n\n  // ========================= Path =========================\n  var _useKeyRecords = useKeyRecords(),\n    registerPath = _useKeyRecords.registerPath,\n    unregisterPath = _useKeyRecords.unregisterPath,\n    refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n    isSubPathKey = _useKeyRecords.isSubPathKey,\n    getKeyPath = _useKeyRecords.getKeyPath,\n    getKeys = _useKeyRecords.getKeys,\n    getSubPathKeys = _useKeyRecords.getSubPathKeys;\n  var registerPathContext = React.useMemo(function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = React.useMemo(function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  React.useEffect(function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]);\n\n  // ======================== Active ========================\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n      value: activeKey\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedActiveKey = _useMergedState4[0],\n    setMergedActiveKey = _useMergedState4[1];\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  });\n  useImperativeHandle(ref, function () {\n    return {\n      list: containerRef.current,\n      focus: function focus(options) {\n        var _childList$find;\n        var shouldFocusKey = mergedActiveKey !== null && mergedActiveKey !== void 0 ? mergedActiveKey : (_childList$find = childList.find(function (node) {\n          return !node.props.disabled;\n        })) === null || _childList$find === void 0 ? void 0 : _childList$find.key;\n        if (shouldFocusKey) {\n          var _containerRef$current, _containerRef$current2, _containerRef$current3;\n          (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.querySelector(\"li[data-menu-id='\".concat(getMenuId(uuid, shouldFocusKey), \"']\"))) === null || _containerRef$current2 === void 0 ? void 0 : (_containerRef$current3 = _containerRef$current2.focus) === null || _containerRef$current3 === void 0 ? void 0 : _containerRef$current3.call(_containerRef$current2, options);\n        }\n      }\n    };\n  });\n\n  // ======================== Select ========================\n  // >>>>> Select keys\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\n      value: selectedKeys,\n      // Legacy convert key to array\n      postState: function postState(keys) {\n        if (Array.isArray(keys)) {\n          return keys;\n        }\n        if (keys === null || keys === undefined) {\n          return EMPTY_LIST;\n        }\n        return [keys];\n      }\n    }),\n    _useMergedState6 = _slicedToArray(_useMergedState5, 2),\n    mergedSelectKeys = _useMergedState6[0],\n    setMergedSelectKeys = _useMergedState6[1];\n\n  // >>>>> Trigger select\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n      setMergedSelectKeys(newSelectKeys);\n\n      // Trigger event\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    }\n\n    // Whatever selectable, always close it\n    if (!multiple && mergedOpenKeys.length && internalMode !== 'inline') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  };\n\n  // ========================= Open =========================\n  /**\r\n   * Click for item. SubMenu do not have selection status\r\n   */\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (internalMode !== 'inline') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n    if (!isEqual(mergedOpenKeys, newOpenKeys, true)) {\n      triggerOpenKeys(newOpenKeys, true);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer);\n\n  // ==================== Accessibility =====================\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n  var onInternalKeyDown = useAccessibility(internalMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown);\n\n  // ======================== Effect ========================\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n\n  // ======================= Context ========================\n  var privateContext = React.useMemo(function () {\n    return {\n      _internalRenderMenuItem: _internalRenderMenuItem,\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\n    };\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]);\n\n  // ======================== Render ========================\n\n  // >>>>> Children\n  var wrappedChildList = internalMode !== 'horizontal' || disabledOverflow ? childList :\n  // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return /*#__PURE__*/(\n      // Always wrap provider to avoid sub node re-mount\n      React.createElement(MenuContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  });\n\n  // >>>>> Container\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\n    id: id,\n    ref: containerRef,\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\n    component: \"ul\",\n    itemComponent: MenuItem,\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(internalMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), internalInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames), rootClassName),\n    dir: direction,\n    style: style,\n    role: \"menu\",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/React.createElement(SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: internalMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\n    ssr: \"full\",\n    \"data-menu-list\": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps));\n\n  // >>>>> Render\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\n    value: privateContext\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\n    prefixCls: prefixCls,\n    rootClassName: rootClassName,\n    mode: internalMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl\n    // Disabled\n    ,\n\n    disabled: disabled\n    // Motion\n    ,\n\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null\n    // Active\n    ,\n\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive\n    // Selection\n    ,\n\n    selectedKeys: mergedSelectKeys\n    // Level\n    ,\n\n    inlineIndent: inlineIndent\n    // Popup\n    ,\n\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer\n    // Icon\n    ,\n\n    itemIcon: itemIcon,\n    expandIcon: expandIcon\n    // Events\n    ,\n\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList)))));\n});\nexport default Menu;","map":{"version":3,"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","classNames","Overflow","useMergedState","warning","React","useImperativeHandle","flushSync","isEqual","getMenuId","IdContext","MenuContextProvider","PathRegisterContext","PathUserContext","PrivateContext","useAccessibility","useKeyRecords","OVERFLOW_KEY","useMemoCallback","useUUID","MenuItem","SubMenu","parseItems","warnItemProp","EMPTY_LIST","Menu","forwardRef","props","ref","_childList$","_classNames","_ref","_ref$prefixCls","prefixCls","rootClassName","style","className","_ref$tabIndex","tabIndex","items","children","direction","id","_ref$mode","mode","inlineCollapsed","disabled","disabledOverflow","_ref$subMenuOpenDelay","subMenuOpenDelay","_ref$subMenuCloseDela","subMenuCloseDelay","forceSubMenuRender","defaultOpenKeys","openKeys","activeKey","defaultActiveFirst","_ref$selectable","selectable","_ref$multiple","multiple","defaultSelectedKeys","selectedKeys","onSelect","onDeselect","_ref$inlineIndent","inlineIndent","motion","defaultMotions","_ref$triggerSubMenuAc","triggerSubMenuAction","builtinPlacements","itemIcon","expandIcon","_ref$overflowedIndica","overflowedIndicator","overflowedIndicatorPopupClassName","getPopupContainer","onClick","onOpenChange","onKeyDown","openAnimation","openTransitionName","_internalRenderMenuItem","_internalRenderSubMenuItem","restProps","childList","useMemo","_React$useState","useState","_React$useState2","mounted","setMounted","containerRef","useRef","uuid","isRtl","process","env","NODE_ENV","_useMergedState","value","postState","keys","_useMergedState2","mergedOpenKeys","setMergedOpenKeys","triggerOpenKeys","forceFlush","arguments","length","undefined","doUpdate","_React$useState3","_React$useState4","inlineCacheOpenKeys","setInlineCacheOpenKeys","mountRef","_React$useMemo","_React$useMemo2","mergedMode","mergedInlineCollapsed","isInlineMode","_React$useState5","_React$useState6","internalMode","setInternalMode","_React$useState7","_React$useState8","internalInlineCollapsed","setInternalInlineCollapsed","useEffect","current","_React$useState9","_React$useState10","lastVisibleIndex","setLastVisibleIndex","allVisible","_useKeyRecords","registerPath","unregisterPath","refreshOverflowKeys","isSubPathKey","getKeyPath","getKeys","getSubPathKeys","registerPathContext","pathUserContext","slice","map","child","key","_useMergedState3","_useMergedState4","mergedActiveKey","setMergedActiveKey","onActive","onInactive","list","focus","options","_childList$find","shouldFocusKey","find","node","_containerRef$current","_containerRef$current2","_containerRef$current3","querySelector","concat","call","_useMergedState5","Array","isArray","_useMergedState6","mergedSelectKeys","setMergedSelectKeys","triggerSelection","info","targetKey","exist","includes","newSelectKeys","filter","selectInfo","onInternalClick","onInternalOpenChange","open","newOpenKeys","k","push","subPathKeys","has","getInternalPopupContainer","triggerAccessibilityOpen","nextOpen","onInternalKeyDown","privateContext","wrappedChildList","index","createElement","overflowDisabled","container","component","itemComponent","dir","role","data","renderRawItem","renderRawRest","omitItems","len","originOmitItems","eventKey","title","internalPopupClose","popupClassName","maxCount","INVALIDATE","RESPONSIVE","ssr","onVisibleChange","newLastIndex","Provider","rtl","onItemClick","display"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/rc-menu/es/Menu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nvar _excluded = [\"prefixCls\", \"rootClassName\", \"style\", \"className\", \"tabIndex\", \"items\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\r\nimport classNames from 'classnames';\r\nimport Overflow from 'rc-overflow';\r\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\r\nimport warning from \"rc-util/es/warning\";\r\nimport * as React from 'react';\r\nimport { useImperativeHandle } from 'react';\r\nimport { flushSync } from 'react-dom';\r\nimport isEqual from \"rc-util/es/isEqual\";\r\nimport { getMenuId, IdContext } from \"./context/IdContext\";\r\nimport MenuContextProvider from \"./context/MenuContext\";\r\nimport { PathRegisterContext, PathUserContext } from \"./context/PathContext\";\r\nimport PrivateContext from \"./context/PrivateContext\";\r\nimport useAccessibility from \"./hooks/useAccessibility\";\r\nimport useKeyRecords, { OVERFLOW_KEY } from \"./hooks/useKeyRecords\";\r\nimport useMemoCallback from \"./hooks/useMemoCallback\";\r\nimport useUUID from \"./hooks/useUUID\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { parseItems } from \"./utils/nodeUtil\";\r\nimport { warnItemProp } from \"./utils/warnUtil\";\r\n\r\n/**\r\n * Menu modify after refactor:\r\n * ## Add\r\n * - disabled\r\n *\r\n * ## Remove\r\n * - openTransitionName\r\n * - openAnimation\r\n * - onDestroy\r\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\r\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\r\n */\r\n\r\n// optimize for render\r\nvar EMPTY_LIST = [];\r\nvar Menu = /*#__PURE__*/React.forwardRef(function (props, ref) {\r\n  var _childList$, _classNames;\r\n  var _ref = props,\r\n    _ref$prefixCls = _ref.prefixCls,\r\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-menu' : _ref$prefixCls,\r\n    rootClassName = _ref.rootClassName,\r\n    style = _ref.style,\r\n    className = _ref.className,\r\n    _ref$tabIndex = _ref.tabIndex,\r\n    tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,\r\n    items = _ref.items,\r\n    children = _ref.children,\r\n    direction = _ref.direction,\r\n    id = _ref.id,\r\n    _ref$mode = _ref.mode,\r\n    mode = _ref$mode === void 0 ? 'vertical' : _ref$mode,\r\n    inlineCollapsed = _ref.inlineCollapsed,\r\n    disabled = _ref.disabled,\r\n    disabledOverflow = _ref.disabledOverflow,\r\n    _ref$subMenuOpenDelay = _ref.subMenuOpenDelay,\r\n    subMenuOpenDelay = _ref$subMenuOpenDelay === void 0 ? 0.1 : _ref$subMenuOpenDelay,\r\n    _ref$subMenuCloseDela = _ref.subMenuCloseDelay,\r\n    subMenuCloseDelay = _ref$subMenuCloseDela === void 0 ? 0.1 : _ref$subMenuCloseDela,\r\n    forceSubMenuRender = _ref.forceSubMenuRender,\r\n    defaultOpenKeys = _ref.defaultOpenKeys,\r\n    openKeys = _ref.openKeys,\r\n    activeKey = _ref.activeKey,\r\n    defaultActiveFirst = _ref.defaultActiveFirst,\r\n    _ref$selectable = _ref.selectable,\r\n    selectable = _ref$selectable === void 0 ? true : _ref$selectable,\r\n    _ref$multiple = _ref.multiple,\r\n    multiple = _ref$multiple === void 0 ? false : _ref$multiple,\r\n    defaultSelectedKeys = _ref.defaultSelectedKeys,\r\n    selectedKeys = _ref.selectedKeys,\r\n    onSelect = _ref.onSelect,\r\n    onDeselect = _ref.onDeselect,\r\n    _ref$inlineIndent = _ref.inlineIndent,\r\n    inlineIndent = _ref$inlineIndent === void 0 ? 24 : _ref$inlineIndent,\r\n    motion = _ref.motion,\r\n    defaultMotions = _ref.defaultMotions,\r\n    _ref$triggerSubMenuAc = _ref.triggerSubMenuAction,\r\n    triggerSubMenuAction = _ref$triggerSubMenuAc === void 0 ? 'hover' : _ref$triggerSubMenuAc,\r\n    builtinPlacements = _ref.builtinPlacements,\r\n    itemIcon = _ref.itemIcon,\r\n    expandIcon = _ref.expandIcon,\r\n    _ref$overflowedIndica = _ref.overflowedIndicator,\r\n    overflowedIndicator = _ref$overflowedIndica === void 0 ? '...' : _ref$overflowedIndica,\r\n    overflowedIndicatorPopupClassName = _ref.overflowedIndicatorPopupClassName,\r\n    getPopupContainer = _ref.getPopupContainer,\r\n    onClick = _ref.onClick,\r\n    onOpenChange = _ref.onOpenChange,\r\n    onKeyDown = _ref.onKeyDown,\r\n    openAnimation = _ref.openAnimation,\r\n    openTransitionName = _ref.openTransitionName,\r\n    _internalRenderMenuItem = _ref._internalRenderMenuItem,\r\n    _internalRenderSubMenuItem = _ref._internalRenderSubMenuItem,\r\n    restProps = _objectWithoutProperties(_ref, _excluded);\r\n  var childList = React.useMemo(function () {\r\n    return parseItems(children, items, EMPTY_LIST);\r\n  }, [children, items]);\r\n  var _React$useState = React.useState(false),\r\n    _React$useState2 = _slicedToArray(_React$useState, 2),\r\n    mounted = _React$useState2[0],\r\n    setMounted = _React$useState2[1];\r\n  var containerRef = React.useRef();\r\n  var uuid = useUUID(id);\r\n  var isRtl = direction === 'rtl';\r\n\r\n  // ========================= Warn =========================\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\r\n  }\r\n\r\n  // ========================= Open =========================\r\n  var _useMergedState = useMergedState(defaultOpenKeys, {\r\n      value: openKeys,\r\n      postState: function postState(keys) {\r\n        return keys || EMPTY_LIST;\r\n      }\r\n    }),\r\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\r\n    mergedOpenKeys = _useMergedState2[0],\r\n    setMergedOpenKeys = _useMergedState2[1];\r\n\r\n  // React 18 will merge mouse event which means we open key will not sync\r\n  // ref: https://github.com/ant-design/ant-design/issues/38818\r\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\r\n    var forceFlush = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    function doUpdate() {\r\n      setMergedOpenKeys(keys);\r\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\r\n    }\r\n    if (forceFlush) {\r\n      flushSync(doUpdate);\r\n    } else {\r\n      doUpdate();\r\n    }\r\n  };\r\n\r\n  // >>>>> Cache & Reset open keys when inlineCollapsed changed\r\n  var _React$useState3 = React.useState(mergedOpenKeys),\r\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\r\n    inlineCacheOpenKeys = _React$useState4[0],\r\n    setInlineCacheOpenKeys = _React$useState4[1];\r\n  var mountRef = React.useRef(false);\r\n\r\n  // ========================= Mode =========================\r\n  var _React$useMemo = React.useMemo(function () {\r\n      if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\r\n        return ['vertical', inlineCollapsed];\r\n      }\r\n      return [mode, false];\r\n    }, [mode, inlineCollapsed]),\r\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\r\n    mergedMode = _React$useMemo2[0],\r\n    mergedInlineCollapsed = _React$useMemo2[1];\r\n  var isInlineMode = mergedMode === 'inline';\r\n  var _React$useState5 = React.useState(mergedMode),\r\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\r\n    internalMode = _React$useState6[0],\r\n    setInternalMode = _React$useState6[1];\r\n  var _React$useState7 = React.useState(mergedInlineCollapsed),\r\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\r\n    internalInlineCollapsed = _React$useState8[0],\r\n    setInternalInlineCollapsed = _React$useState8[1];\r\n  React.useEffect(function () {\r\n    setInternalMode(mergedMode);\r\n    setInternalInlineCollapsed(mergedInlineCollapsed);\r\n    if (!mountRef.current) {\r\n      return;\r\n    }\r\n    // Synchronously update MergedOpenKeys\r\n    if (isInlineMode) {\r\n      setMergedOpenKeys(inlineCacheOpenKeys);\r\n    } else {\r\n      // Trigger open event in case its in control\r\n      triggerOpenKeys(EMPTY_LIST);\r\n    }\r\n  }, [mergedMode, mergedInlineCollapsed]);\r\n\r\n  // ====================== Responsive ======================\r\n  var _React$useState9 = React.useState(0),\r\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\r\n    lastVisibleIndex = _React$useState10[0],\r\n    setLastVisibleIndex = _React$useState10[1];\r\n  var allVisible = lastVisibleIndex >= childList.length - 1 || internalMode !== 'horizontal' || disabledOverflow;\r\n\r\n  // Cache\r\n  React.useEffect(function () {\r\n    if (isInlineMode) {\r\n      setInlineCacheOpenKeys(mergedOpenKeys);\r\n    }\r\n  }, [mergedOpenKeys]);\r\n  React.useEffect(function () {\r\n    mountRef.current = true;\r\n    return function () {\r\n      mountRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  // ========================= Path =========================\r\n  var _useKeyRecords = useKeyRecords(),\r\n    registerPath = _useKeyRecords.registerPath,\r\n    unregisterPath = _useKeyRecords.unregisterPath,\r\n    refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\r\n    isSubPathKey = _useKeyRecords.isSubPathKey,\r\n    getKeyPath = _useKeyRecords.getKeyPath,\r\n    getKeys = _useKeyRecords.getKeys,\r\n    getSubPathKeys = _useKeyRecords.getSubPathKeys;\r\n  var registerPathContext = React.useMemo(function () {\r\n    return {\r\n      registerPath: registerPath,\r\n      unregisterPath: unregisterPath\r\n    };\r\n  }, [registerPath, unregisterPath]);\r\n  var pathUserContext = React.useMemo(function () {\r\n    return {\r\n      isSubPathKey: isSubPathKey\r\n    };\r\n  }, [isSubPathKey]);\r\n  React.useEffect(function () {\r\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\r\n      return child.key;\r\n    }));\r\n  }, [lastVisibleIndex, allVisible]);\r\n\r\n  // ======================== Active ========================\r\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\r\n      value: activeKey\r\n    }),\r\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\r\n    mergedActiveKey = _useMergedState4[0],\r\n    setMergedActiveKey = _useMergedState4[1];\r\n  var onActive = useMemoCallback(function (key) {\r\n    setMergedActiveKey(key);\r\n  });\r\n  var onInactive = useMemoCallback(function () {\r\n    setMergedActiveKey(undefined);\r\n  });\r\n  useImperativeHandle(ref, function () {\r\n    return {\r\n      list: containerRef.current,\r\n      focus: function focus(options) {\r\n        var _childList$find;\r\n        var shouldFocusKey = mergedActiveKey !== null && mergedActiveKey !== void 0 ? mergedActiveKey : (_childList$find = childList.find(function (node) {\r\n          return !node.props.disabled;\r\n        })) === null || _childList$find === void 0 ? void 0 : _childList$find.key;\r\n        if (shouldFocusKey) {\r\n          var _containerRef$current, _containerRef$current2, _containerRef$current3;\r\n          (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.querySelector(\"li[data-menu-id='\".concat(getMenuId(uuid, shouldFocusKey), \"']\"))) === null || _containerRef$current2 === void 0 ? void 0 : (_containerRef$current3 = _containerRef$current2.focus) === null || _containerRef$current3 === void 0 ? void 0 : _containerRef$current3.call(_containerRef$current2, options);\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // ======================== Select ========================\r\n  // >>>>> Select keys\r\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\r\n      value: selectedKeys,\r\n      // Legacy convert key to array\r\n      postState: function postState(keys) {\r\n        if (Array.isArray(keys)) {\r\n          return keys;\r\n        }\r\n        if (keys === null || keys === undefined) {\r\n          return EMPTY_LIST;\r\n        }\r\n        return [keys];\r\n      }\r\n    }),\r\n    _useMergedState6 = _slicedToArray(_useMergedState5, 2),\r\n    mergedSelectKeys = _useMergedState6[0],\r\n    setMergedSelectKeys = _useMergedState6[1];\r\n\r\n  // >>>>> Trigger select\r\n  var triggerSelection = function triggerSelection(info) {\r\n    if (selectable) {\r\n      // Insert or Remove\r\n      var targetKey = info.key;\r\n      var exist = mergedSelectKeys.includes(targetKey);\r\n      var newSelectKeys;\r\n      if (multiple) {\r\n        if (exist) {\r\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\r\n            return key !== targetKey;\r\n          });\r\n        } else {\r\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\r\n        }\r\n      } else {\r\n        newSelectKeys = [targetKey];\r\n      }\r\n      setMergedSelectKeys(newSelectKeys);\r\n\r\n      // Trigger event\r\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\r\n        selectedKeys: newSelectKeys\r\n      });\r\n      if (exist) {\r\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\r\n      } else {\r\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\r\n      }\r\n    }\r\n\r\n    // Whatever selectable, always close it\r\n    if (!multiple && mergedOpenKeys.length && internalMode !== 'inline') {\r\n      triggerOpenKeys(EMPTY_LIST);\r\n    }\r\n  };\r\n\r\n  // ========================= Open =========================\r\n  /**\r\n   * Click for item. SubMenu do not have selection status\r\n   */\r\n  var onInternalClick = useMemoCallback(function (info) {\r\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\r\n    triggerSelection(info);\r\n  });\r\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\r\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\r\n      return k !== key;\r\n    });\r\n    if (open) {\r\n      newOpenKeys.push(key);\r\n    } else if (internalMode !== 'inline') {\r\n      // We need find all related popup to close\r\n      var subPathKeys = getSubPathKeys(key);\r\n      newOpenKeys = newOpenKeys.filter(function (k) {\r\n        return !subPathKeys.has(k);\r\n      });\r\n    }\r\n    if (!isEqual(mergedOpenKeys, newOpenKeys, true)) {\r\n      triggerOpenKeys(newOpenKeys, true);\r\n    }\r\n  });\r\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer);\r\n\r\n  // ==================== Accessibility =====================\r\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\r\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\r\n    onInternalOpenChange(key, nextOpen);\r\n  };\r\n  var onInternalKeyDown = useAccessibility(internalMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown);\r\n\r\n  // ======================== Effect ========================\r\n  React.useEffect(function () {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  // ======================= Context ========================\r\n  var privateContext = React.useMemo(function () {\r\n    return {\r\n      _internalRenderMenuItem: _internalRenderMenuItem,\r\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\r\n    };\r\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]);\r\n\r\n  // ======================== Render ========================\r\n\r\n  // >>>>> Children\r\n  var wrappedChildList = internalMode !== 'horizontal' || disabledOverflow ? childList :\r\n  // Need wrap for overflow dropdown that do not response for open\r\n  childList.map(function (child, index) {\r\n    return (\r\n      /*#__PURE__*/\r\n      // Always wrap provider to avoid sub node re-mount\r\n      React.createElement(MenuContextProvider, {\r\n        key: child.key,\r\n        overflowDisabled: index > lastVisibleIndex\r\n      }, child)\r\n    );\r\n  });\r\n\r\n  // >>>>> Container\r\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\r\n    id: id,\r\n    ref: containerRef,\r\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\r\n    component: \"ul\",\r\n    itemComponent: MenuItem,\r\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(internalMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), internalInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames), rootClassName),\r\n    dir: direction,\r\n    style: style,\r\n    role: \"menu\",\r\n    tabIndex: tabIndex,\r\n    data: wrappedChildList,\r\n    renderRawItem: function renderRawItem(node) {\r\n      return node;\r\n    },\r\n    renderRawRest: function renderRawRest(omitItems) {\r\n      // We use origin list since wrapped list use context to prevent open\r\n      var len = omitItems.length;\r\n      var originOmitItems = len ? childList.slice(-len) : null;\r\n      return /*#__PURE__*/React.createElement(SubMenu, {\r\n        eventKey: OVERFLOW_KEY,\r\n        title: overflowedIndicator,\r\n        disabled: allVisible,\r\n        internalPopupClose: len === 0,\r\n        popupClassName: overflowedIndicatorPopupClassName\r\n      }, originOmitItems);\r\n    },\r\n    maxCount: internalMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\r\n    ssr: \"full\",\r\n    \"data-menu-list\": true,\r\n    onVisibleChange: function onVisibleChange(newLastIndex) {\r\n      setLastVisibleIndex(newLastIndex);\r\n    },\r\n    onKeyDown: onInternalKeyDown\r\n  }, restProps));\r\n\r\n  // >>>>> Render\r\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\r\n    value: privateContext\r\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\r\n    value: uuid\r\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\r\n    prefixCls: prefixCls,\r\n    rootClassName: rootClassName,\r\n    mode: internalMode,\r\n    openKeys: mergedOpenKeys,\r\n    rtl: isRtl\r\n    // Disabled\r\n    ,\r\n    disabled: disabled\r\n    // Motion\r\n    ,\r\n    motion: mounted ? motion : null,\r\n    defaultMotions: mounted ? defaultMotions : null\r\n    // Active\r\n    ,\r\n    activeKey: mergedActiveKey,\r\n    onActive: onActive,\r\n    onInactive: onInactive\r\n    // Selection\r\n    ,\r\n    selectedKeys: mergedSelectKeys\r\n    // Level\r\n    ,\r\n    inlineIndent: inlineIndent\r\n    // Popup\r\n    ,\r\n    subMenuOpenDelay: subMenuOpenDelay,\r\n    subMenuCloseDelay: subMenuCloseDelay,\r\n    forceSubMenuRender: forceSubMenuRender,\r\n    builtinPlacements: builtinPlacements,\r\n    triggerSubMenuAction: triggerSubMenuAction,\r\n    getPopupContainer: getInternalPopupContainer\r\n    // Icon\r\n    ,\r\n    itemIcon: itemIcon,\r\n    expandIcon: expandIcon\r\n    // Events\r\n    ,\r\n    onItemClick: onInternalClick,\r\n    onOpenChange: onInternalOpenChange\r\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\r\n    value: pathUserContext\r\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\r\n    style: {\r\n      display: 'none'\r\n    },\r\n    \"aria-hidden\": true\r\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\r\n    value: registerPathContext\r\n  }, childList)))));\r\n});\r\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}