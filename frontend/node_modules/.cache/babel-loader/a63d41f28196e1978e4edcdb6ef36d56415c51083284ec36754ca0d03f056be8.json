{"ast":null,"code":"import _classCallCheck from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { notifyManager } from './notifyManager.mjs';\nimport { Mutation } from './mutation.mjs';\nimport { matchMutation, noop } from './utils.mjs';\nimport { Subscribable } from './subscribable.mjs';\n\n// CLASS\nvar MutationCache = /*#__PURE__*/function (_Subscribable) {\n  _inherits(MutationCache, _Subscribable);\n  var _super = _createSuper(MutationCache);\n  function MutationCache(config) {\n    var _this;\n    _classCallCheck(this, MutationCache);\n    _this = _super.call(this);\n    _this.config = config || {};\n    _this.mutations = [];\n    _this.mutationId = 0;\n    return _this;\n  }\n  _createClass(MutationCache, [{\n    key: \"build\",\n    value: function build(client, options, state) {\n      var mutation = new Mutation({\n        mutationCache: this,\n        logger: client.getLogger(),\n        mutationId: ++this.mutationId,\n        options: client.defaultMutationOptions(options),\n        state: state,\n        defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n      });\n      this.add(mutation);\n      return mutation;\n    }\n  }, {\n    key: \"add\",\n    value: function add(mutation) {\n      this.mutations.push(mutation);\n      this.notify({\n        type: 'added',\n        mutation: mutation\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(mutation) {\n      this.mutations = this.mutations.filter(function (x) {\n        return x !== mutation;\n      });\n      this.notify({\n        type: 'removed',\n        mutation: mutation\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      notifyManager.batch(function () {\n        _this2.mutations.forEach(function (mutation) {\n          _this2.remove(mutation);\n        });\n      });\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.mutations;\n    }\n  }, {\n    key: \"find\",\n    value: function find(filters) {\n      if (typeof filters.exact === 'undefined') {\n        filters.exact = true;\n      }\n      return this.mutations.find(function (mutation) {\n        return matchMutation(filters, mutation);\n      });\n    }\n  }, {\n    key: \"findAll\",\n    value: function findAll(filters) {\n      return this.mutations.filter(function (mutation) {\n        return matchMutation(filters, mutation);\n      });\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(event) {\n      var _this3 = this;\n      notifyManager.batch(function () {\n        _this3.listeners.forEach(function (listener) {\n          listener(event);\n        });\n      });\n    }\n  }, {\n    key: \"resumePausedMutations\",\n    value: function resumePausedMutations() {\n      var _this4 = this;\n      var _this$resuming;\n      this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(function () {\n        var pausedMutations = _this4.mutations.filter(function (x) {\n          return x.state.isPaused;\n        });\n        return notifyManager.batch(function () {\n          return pausedMutations.reduce(function (promise, mutation) {\n            return promise.then(function () {\n              return mutation.continue().catch(noop);\n            });\n          }, Promise.resolve());\n        });\n      }).then(function () {\n        _this4.resuming = undefined;\n      });\n      return this.resuming;\n    }\n  }]);\n  return MutationCache;\n}(Subscribable);\nexport { MutationCache };","map":{"version":3,"names":["MutationCache","_Subscribable","_inherits","_super","_createSuper","config","_this","_classCallCheck","call","mutations","mutationId","_createClass","key","value","build","client","options","state","mutation","Mutation","mutationCache","logger","getLogger","defaultMutationOptions","defaultOptions","mutationKey","getMutationDefaults","undefined","add","push","notify","type","remove","filter","x","clear","_this2","notifyManager","batch","forEach","getAll","find","filters","exact","matchMutation","findAll","event","_this3","listeners","listener","resumePausedMutations","_this4","_this$resuming","resuming","Promise","resolve","then","pausedMutations","isPaused","reduce","promise","continue","catch","noop","Subscribable"],"sources":["C:\\Users\\parkj\\Desktop\\OSS\\Git_filemanager\\frontend\\node_modules\\@tanstack\\query-core\\src\\mutationCache.ts"],"sourcesContent":["import type { MutationObserver } from './mutationObserver'\nimport type { MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport { notifyManager } from './notifyManager'\nimport type { Action, MutationState } from './mutation'\nimport { Mutation } from './mutation'\nimport type { MutationFilters } from './utils'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: unknown | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\ntype MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  config: MutationCacheConfig\n\n  private mutations: Mutation<any, any, any, any>[]\n  private mutationId: number\n  private resuming: Promise<unknown> | undefined\n\n  constructor(config?: MutationCacheConfig) {\n    super()\n    this.config = config || {}\n    this.mutations = []\n    this.mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey\n        ? client.getMutationDefaults(options.mutationKey)\n        : undefined,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.mutations.push(mutation)\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    this.mutations = this.mutations.filter((x) => x !== mutation)\n    this.notify({ type: 'removed', mutation })\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.mutations.forEach((mutation) => {\n        this.remove(mutation)\n      })\n    })\n  }\n\n  getAll(): Mutation[] {\n    return this.mutations\n  }\n\n  find<TData = unknown, TError = unknown, TVariables = any, TContext = unknown>(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.mutations.find((mutation) => matchMutation(filters, mutation))\n  }\n\n  findAll(filters: MutationFilters): Mutation[] {\n    return this.mutations.filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    this.resuming = (this.resuming ?? Promise.resolve())\n      .then(() => {\n        const pausedMutations = this.mutations.filter((x) => x.state.isPaused)\n        return notifyManager.batch(() =>\n          pausedMutations.reduce(\n            (promise, mutation) =>\n              promise.then(() => mutation.continue().catch(noop)),\n            Promise.resolve() as Promise<unknown>,\n          ),\n        )\n      })\n      .then(() => {\n        this.resuming = undefined\n      })\n\n    return this.resuming\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}