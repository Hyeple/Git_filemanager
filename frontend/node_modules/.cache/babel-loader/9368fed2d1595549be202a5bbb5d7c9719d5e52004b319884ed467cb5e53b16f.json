{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport getValue from \"rc-util/es/utils/get\";\nimport setValue from \"rc-util/es/utils/set\";\nimport { toArray } from './typeUtil';\nimport cloneDeep from '../utils/cloneDeep';\nexport { getValue, setValue };\n/**\r\n * Convert name to internal supported format.\r\n * This function should keep since we still thinking if need support like `a.b.c` format.\r\n * 'a' => ['a']\r\n * 123 => [123]\r\n * ['a', 123] => ['a', 123]\r\n */\nexport function getNamePath(path) {\n  return toArray(path);\n}\nexport function cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = getValue(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nexport function containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(path, namePath);\n  });\n}\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\n/**\r\n * Copy values into store and return a new values object\r\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\r\n */\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread({}, store);\n  if (!values) {\n    return newStore;\n  }\n  Object.keys(values).forEach(function (key) {\n    var prevValue = newStore[key];\n    var value = values[key];\n    // If both are object (but target is not array), we use recursion to set deep value\n    var recursive = isObject(prevValue) && isObject(value);\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : cloneDeep(value); // Clone deep for arrays\n  });\n\n  return newStore;\n}\nexport function setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n  return restValues.reduce(function (current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nexport function matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n  return namePath.every(function (nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}\nexport function isSimilar(source, target) {\n  if (source === target) {\n    return true;\n  }\n  if (!source && target || source && !target) {\n    return false;\n  }\n  if (!source || !target || _typeof(source) !== 'object' || _typeof(target) !== 'object') {\n    return false;\n  }\n  var sourceKeys = Object.keys(source);\n  var targetKeys = Object.keys(target);\n  var keys = new Set([].concat(sourceKeys, targetKeys));\n  return _toConsumableArray(keys).every(function (key) {\n    var sourceValue = source[key];\n    var targetValue = target[key];\n    if (typeof sourceValue === 'function' && typeof targetValue === 'function') {\n      return true;\n    }\n    return sourceValue === targetValue;\n  });\n}\nexport function defaultGetValueFromEvent(valuePropName) {\n  var event = arguments.length <= 1 ? undefined : arguments[1];\n  if (event && event.target && _typeof(event.target) === 'object' && valuePropName in event.target) {\n    return event.target[valuePropName];\n  }\n  return event;\n}\n/**\r\n * Moves an array item from one position in an array to another.\r\n *\r\n * Note: This is a pure function so a new array will be returned, instead\r\n * of altering the array argument.\r\n *\r\n * @param array         Array in which to move an item.         (required)\r\n * @param moveIndex     The index of the item to move.          (required)\r\n * @param toIndex       The index to move item at moveIndex to. (required)\r\n */\nexport function move(array, moveIndex, toIndex) {\n  var length = array.length;\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\n    return array;\n  }\n  var item = array[moveIndex];\n  var diff = moveIndex - toIndex;\n  if (diff > 0) {\n    // move left\n    return [].concat(_toConsumableArray(array.slice(0, toIndex)), [item], _toConsumableArray(array.slice(toIndex, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, length)));\n  }\n  if (diff < 0) {\n    // move right\n    return [].concat(_toConsumableArray(array.slice(0, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array.slice(toIndex + 1, length)));\n  }\n  return array;\n}","map":{"version":3,"names":["_objectSpread","_toConsumableArray","_typeof","getValue","setValue","toArray","cloneDeep","getNamePath","path","cloneByNamePathList","store","namePathList","newStore","forEach","namePath","value","containsNamePath","some","matchNamePath","isObject","obj","Object","getPrototypeOf","prototype","internalSetValues","values","Array","isArray","keys","key","prevValue","recursive","setValues","_len","arguments","length","restValues","_key","reduce","current","changedNamePath","every","nameUnit","i","isSimilar","source","target","sourceKeys","targetKeys","Set","concat","sourceValue","targetValue","defaultGetValueFromEvent","valuePropName","event","undefined","move","array","moveIndex","toIndex","item","diff","slice"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/rc-field-form/es/utils/valueUtil.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\r\nimport getValue from \"rc-util/es/utils/get\";\r\nimport setValue from \"rc-util/es/utils/set\";\r\nimport { toArray } from './typeUtil';\r\nimport cloneDeep from '../utils/cloneDeep';\r\nexport { getValue, setValue };\r\n/**\r\n * Convert name to internal supported format.\r\n * This function should keep since we still thinking if need support like `a.b.c` format.\r\n * 'a' => ['a']\r\n * 123 => [123]\r\n * ['a', 123] => ['a', 123]\r\n */\r\nexport function getNamePath(path) {\r\n  return toArray(path);\r\n}\r\nexport function cloneByNamePathList(store, namePathList) {\r\n  var newStore = {};\r\n  namePathList.forEach(function (namePath) {\r\n    var value = getValue(store, namePath);\r\n    newStore = setValue(newStore, namePath, value);\r\n  });\r\n  return newStore;\r\n}\r\nexport function containsNamePath(namePathList, namePath) {\r\n  return namePathList && namePathList.some(function (path) {\r\n    return matchNamePath(path, namePath);\r\n  });\r\n}\r\nfunction isObject(obj) {\r\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\r\n}\r\n/**\r\n * Copy values into store and return a new values object\r\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\r\n */\r\nfunction internalSetValues(store, values) {\r\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread({}, store);\r\n  if (!values) {\r\n    return newStore;\r\n  }\r\n  Object.keys(values).forEach(function (key) {\r\n    var prevValue = newStore[key];\r\n    var value = values[key];\r\n    // If both are object (but target is not array), we use recursion to set deep value\r\n    var recursive = isObject(prevValue) && isObject(value);\r\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : cloneDeep(value); // Clone deep for arrays\r\n  });\r\n\r\n  return newStore;\r\n}\r\nexport function setValues(store) {\r\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    restValues[_key - 1] = arguments[_key];\r\n  }\r\n  return restValues.reduce(function (current, newStore) {\r\n    return internalSetValues(current, newStore);\r\n  }, store);\r\n}\r\nexport function matchNamePath(namePath, changedNamePath) {\r\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\r\n    return false;\r\n  }\r\n  return namePath.every(function (nameUnit, i) {\r\n    return changedNamePath[i] === nameUnit;\r\n  });\r\n}\r\nexport function isSimilar(source, target) {\r\n  if (source === target) {\r\n    return true;\r\n  }\r\n  if (!source && target || source && !target) {\r\n    return false;\r\n  }\r\n  if (!source || !target || _typeof(source) !== 'object' || _typeof(target) !== 'object') {\r\n    return false;\r\n  }\r\n  var sourceKeys = Object.keys(source);\r\n  var targetKeys = Object.keys(target);\r\n  var keys = new Set([].concat(sourceKeys, targetKeys));\r\n  return _toConsumableArray(keys).every(function (key) {\r\n    var sourceValue = source[key];\r\n    var targetValue = target[key];\r\n    if (typeof sourceValue === 'function' && typeof targetValue === 'function') {\r\n      return true;\r\n    }\r\n    return sourceValue === targetValue;\r\n  });\r\n}\r\nexport function defaultGetValueFromEvent(valuePropName) {\r\n  var event = arguments.length <= 1 ? undefined : arguments[1];\r\n  if (event && event.target && _typeof(event.target) === 'object' && valuePropName in event.target) {\r\n    return event.target[valuePropName];\r\n  }\r\n  return event;\r\n}\r\n/**\r\n * Moves an array item from one position in an array to another.\r\n *\r\n * Note: This is a pure function so a new array will be returned, instead\r\n * of altering the array argument.\r\n *\r\n * @param array         Array in which to move an item.         (required)\r\n * @param moveIndex     The index of the item to move.          (required)\r\n * @param toIndex       The index to move item at moveIndex to. (required)\r\n */\r\nexport function move(array, moveIndex, toIndex) {\r\n  var length = array.length;\r\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\r\n    return array;\r\n  }\r\n  var item = array[moveIndex];\r\n  var diff = moveIndex - toIndex;\r\n  if (diff > 0) {\r\n    // move left\r\n    return [].concat(_toConsumableArray(array.slice(0, toIndex)), [item], _toConsumableArray(array.slice(toIndex, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, length)));\r\n  }\r\n  if (diff < 0) {\r\n    // move right\r\n    return [].concat(_toConsumableArray(array.slice(0, moveIndex)), _toConsumableArray(array.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array.slice(toIndex + 1, length)));\r\n  }\r\n  return array;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}