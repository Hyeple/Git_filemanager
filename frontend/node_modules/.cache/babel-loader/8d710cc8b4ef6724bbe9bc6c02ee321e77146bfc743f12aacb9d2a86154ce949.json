{"ast":null,"code":"import { useMemo } from 'react';\n/**\r\n * Get sticky column offset width\r\n */\nfunction useStickyOffsets(colWidths, columnCount, direction) {\n  var stickyOffsets = useMemo(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0;\n\n        // Right offset\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0;\n\n        // Right offset\n        var _end = columnCount - start - 1;\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  }, [colWidths, columnCount, direction]);\n  return stickyOffsets;\n}\nexport default useStickyOffsets;","map":{"version":3,"names":["useMemo","useStickyOffsets","colWidths","columnCount","direction","stickyOffsets","leftOffsets","rightOffsets","left","right","start","end","_end"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/rc-table/es/hooks/useStickyOffsets.js"],"sourcesContent":["import { useMemo } from 'react';\r\n/**\r\n * Get sticky column offset width\r\n */\r\nfunction useStickyOffsets(colWidths, columnCount, direction) {\r\n  var stickyOffsets = useMemo(function () {\r\n    var leftOffsets = [];\r\n    var rightOffsets = [];\r\n    var left = 0;\r\n    var right = 0;\r\n    for (var start = 0; start < columnCount; start += 1) {\r\n      if (direction === 'rtl') {\r\n        // Left offset\r\n        rightOffsets[start] = right;\r\n        right += colWidths[start] || 0;\r\n\r\n        // Right offset\r\n        var end = columnCount - start - 1;\r\n        leftOffsets[end] = left;\r\n        left += colWidths[end] || 0;\r\n      } else {\r\n        // Left offset\r\n        leftOffsets[start] = left;\r\n        left += colWidths[start] || 0;\r\n\r\n        // Right offset\r\n        var _end = columnCount - start - 1;\r\n        rightOffsets[_end] = right;\r\n        right += colWidths[_end] || 0;\r\n      }\r\n    }\r\n    return {\r\n      left: leftOffsets,\r\n      right: rightOffsets\r\n    };\r\n  }, [colWidths, columnCount, direction]);\r\n  return stickyOffsets;\r\n}\r\nexport default useStickyOffsets;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAE;EAC3D,IAAIC,aAAa,GAAGL,OAAO,CAAC,YAAY;IACtC,IAAIM,WAAW,GAAG,EAAE;IACpB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,IAAI,GAAG,CAAC;IACZ,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,WAAW,EAAEO,KAAK,IAAI,CAAC,EAAE;MACnD,IAAIN,SAAS,KAAK,KAAK,EAAE;QACvB;QACAG,YAAY,CAACG,KAAK,CAAC,GAAGD,KAAK;QAC3BA,KAAK,IAAIP,SAAS,CAACQ,KAAK,CAAC,IAAI,CAAC;;QAE9B;QACA,IAAIC,GAAG,GAAGR,WAAW,GAAGO,KAAK,GAAG,CAAC;QACjCJ,WAAW,CAACK,GAAG,CAAC,GAAGH,IAAI;QACvBA,IAAI,IAAIN,SAAS,CAACS,GAAG,CAAC,IAAI,CAAC;MAC7B,CAAC,MAAM;QACL;QACAL,WAAW,CAACI,KAAK,CAAC,GAAGF,IAAI;QACzBA,IAAI,IAAIN,SAAS,CAACQ,KAAK,CAAC,IAAI,CAAC;;QAE7B;QACA,IAAIE,IAAI,GAAGT,WAAW,GAAGO,KAAK,GAAG,CAAC;QAClCH,YAAY,CAACK,IAAI,CAAC,GAAGH,KAAK;QAC1BA,KAAK,IAAIP,SAAS,CAACU,IAAI,CAAC,IAAI,CAAC;MAC/B;IACF;IACA,OAAO;MACLJ,IAAI,EAAEF,WAAW;MACjBG,KAAK,EAAEF;IACT,CAAC;EACH,CAAC,EAAE,CAACL,SAAS,EAAEC,WAAW,EAAEC,SAAS,CAAC,CAAC;EACvC,OAAOC,aAAa;AACtB;AACA,eAAeJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}