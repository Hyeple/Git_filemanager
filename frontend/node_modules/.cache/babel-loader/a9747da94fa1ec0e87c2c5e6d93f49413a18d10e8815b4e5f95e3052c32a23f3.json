{"ast":null,"code":"import _defineProperty from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n    loading = props.loading,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    style = props.style,\n    children = props.children,\n    _props$avatar = props.avatar,\n    avatar = _props$avatar === void 0 ? false : _props$avatar,\n    _props$title = props.title,\n    title = _props$title === void 0 ? true : _props$title,\n    _props$paragraph = props.paragraph,\n    paragraph = _props$paragraph === void 0 ? true : _props$paragraph,\n    active = props.active,\n    round = props.round;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  if (loading || !('loading' in props)) {\n    var _classNames;\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph;\n    // Avatar\n    var avatarNode;\n    if (hasAvatar) {\n      var avatarProps = Object.assign(Object.assign({\n        prefixCls: \"\".concat(prefixCls, \"-avatar\")\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    var contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n      if (hasTitle) {\n        var titleProps = Object.assign(Object.assign({\n          prefixCls: \"\".concat(prefixCls, \"-title\")\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      var paragraphNode;\n      if (hasParagraph) {\n        var paragraphProps = Object.assign(Object.assign({\n          prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, $title, paragraphNode);\n    }\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-round\"), round), _classNames), className, rootClassName, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;","map":{"version":3,"names":["classNames","React","ConfigContext","SkeletonAvatar","SkeletonButton","SkeletonNode","Element","SkeletonImage","SkeletonInput","Paragraph","Title","useStyle","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","customizePrefixCls","prefixCls","loading","className","rootClassName","style","children","_props$avatar","avatar","_props$title","title","_props$paragraph","paragraph","active","round","_React$useContext","useContext","getPrefixCls","direction","_useStyle","_useStyle2","_slicedToArray","wrapSSR","hashId","_classNames","avatarNode","avatarProps","Object","assign","concat","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","_defineProperty","Button","Avatar","Input","Image","Node","process","env","NODE_ENV","displayName"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/antd/es/skeleton/Skeleton.js"],"sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { ConfigContext } from '../config-provider';\r\nimport SkeletonAvatar from './Avatar';\r\nimport SkeletonButton from './Button';\r\nimport SkeletonNode from './Node';\r\nimport Element from './Element';\r\nimport SkeletonImage from './Image';\r\nimport SkeletonInput from './Input';\r\nimport Paragraph from './Paragraph';\r\nimport Title from './Title';\r\nimport useStyle from './style';\r\nfunction getComponentProps(prop) {\r\n  if (prop && typeof prop === 'object') {\r\n    return prop;\r\n  }\r\n  return {};\r\n}\r\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\r\n  if (hasTitle && !hasParagraph) {\r\n    // Square avatar\r\n    return {\r\n      size: 'large',\r\n      shape: 'square'\r\n    };\r\n  }\r\n  return {\r\n    size: 'large',\r\n    shape: 'circle'\r\n  };\r\n}\r\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\r\n  if (!hasAvatar && hasParagraph) {\r\n    return {\r\n      width: '38%'\r\n    };\r\n  }\r\n  if (hasAvatar && hasParagraph) {\r\n    return {\r\n      width: '50%'\r\n    };\r\n  }\r\n  return {};\r\n}\r\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\r\n  const basicProps = {};\r\n  // Width\r\n  if (!hasAvatar || !hasTitle) {\r\n    basicProps.width = '61%';\r\n  }\r\n  // Rows\r\n  if (!hasAvatar && hasTitle) {\r\n    basicProps.rows = 3;\r\n  } else {\r\n    basicProps.rows = 2;\r\n  }\r\n  return basicProps;\r\n}\r\nconst Skeleton = props => {\r\n  const {\r\n    prefixCls: customizePrefixCls,\r\n    loading,\r\n    className,\r\n    rootClassName,\r\n    style,\r\n    children,\r\n    avatar = false,\r\n    title = true,\r\n    paragraph = true,\r\n    active,\r\n    round\r\n  } = props;\r\n  const {\r\n    getPrefixCls,\r\n    direction\r\n  } = React.useContext(ConfigContext);\r\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\r\n  const [wrapSSR, hashId] = useStyle(prefixCls);\r\n  if (loading || !('loading' in props)) {\r\n    const hasAvatar = !!avatar;\r\n    const hasTitle = !!title;\r\n    const hasParagraph = !!paragraph;\r\n    // Avatar\r\n    let avatarNode;\r\n    if (hasAvatar) {\r\n      const avatarProps = Object.assign(Object.assign({\r\n        prefixCls: `${prefixCls}-avatar`\r\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\r\n      // We direct use SkeletonElement as avatar in skeleton internal.\r\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\r\n        className: `${prefixCls}-header`\r\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\r\n    }\r\n    let contentNode;\r\n    if (hasTitle || hasParagraph) {\r\n      // Title\r\n      let $title;\r\n      if (hasTitle) {\r\n        const titleProps = Object.assign(Object.assign({\r\n          prefixCls: `${prefixCls}-title`\r\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\r\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\r\n      }\r\n      // Paragraph\r\n      let paragraphNode;\r\n      if (hasParagraph) {\r\n        const paragraphProps = Object.assign(Object.assign({\r\n          prefixCls: `${prefixCls}-paragraph`\r\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\r\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\r\n      }\r\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\r\n        className: `${prefixCls}-content`\r\n      }, $title, paragraphNode);\r\n    }\r\n    const cls = classNames(prefixCls, {\r\n      [`${prefixCls}-with-avatar`]: hasAvatar,\r\n      [`${prefixCls}-active`]: active,\r\n      [`${prefixCls}-rtl`]: direction === 'rtl',\r\n      [`${prefixCls}-round`]: round\r\n    }, className, rootClassName, hashId);\r\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\r\n      className: cls,\r\n      style: style\r\n    }, avatarNode, contentNode));\r\n  }\r\n  return typeof children !== 'undefined' ? children : null;\r\n};\r\nSkeleton.Button = SkeletonButton;\r\nSkeleton.Avatar = SkeletonAvatar;\r\nSkeleton.Input = SkeletonInput;\r\nSkeleton.Image = SkeletonImage;\r\nSkeleton.Node = SkeletonNode;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Skeleton.displayName = 'Skeleton';\r\n}\r\nexport default Skeleton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}