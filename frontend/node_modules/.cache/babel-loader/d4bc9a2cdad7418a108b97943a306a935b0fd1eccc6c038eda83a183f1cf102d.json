{"ast":null,"code":"'use client';\n\nimport _toConsumableArray from \"C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"style\"],\n  _excluded2 = [\"style\", \"onClick\"],\n  _excluded3 = [\"isOpen\", \"styleNonce\", \"setIsOpen\", \"context\", \"onDragStart\", \"onPositionChange\", \"showCloseButton\", \"position\", \"closeButtonProps\", \"errorTypes\"],\n  _excluded4 = [\"onClick\"];\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useQueryClient, onlineManager, notifyManager } from '@tanstack/react-query';\nimport { rankItem } from '@tanstack/match-sorter-utils';\nimport useLocalStorage from './useLocalStorage.mjs';\nimport { defaultPanelSize, useIsMounted, getSidedProp, getSidePanelStyle, sortFns, getResizeHandleStyle, displayValue, getQueryStatusColor, getQueryStatusLabel, isVerticalSide, minPanelSize } from './utils.mjs';\nimport { Panel, Select, Input, Button, ActiveQueryPanel, Code, QueryKeys, QueryKey } from './styledComponents.mjs';\nimport ScreenReader from './screenreader.mjs';\nimport { defaultTheme, ThemeProvider } from './theme.mjs';\nimport Explorer from './Explorer.mjs';\nimport Logo from './Logo.mjs';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim/index.js';\nfunction ReactQueryDevtools(_ref) {\n  var initialIsOpen = _ref.initialIsOpen,\n    _ref$panelProps = _ref.panelProps,\n    panelProps = _ref$panelProps === void 0 ? {} : _ref$panelProps,\n    _ref$closeButtonProps = _ref.closeButtonProps,\n    closeButtonProps = _ref$closeButtonProps === void 0 ? {} : _ref$closeButtonProps,\n    _ref$toggleButtonProp = _ref.toggleButtonProps,\n    toggleButtonProps = _ref$toggleButtonProp === void 0 ? {} : _ref$toggleButtonProp,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? 'bottom-left' : _ref$position,\n    _ref$containerElement = _ref.containerElement,\n    Container = _ref$containerElement === void 0 ? 'aside' : _ref$containerElement,\n    context = _ref.context,\n    styleNonce = _ref.styleNonce,\n    _ref$panelPosition = _ref.panelPosition,\n    initialPanelPosition = _ref$panelPosition === void 0 ? 'bottom' : _ref$panelPosition,\n    _ref$errorTypes = _ref.errorTypes,\n    errorTypes = _ref$errorTypes === void 0 ? [] : _ref$errorTypes;\n  var rootRef = React.useRef(null);\n  var panelRef = React.useRef(null);\n  var _useLocalStorage = useLocalStorage('reactQueryDevtoolsOpen', initialIsOpen),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    isOpen = _useLocalStorage2[0],\n    setIsOpen = _useLocalStorage2[1];\n  var _useLocalStorage3 = useLocalStorage('reactQueryDevtoolsHeight', defaultPanelSize),\n    _useLocalStorage4 = _slicedToArray(_useLocalStorage3, 2),\n    devtoolsHeight = _useLocalStorage4[0],\n    setDevtoolsHeight = _useLocalStorage4[1];\n  var _useLocalStorage5 = useLocalStorage('reactQueryDevtoolsWidth', defaultPanelSize),\n    _useLocalStorage6 = _slicedToArray(_useLocalStorage5, 2),\n    devtoolsWidth = _useLocalStorage6[0],\n    setDevtoolsWidth = _useLocalStorage6[1];\n  var _useLocalStorage7 = useLocalStorage('reactQueryDevtoolsPanelPosition', initialPanelPosition),\n    _useLocalStorage8 = _slicedToArray(_useLocalStorage7, 2),\n    _useLocalStorage8$ = _useLocalStorage8[0],\n    panelPosition = _useLocalStorage8$ === void 0 ? 'bottom' : _useLocalStorage8$,\n    setPanelPosition = _useLocalStorage8[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isResolvedOpen = _React$useState2[0],\n    setIsResolvedOpen = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isResizing = _React$useState4[0],\n    setIsResizing = _React$useState4[1];\n  var isMounted = useIsMounted();\n  var handleDragStart = function handleDragStart(panelElement, startEvent) {\n    if (!panelElement) return;\n    if (startEvent.button !== 0) return; // Only allow left click for drag\n\n    var isVertical = isVerticalSide(panelPosition);\n    setIsResizing(true);\n    var _panelElement$getBoun = panelElement.getBoundingClientRect(),\n      height = _panelElement$getBoun.height,\n      width = _panelElement$getBoun.width;\n    var startX = startEvent.clientX;\n    var startY = startEvent.clientY;\n    var newSize = 0;\n    var run = function run(moveEvent) {\n      // prevent mouse selecting stuff with mouse drag\n      moveEvent.preventDefault(); // calculate the correct size based on mouse position and current panel position\n      // hint: it is different formula for the opposite sides\n\n      if (isVertical) {\n        newSize = width + (panelPosition === 'right' ? startX - moveEvent.clientX : moveEvent.clientX - startX);\n        setDevtoolsWidth(newSize);\n      } else {\n        newSize = height + (panelPosition === 'bottom' ? startY - moveEvent.clientY : moveEvent.clientY - startY);\n        setDevtoolsHeight(newSize);\n      }\n      if (newSize < minPanelSize) {\n        setIsOpen(false);\n      } else {\n        setIsOpen(true);\n      }\n    };\n    var unsub = function unsub() {\n      if (isResizing) {\n        setIsResizing(false);\n      }\n      document.removeEventListener('mousemove', run, false);\n      document.removeEventListener('mouseUp', unsub, false);\n    };\n    document.addEventListener('mousemove', run, false);\n    document.addEventListener('mouseup', unsub, false);\n  };\n  React.useEffect(function () {\n    setIsResolvedOpen(isOpen != null ? isOpen : false);\n  }, [isOpen, isResolvedOpen, setIsResolvedOpen]); // Toggle panel visibility before/after transition (depending on direction).\n  // Prevents focusing in a closed panel.\n\n  React.useEffect(function () {\n    var ref = panelRef.current;\n    if (ref) {\n      var handlePanelTransitionStart = function handlePanelTransitionStart() {\n        if (isResolvedOpen) {\n          ref.style.visibility = 'visible';\n        }\n      };\n      var handlePanelTransitionEnd = function handlePanelTransitionEnd() {\n        if (!isResolvedOpen) {\n          ref.style.visibility = 'hidden';\n        }\n      };\n      ref.addEventListener('transitionstart', handlePanelTransitionStart);\n      ref.addEventListener('transitionend', handlePanelTransitionEnd);\n      return function () {\n        ref.removeEventListener('transitionstart', handlePanelTransitionStart);\n        ref.removeEventListener('transitionend', handlePanelTransitionEnd);\n      };\n    }\n    return;\n  }, [isResolvedOpen]);\n  React.useEffect(function () {\n    var _rootRef$current;\n    if (isResolvedOpen && (_rootRef$current = rootRef.current) != null && _rootRef$current.parentElement) {\n      var parentElement = rootRef.current.parentElement;\n      var styleProp = getSidedProp('padding', panelPosition);\n      var isVertical = isVerticalSide(panelPosition);\n      var previousPaddings = function (_ref2) {\n        var padding = _ref2.padding,\n          paddingTop = _ref2.paddingTop,\n          paddingBottom = _ref2.paddingBottom,\n          paddingLeft = _ref2.paddingLeft,\n          paddingRight = _ref2.paddingRight;\n        return {\n          padding: padding,\n          paddingTop: paddingTop,\n          paddingBottom: paddingBottom,\n          paddingLeft: paddingLeft,\n          paddingRight: paddingRight\n        };\n      }(parentElement.style);\n      var run = function run() {\n        // reset the padding\n        parentElement.style.padding = '0px';\n        parentElement.style.paddingTop = '0px';\n        parentElement.style.paddingBottom = '0px';\n        parentElement.style.paddingLeft = '0px';\n        parentElement.style.paddingRight = '0px'; // set the new padding based on the new panel position\n\n        parentElement.style[styleProp] = (isVertical ? devtoolsWidth : devtoolsHeight) + \"px\";\n      };\n      run();\n      if (typeof window !== 'undefined') {\n        window.addEventListener('resize', run);\n        return function () {\n          window.removeEventListener('resize', run);\n          Object.entries(previousPaddings).forEach(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n              property = _ref4[0],\n              previousValue = _ref4[1];\n            parentElement.style[property] = previousValue;\n          });\n        };\n      }\n    }\n    return;\n  }, [isResolvedOpen, panelPosition, devtoolsHeight, devtoolsWidth]);\n  var _panelProps$style = panelProps.style,\n    panelStyle = _panelProps$style === void 0 ? {} : _panelProps$style,\n    otherPanelProps = _objectWithoutProperties(panelProps, _excluded);\n  var _toggleButtonProps$st = toggleButtonProps.style,\n    toggleButtonStyle = _toggleButtonProps$st === void 0 ? {} : _toggleButtonProps$st,\n    onToggleClick = toggleButtonProps.onClick,\n    otherToggleButtonProps = _objectWithoutProperties(toggleButtonProps, _excluded2); // get computed style based on panel position\n\n  var style = getSidePanelStyle({\n    position: panelPosition,\n    devtoolsTheme: defaultTheme,\n    isOpen: isResolvedOpen,\n    height: devtoolsHeight,\n    width: devtoolsWidth,\n    isResizing: isResizing,\n    panelStyle: panelStyle\n  }); // Do not render on the server\n\n  if (!isMounted()) return null;\n  return /*#__PURE__*/React.createElement(Container, {\n    ref: rootRef,\n    className: \"ReactQueryDevtools\",\n    \"aria-label\": \"React Query Devtools\"\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: defaultTheme\n  }, /*#__PURE__*/React.createElement(ReactQueryDevtoolsPanel, _extends({\n    ref: panelRef,\n    context: context,\n    styleNonce: styleNonce,\n    position: panelPosition,\n    onPositionChange: setPanelPosition,\n    showCloseButton: true,\n    closeButtonProps: closeButtonProps\n  }, otherPanelProps, {\n    style: style,\n    isOpen: isResolvedOpen,\n    setIsOpen: setIsOpen,\n    onDragStart: function onDragStart(e) {\n      return handleDragStart(panelRef.current, e);\n    },\n    errorTypes: errorTypes\n  }))), !isResolvedOpen ? /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\"\n  }, otherToggleButtonProps, {\n    \"aria-label\": \"Open React Query Devtools\",\n    \"aria-controls\": \"ReactQueryDevtoolsPanel\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    onClick: function onClick(e) {\n      setIsOpen(true);\n      onToggleClick == null ? void 0 : onToggleClick(e);\n    },\n    style: _objectSpread(_objectSpread({\n      background: 'none',\n      border: 0,\n      padding: 0,\n      position: 'fixed',\n      zIndex: 99999,\n      display: 'inline-flex',\n      fontSize: '1.5em',\n      margin: '.5em',\n      cursor: 'pointer',\n      width: 'fit-content'\n    }, position === 'top-right' ? {\n      top: '0',\n      right: '0'\n    } : position === 'top-left' ? {\n      top: '0',\n      left: '0'\n    } : position === 'bottom-right' ? {\n      bottom: '0',\n      right: '0'\n    } : {\n      bottom: '0',\n      left: '0'\n    }), toggleButtonStyle)\n  }), /*#__PURE__*/React.createElement(Logo, {\n    \"aria-hidden\": true\n  }), /*#__PURE__*/React.createElement(ScreenReader, {\n    text: \"Open React Query Devtools\"\n  })) : null);\n}\nvar useSubscribeToQueryCache = function useSubscribeToQueryCache(queryCache, getSnapshot) {\n  var skip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return useSyncExternalStore(React.useCallback(function (onStoreChange) {\n    if (!skip) return queryCache.subscribe(notifyManager.batchCalls(onStoreChange));\n    return function () {\n      return;\n    };\n  }, [queryCache, skip]), getSnapshot, getSnapshot);\n};\nvar ReactQueryDevtoolsPanel = /*#__PURE__*/React.forwardRef(function ReactQueryDevtoolsPanel(props, ref) {\n  var _props$isOpen = props.isOpen,\n    isOpen = _props$isOpen === void 0 ? true : _props$isOpen,\n    styleNonce = props.styleNonce,\n    setIsOpen = props.setIsOpen,\n    context = props.context,\n    onDragStart = props.onDragStart,\n    onPositionChange = props.onPositionChange,\n    showCloseButton = props.showCloseButton,\n    position = props.position,\n    _props$closeButtonPro = props.closeButtonProps,\n    closeButtonProps = _props$closeButtonPro === void 0 ? {} : _props$closeButtonPro,\n    _props$errorTypes = props.errorTypes,\n    errorTypes = _props$errorTypes === void 0 ? [] : _props$errorTypes,\n    panelProps = _objectWithoutProperties(props, _excluded3);\n  var onCloseClick = closeButtonProps.onClick,\n    otherCloseButtonProps = _objectWithoutProperties(closeButtonProps, _excluded4);\n  var queryClient = useQueryClient({\n    context: context\n  });\n  var queryCache = queryClient.getQueryCache();\n  var _useLocalStorage9 = useLocalStorage('reactQueryDevtoolsSortFn', Object.keys(sortFns)[0]),\n    _useLocalStorage10 = _slicedToArray(_useLocalStorage9, 2),\n    sort = _useLocalStorage10[0],\n    setSort = _useLocalStorage10[1];\n  var _useLocalStorage11 = useLocalStorage('reactQueryDevtoolsFilter', ''),\n    _useLocalStorage12 = _slicedToArray(_useLocalStorage11, 2),\n    filter = _useLocalStorage12[0],\n    setFilter = _useLocalStorage12[1];\n  var _useLocalStorage13 = useLocalStorage('reactQueryDevtoolsBaseSort', 1),\n    _useLocalStorage14 = _slicedToArray(_useLocalStorage13, 2),\n    baseSort = _useLocalStorage14[0],\n    setBaseSort = _useLocalStorage14[1];\n  var sortFn = React.useMemo(function () {\n    return sortFns[sort];\n  }, [sort]);\n  var queriesCount = useSubscribeToQueryCache(queryCache, function () {\n    return queryCache.getAll().length;\n  }, !isOpen);\n  var _useLocalStorage15 = useLocalStorage('reactQueryDevtoolsActiveQueryHash', ''),\n    _useLocalStorage16 = _slicedToArray(_useLocalStorage15, 2),\n    activeQueryHash = _useLocalStorage16[0],\n    setActiveQueryHash = _useLocalStorage16[1];\n  var queries = React.useMemo(function () {\n    var unsortedQueries = queryCache.getAll();\n    if (queriesCount === 0) {\n      return [];\n    }\n    var filtered = filter ? unsortedQueries.filter(function (item) {\n      return rankItem(item.queryHash, filter).passed;\n    }) : _toConsumableArray(unsortedQueries);\n    var sorted = sortFn ? filtered.sort(function (a, b) {\n      return sortFn(a, b) * baseSort;\n    }) : filtered;\n    return sorted;\n  }, [baseSort, sortFn, filter, queriesCount, queryCache]);\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isMockOffline = _React$useState6[0],\n    setMockOffline = _React$useState6[1];\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: defaultTheme\n  }, /*#__PURE__*/React.createElement(Panel, _extends({\n    ref: ref,\n    className: \"ReactQueryDevtoolsPanel\",\n    \"aria-label\": \"React Query Devtools Panel\",\n    id: \"ReactQueryDevtoolsPanel\"\n  }, panelProps, {\n    style: _objectSpread({\n      height: defaultPanelSize,\n      position: 'relative'\n    }, panelProps.style)\n  }), /*#__PURE__*/React.createElement(\"style\", {\n    nonce: styleNonce,\n    dangerouslySetInnerHTML: {\n      __html: \"\\n            .ReactQueryDevtoolsPanel * {\\n              scrollbar-color: \" + defaultTheme.backgroundAlt + \" \" + defaultTheme.gray + \";\\n            }\\n\\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar, .ReactQueryDevtoolsPanel scrollbar {\\n              width: 1em;\\n              height: 1em;\\n            }\\n\\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar-track, .ReactQueryDevtoolsPanel scrollbar-track {\\n              background: \" + defaultTheme.backgroundAlt + \";\\n            }\\n\\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar-thumb, .ReactQueryDevtoolsPanel scrollbar-thumb {\\n              background: \" + defaultTheme.gray + \";\\n              border-radius: .5em;\\n              border: 3px solid \" + defaultTheme.backgroundAlt + \";\\n            }\\n          \"\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: getResizeHandleStyle(position),\n    onMouseDown: onDragStart\n  }), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1 1 500px',\n      minHeight: '40%',\n      maxHeight: '100%',\n      overflow: 'auto',\n      borderRight: \"1px solid \" + defaultTheme.grayAlt,\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em',\n      background: defaultTheme.backgroundAlt,\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"aria-label\": \"Close React Query Devtools\",\n    \"aria-controls\": \"ReactQueryDevtoolsPanel\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"true\",\n    onClick: function onClick() {\n      return setIsOpen(false);\n    },\n    style: {\n      display: 'inline-flex',\n      background: 'none',\n      border: 0,\n      padding: 0,\n      marginRight: '.5em',\n      cursor: 'pointer'\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    \"aria-hidden\": true\n  }), /*#__PURE__*/React.createElement(ScreenReader, {\n    text: \"Close React Query Devtools\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(QueryStatusCount, {\n    queryCache: queryCache\n  }), position && onPositionChange ? /*#__PURE__*/React.createElement(Select, {\n    \"aria-label\": \"Panel position\",\n    value: position,\n    style: {\n      marginInlineStart: '.5em'\n    },\n    onChange: function onChange(e) {\n      return onPositionChange(e.target.value);\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"left\"\n  }, \"Left\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"right\"\n  }, \"Right\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"top\"\n  }, \"Top\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"bottom\"\n  }, \"Bottom\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      gap: '0.5em'\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Filter\",\n    \"aria-label\": \"Filter by queryhash\",\n    value: filter != null ? filter : '',\n    onChange: function onChange(e) {\n      return setFilter(e.target.value);\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === 'Escape') setFilter('');\n    },\n    style: {\n      flex: '1',\n      width: '100%'\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    \"aria-label\": \"Sort queries\",\n    value: sort,\n    onChange: function onChange(e) {\n      return setSort(e.target.value);\n    },\n    style: {\n      flex: '1',\n      minWidth: 75,\n      marginRight: '.5em'\n    }\n  }, Object.keys(sortFns).map(function (key) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: key,\n      value: key\n    }, \"Sort by \", key);\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      return setBaseSort(function (old) {\n        return old * -1;\n      });\n    },\n    style: {\n      padding: '.3em .4em',\n      marginRight: '.5em'\n    }\n  }, baseSort === 1 ? '⬆ Asc' : '⬇ Desc'), /*#__PURE__*/React.createElement(Button, {\n    title: \"Clear cache\",\n    \"aria-label\": \"Clear cache\",\n    type: \"button\",\n    onClick: function onClick() {\n      return queryCache.clear();\n    },\n    style: {\n      padding: '.3em .4em',\n      marginRight: '.5em'\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      if (isMockOffline) {\n        onlineManager.setOnline(undefined);\n        setMockOffline(false);\n        window.dispatchEvent(new Event('online'));\n      } else {\n        onlineManager.setOnline(false);\n        setMockOffline(true);\n      }\n    },\n    \"aria-label\": isMockOffline ? 'Restore offline mock' : 'Mock offline behavior',\n    title: isMockOffline ? 'Restore offline mock' : 'Mock offline behavior',\n    style: {\n      padding: '0',\n      height: '2em'\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"2em\",\n    height: \"2em\",\n    viewBox: \"0 0 24 24\",\n    stroke: isMockOffline ? defaultTheme.danger : 'currentColor',\n    fill: \"none\"\n  }, isMockOffline ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"18\",\n    x2: \"12.01\",\n    y2: \"18\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.172 15.172a4 4 0 0 1 5.656 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.343 12.343a7.963 7.963 0 0 1 3.864 -2.14m4.163 .155a7.965 7.965 0 0 1 3.287 2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.515 9.515a12 12 0 0 1 3.544 -2.455m3.101 -.92a12 12 0 0 1 10.325 3.374\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"3\",\n    x2: \"21\",\n    y2: \"21\"\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"18\",\n    x2: \"12.01\",\n    y2: \"18\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.172 15.172a4 4 0 0 1 5.656 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.343 12.343a8 8 0 0 1 11.314 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.515 9.515c4.686 -4.687 12.284 -4.687 17 0\"\n  }))), /*#__PURE__*/React.createElement(ScreenReader, {\n    text: isMockOffline ? 'Restore offline mock' : 'Mock offline behavior'\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowY: 'auto',\n      flex: '1'\n    }\n  }, queries.map(function (query) {\n    return /*#__PURE__*/React.createElement(QueryRow, {\n      queryKey: query.queryKey,\n      activeQueryHash: activeQueryHash,\n      setActiveQueryHash: setActiveQueryHash,\n      key: query.queryHash,\n      queryCache: queryCache\n    });\n  }))), activeQueryHash && isOpen ? /*#__PURE__*/React.createElement(ActiveQuery, {\n    activeQueryHash: activeQueryHash,\n    queryCache: queryCache,\n    queryClient: queryClient,\n    errorTypes: errorTypes\n  }) : null, showCloseButton ? /*#__PURE__*/React.createElement(Button, _extends({\n    type: \"button\",\n    \"aria-controls\": \"ReactQueryDevtoolsPanel\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"true\"\n  }, otherCloseButtonProps, {\n    style: _objectSpread({\n      position: 'absolute',\n      zIndex: 99999,\n      margin: '.5em',\n      bottom: 0,\n      left: 0\n    }, otherCloseButtonProps.style),\n    onClick: function onClick(e) {\n      setIsOpen(false);\n      onCloseClick == null ? void 0 : onCloseClick(e);\n    }\n  }), \"Close\") : null));\n});\nvar ActiveQuery = function ActiveQuery(_ref5) {\n  var queryCache = _ref5.queryCache,\n    activeQueryHash = _ref5.activeQueryHash,\n    queryClient = _ref5.queryClient,\n    errorTypes = _ref5.errorTypes;\n  var _useSubscribeToQueryC, _useSubscribeToQueryC2;\n  var activeQuery = useSubscribeToQueryCache(queryCache, function () {\n    return queryCache.getAll().find(function (query) {\n      return query.queryHash === activeQueryHash;\n    });\n  });\n  var activeQueryState = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$getAll$fi;\n    return (_queryCache$getAll$fi = queryCache.getAll().find(function (query) {\n      return query.queryHash === activeQueryHash;\n    })) == null ? void 0 : _queryCache$getAll$fi.state;\n  });\n  var isStale = (_useSubscribeToQueryC = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$getAll$fi2;\n    return (_queryCache$getAll$fi2 = queryCache.getAll().find(function (query) {\n      return query.queryHash === activeQueryHash;\n    })) == null ? void 0 : _queryCache$getAll$fi2.isStale();\n  })) != null ? _useSubscribeToQueryC : false;\n  var observerCount = (_useSubscribeToQueryC2 = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$getAll$fi3;\n    return (_queryCache$getAll$fi3 = queryCache.getAll().find(function (query) {\n      return query.queryHash === activeQueryHash;\n    })) == null ? void 0 : _queryCache$getAll$fi3.getObserversCount();\n  })) != null ? _useSubscribeToQueryC2 : 0;\n  var handleRefetch = function handleRefetch() {\n    var promise = activeQuery == null ? void 0 : activeQuery.fetch();\n    promise == null ? void 0 : promise.catch(noop);\n  };\n  var currentErrorTypeName = useMemo(function () {\n    if (activeQuery && activeQueryState != null && activeQueryState.error) {\n      var errorType = errorTypes.find(function (type) {\n        var _activeQueryState$err;\n        return type.initializer(activeQuery).toString() === ((_activeQueryState$err = activeQueryState.error) == null ? void 0 : _activeQueryState$err.toString());\n      });\n      return errorType == null ? void 0 : errorType.name;\n    }\n    return undefined;\n  }, [activeQuery, activeQueryState == null ? void 0 : activeQueryState.error, errorTypes]);\n  if (!activeQuery || !activeQueryState) {\n    return null;\n  }\n  var triggerError = function triggerError(errorType) {\n    var _errorType$initialize;\n    var error = (_errorType$initialize = errorType == null ? void 0 : errorType.initializer(activeQuery)) != null ? _errorType$initialize : new Error('Unknown error from devtools');\n    var __previousQueryOptions = activeQuery.options;\n    activeQuery.setState({\n      status: 'error',\n      error: error,\n      fetchMeta: _objectSpread(_objectSpread({}, activeQuery.state.fetchMeta), {}, {\n        __previousQueryOptions: __previousQueryOptions\n      })\n    });\n  };\n  var restoreQueryAfterLoadingOrError = function restoreQueryAfterLoadingOrError() {\n    activeQuery.fetch(activeQuery.state.fetchMeta.__previousQueryOptions, {\n      // Make sure this fetch will cancel the previous one\n      cancelRefetch: true\n    });\n  };\n  return /*#__PURE__*/React.createElement(ActiveQueryPanel, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em',\n      background: defaultTheme.backgroundAlt,\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Query Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '.5em',\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'space-between'\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    style: {\n      lineHeight: '1.8em'\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      margin: 0,\n      padding: 0,\n      overflow: 'auto'\n    }\n  }, displayValue(activeQuery.queryKey, true))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      padding: '0.3em .6em',\n      borderRadius: '0.4em',\n      fontWeight: 'bold',\n      textShadow: '0 2px 10px black',\n      background: getQueryStatusColor({\n        queryState: activeQueryState,\n        isStale: isStale,\n        observerCount: observerCount,\n        theme: defaultTheme\n      }),\n      flexShrink: 0\n    }\n  }, getQueryStatusLabel(activeQuery))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '.5em',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }\n  }, \"Observers: \", /*#__PURE__*/React.createElement(Code, null, observerCount)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }\n  }, \"Last Updated:\", ' ', /*#__PURE__*/React.createElement(Code, null, new Date(activeQueryState.dataUpdatedAt).toLocaleTimeString()))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: defaultTheme.backgroundAlt,\n      padding: '.5em',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Actions\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '0.5em',\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '0.5em',\n      alignItems: 'flex-end'\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: handleRefetch,\n    disabled: activeQueryState.fetchStatus === 'fetching',\n    style: {\n      background: defaultTheme.active\n    }\n  }, \"Refetch\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      return queryClient.invalidateQueries(activeQuery);\n    },\n    style: {\n      background: defaultTheme.warning,\n      color: defaultTheme.inputTextColor\n    }\n  }, \"Invalidate\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      return queryClient.resetQueries(activeQuery);\n    },\n    style: {\n      background: defaultTheme.gray\n    }\n  }, \"Reset\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      return queryClient.removeQueries(activeQuery);\n    },\n    style: {\n      background: defaultTheme.danger\n    }\n  }, \"Remove\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      var _activeQuery$state$fe;\n\n      // Return early if the query is already restoring\n      if (activeQuery.state.fetchStatus === 'fetching' && typeof ((_activeQuery$state$fe = activeQuery.state.fetchMeta) == null ? void 0 : _activeQuery$state$fe.__previousQueryOptions) === 'undefined') {\n        return;\n      }\n      if (activeQuery.state.data === undefined) {\n        restoreQueryAfterLoadingOrError();\n      } else {\n        var __previousQueryOptions = activeQuery.options; // Trigger a fetch in order to trigger suspense as well.\n\n        activeQuery.fetch(_objectSpread(_objectSpread({}, __previousQueryOptions), {}, {\n          queryFn: function queryFn() {\n            return new Promise(function () {// Never resolve\n            });\n          },\n          cacheTime: -1\n        }));\n        activeQuery.setState({\n          data: undefined,\n          status: 'loading',\n          fetchMeta: _objectSpread(_objectSpread({}, activeQuery.state.fetchMeta), {}, {\n            __previousQueryOptions: __previousQueryOptions\n          })\n        });\n      }\n    },\n    style: {\n      background: defaultTheme.paused\n    }\n  }, activeQuery.state.status === 'loading' ? 'Restore' : 'Trigger', ' ', \"loading\"), ' ', errorTypes.length === 0 || activeQuery.state.status === 'error' ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      if (!activeQuery.state.error) {\n        triggerError();\n      } else {\n        queryClient.resetQueries(activeQuery);\n      }\n    },\n    style: {\n      background: defaultTheme.danger\n    }\n  }, activeQuery.state.status === 'error' ? 'Restore' : 'Trigger', \" error\") : /*#__PURE__*/React.createElement(\"label\", null, \"Trigger error:\", /*#__PURE__*/React.createElement(Select, {\n    value: currentErrorTypeName != null ? currentErrorTypeName : '',\n    style: {\n      marginInlineStart: '.5em'\n    },\n    onChange: function onChange(e) {\n      var errorType = errorTypes.find(function (t) {\n        return t.name === e.target.value;\n      });\n      triggerError(errorType);\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\"\n  }), errorTypes.map(function (errorType) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: errorType.name,\n      value: errorType.name\n    }, errorType.name);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: defaultTheme.backgroundAlt,\n      padding: '.5em',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Data Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(Explorer, {\n    label: \"Data\",\n    value: activeQueryState.data,\n    defaultExpanded: {},\n    copyable: true\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: defaultTheme.backgroundAlt,\n      padding: '.5em',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Query Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(Explorer, {\n    label: \"Query\",\n    value: activeQuery,\n    defaultExpanded: {\n      queryKey: true\n    }\n  })));\n};\nvar QueryStatusCount = function QueryStatusCount(_ref6) {\n  var queryCache = _ref6.queryCache;\n  var hasFresh = useSubscribeToQueryCache(queryCache, function () {\n    return queryCache.getAll().filter(function (q) {\n      return getQueryStatusLabel(q) === 'fresh';\n    }).length;\n  });\n  var hasFetching = useSubscribeToQueryCache(queryCache, function () {\n    return queryCache.getAll().filter(function (q) {\n      return getQueryStatusLabel(q) === 'fetching';\n    }).length;\n  });\n  var hasPaused = useSubscribeToQueryCache(queryCache, function () {\n    return queryCache.getAll().filter(function (q) {\n      return getQueryStatusLabel(q) === 'paused';\n    }).length;\n  });\n  var hasStale = useSubscribeToQueryCache(queryCache, function () {\n    return queryCache.getAll().filter(function (q) {\n      return getQueryStatusLabel(q) === 'stale';\n    }).length;\n  });\n  var hasInactive = useSubscribeToQueryCache(queryCache, function () {\n    return queryCache.getAll().filter(function (q) {\n      return getQueryStatusLabel(q) === 'inactive';\n    }).length;\n  });\n  return /*#__PURE__*/React.createElement(QueryKeys, null, /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.success,\n      opacity: hasFresh ? 1 : 0.3\n    }\n  }, \"fresh \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasFresh, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.active,\n      opacity: hasFetching ? 1 : 0.3\n    }\n  }, \"fetching \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasFetching, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.paused,\n      opacity: hasPaused ? 1 : 0.3\n    }\n  }, \"paused \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasPaused, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.warning,\n      color: 'black',\n      textShadow: '0',\n      opacity: hasStale ? 1 : 0.3\n    }\n  }, \"stale \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasStale, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.gray,\n      opacity: hasInactive ? 1 : 0.3\n    }\n  }, \"inactive \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasInactive, \")\")));\n};\nvar QueryRow = /*#__PURE__*/React.memo(function (_ref7) {\n  var queryKey = _ref7.queryKey,\n    setActiveQueryHash = _ref7.setActiveQueryHash,\n    activeQueryHash = _ref7.activeQueryHash,\n    queryCache = _ref7.queryCache;\n  var _useSubscribeToQueryC3, _useSubscribeToQueryC4, _useSubscribeToQueryC5, _useSubscribeToQueryC6;\n  var queryHash = (_useSubscribeToQueryC3 = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$find;\n    return (_queryCache$find = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find.queryHash;\n  })) != null ? _useSubscribeToQueryC3 : '';\n  var queryState = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$find2;\n    return (_queryCache$find2 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find2.state;\n  });\n  var isStale = (_useSubscribeToQueryC4 = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$find3;\n    return (_queryCache$find3 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find3.isStale();\n  })) != null ? _useSubscribeToQueryC4 : false;\n  var isDisabled = (_useSubscribeToQueryC5 = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$find4;\n    return (_queryCache$find4 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find4.isDisabled();\n  })) != null ? _useSubscribeToQueryC5 : false;\n  var observerCount = (_useSubscribeToQueryC6 = useSubscribeToQueryCache(queryCache, function () {\n    var _queryCache$find5;\n    return (_queryCache$find5 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find5.getObserversCount();\n  })) != null ? _useSubscribeToQueryC6 : 0;\n  if (!queryState) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    \"aria-label\": \"Open query details for \" + queryHash,\n    onClick: function onClick() {\n      return setActiveQueryHash(activeQueryHash === queryHash ? '' : queryHash);\n    },\n    style: {\n      display: 'flex',\n      borderBottom: \"solid 1px \" + defaultTheme.grayAlt,\n      cursor: 'pointer',\n      background: queryHash === activeQueryHash ? 'rgba(255,255,255,.1)' : undefined\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '0 0 auto',\n      width: '2em',\n      height: '2em',\n      background: getQueryStatusColor({\n        queryState: queryState,\n        isStale: isStale,\n        observerCount: observerCount,\n        theme: defaultTheme\n      }),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      textShadow: isStale ? '0' : '0 0 10px black',\n      color: isStale ? 'black' : 'white'\n    }\n  }, observerCount), isDisabled ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '0 0 auto',\n      height: '2em',\n      background: defaultTheme.gray,\n      display: 'flex',\n      alignItems: 'center',\n      fontWeight: 'bold',\n      padding: '0 0.5em'\n    }\n  }, \"disabled\") : null, /*#__PURE__*/React.createElement(Code, {\n    style: {\n      padding: '.5em'\n    }\n  }, \"\" + queryHash));\n});\nQueryRow.displayName = 'QueryRow'; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\nexport { ReactQueryDevtools, ReactQueryDevtoolsPanel };","map":{"version":3,"names":["ReactQueryDevtools","_ref","panelProps","_ref$panelProps","_ref$closeButtonProps","closeButtonProps","_ref$toggleButtonProp","toggleButtonProps","_ref$position","position","_ref$containerElement","errorTypes","_ref$errorTypes","rootRef","React","useRef","panelRef","_useLocalStorage7","useLocalStorage","initialPanelPosition","_useLocalStorage8","_slicedToArray","_useLocalStorage8$","panelPosition","setPanelPosition","handleDragStart","panelElement","startEvent","button","isVertical","isVerticalSide","width","_panelElement$getBoun","startX","clientX","startY","clientY","newSize","moveEvent","height","isResizing","document","removeEventListener","run","unsub","addEventListener","setIsResolvedOpen","isOpen","ref","current","isResolvedOpen","style","visibility","handlePanelTransitionStart","handlePanelTransitionEnd","_rootRef$current","parentElement","styleProp","getSidedProp","paddingRight","_ref2","padding","paddingTop","paddingBottom","paddingLeft","window","Object","entries","previousPaddings","forEach","_ref3","_ref4","property","previousValue","_excluded","onToggleClick","onClick","devtoolsTheme","defaultTheme","devtoolsHeight","devtoolsWidth","panelStyle","isMounted","createElement","Container","className","ThemeProvider","theme","ReactQueryDevtoolsPanel","_extends","context","styleNonce","onPositionChange","showCloseButton","otherPanelProps","setIsOpen","type","otherToggleButtonProps","e","_objectSpread","background","border","zIndex","display","fontSize","margin","cursor","top","right","left","bottom","Logo","text","useSubscribeToQueryCache","queryCache","getSnapshot","skip","arguments","length","undefined","useSyncExternalStore","useCallback","onStoreChange","subscribe","notifyManager","batchCalls","forwardRef","props","_props$isOpen","_props$closeButtonPro","_props$errorTypes","_excluded3","onCloseClick","_excluded4","queryClient","getQueryCache","_useLocalStorage9","keys","sortFns","_useLocalStorage10","sort","setSort","sortFn","useMemo","queriesCount","getAll","queries","unsortedQueries","sorted","baseSort","filter","Panel","id","defaultPanelSize","nonce","dangerouslySetInnerHTML","__html","backgroundAlt","gray","getResizeHandleStyle","onMouseDown","onDragStart","flex","minHeight","maxHeight","overflow","flexDirection","justifyContent","alignItems","marginRight","marginBottom","QueryStatusCount","Select","value","marginInlineStart","flexWrap","gap","Input","placeholder","minWidth","key","Button","title","clear","isMockOffline","dispatchEvent","Event","xmlns","viewBox","stroke","danger","fill","d","x1","y1","x2","y2","ScreenReader","overflowY","map","query","QueryRow","activeQueryHash","setActiveQueryHash","otherCloseButtonProps","ActiveQuery","_ref5","_useSubscribeToQueryC","_useSubscribeToQueryC2","activeQueryState","_queryCache$getAll$fi","find","queryHash","state","isStale","_queryCache$getAll$fi2","observerCount","_queryCache$getAll$fi3","getObserversCount","promise","activeQuery","fetch","catch","noop","currentErrorTypeName","error","errorType","_activeQueryState$err","initializer","toString","name","_errorType$initialize","Error","__previousQueryOptions","options","status","fetchMeta","cancelRefetch","Code","lineHeight","borderRadius","fontWeight","textShadow","queryState","flexShrink","getQueryStatusLabel","Date","dataUpdatedAt","toLocaleTimeString","handleRefetch","disabled","fetchStatus","invalidateQueries","resetQueries","removeQueries","_activeQuery$state$fe","data","queryFn","Promise","cacheTime","t","target","Explorer","label","defaultExpanded","queryKey","_ref6","QueryKeys","QueryKey","opacity","hasFresh","hasFetching","hasPaused","color","hasStale","hasInactive","memo","_ref7","_useSubscribeToQueryC3","_useSubscribeToQueryC4","_useSubscribeToQueryC5","_useSubscribeToQueryC6","_queryCache$find","_queryCache$find2","_queryCache$find3","isDisabled","_queryCache$find4","_queryCache$find5","role","displayName"],"sources":["C:\\Users\\parkj\\Desktop\\nginx-file-browser-master\\frontend\\node_modules\\@tanstack\\react-query-devtools\\src\\devtools.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport type {\n  QueryCache,\n  QueryClient,\n  QueryKey as QueryKeyType,\n  ContextOptions,\n  Query,\n} from '@tanstack/react-query'\nimport {\n  useQueryClient,\n  onlineManager,\n  notifyManager,\n} from '@tanstack/react-query'\nimport { rankItem } from '@tanstack/match-sorter-utils'\nimport useLocalStorage from './useLocalStorage'\nimport {\n  isVerticalSide,\n  sortFns,\n  useIsMounted,\n  getSidePanelStyle,\n  minPanelSize,\n  getResizeHandleStyle,\n  getSidedProp,\n  defaultPanelSize,\n  displayValue,\n} from './utils'\nimport type { Corner, Side } from './utils'\nimport {\n  Panel,\n  QueryKeys,\n  QueryKey,\n  Button,\n  Code,\n  Input,\n  Select,\n  ActiveQueryPanel,\n} from './styledComponents'\nimport ScreenReader from './screenreader'\nimport { ThemeProvider, defaultTheme as theme } from './theme'\nimport { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\nimport Logo from './Logo'\nimport { useMemo } from 'react'\n\nexport interface DevToolsErrorType {\n  /**\n   * The name of the error.\n   */\n  name: string\n  /**\n   * How the error is initialized. Whatever it returns MUST implement toString() so\n   * we can check against the current error.\n   */\n  initializer: (query: Query) => { toString(): string }\n}\n\nexport interface DevtoolsOptions extends ContextOptions {\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n   */\n  panelProps?: React.ComponentPropsWithoutRef<'div'>\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.ComponentPropsWithoutRef<'button'>\n  /**\n   * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  toggleButtonProps?: React.ComponentPropsWithoutRef<'button'>\n  /**\n   * The position of the React Query logo to open and close the devtools panel.\n   * Defaults to 'bottom-left'.\n   */\n  position?: Corner\n  /**\n   * The position of the React Query devtools panel.\n   * Defaults to 'bottom'.\n   */\n  panelPosition?: Side\n  /**\n   * Use this to render the devtools inside a different type of container element for a11y purposes.\n   * Any string which corresponds to a valid intrinsic JSX element is allowed.\n   * Defaults to 'aside'.\n   */\n  containerElement?: string | any\n  /**\n   * nonce for style element for CSP\n   */\n  styleNonce?: string\n  /**\n   * Use this so you can define custom errors that can be shown in the devtools.\n   */\n  errorTypes?: DevToolsErrorType[]\n}\n\ninterface DevtoolsPanelOptions extends ContextOptions {\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: React.CSSProperties\n  /**\n   * The standard React className property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * nonce for style element for CSP\n   */\n  styleNonce?: string\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen: (isOpen: boolean) => void\n  /**\n   * Handles the opening and closing the devtools panel\n   */\n  onDragStart: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  /**\n   * The position of the React Query devtools panel.\n   * Defaults to 'bottom'.\n   */\n  position?: Side\n  /**\n   * Handles the panel position select change\n   */\n  onPositionChange?: (side: Side) => void\n  /**\n   * Show a close button inside the panel\n   */\n  showCloseButton?: boolean\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.ComponentPropsWithoutRef<'button'>\n  /**\n   * Use this so you can define custom errors that can be shown in the devtools.\n   */\n  errorTypes?: DevToolsErrorType[]\n}\n\nexport function ReactQueryDevtools({\n  initialIsOpen,\n  panelProps = {},\n  closeButtonProps = {},\n  toggleButtonProps = {},\n  position = 'bottom-left',\n  containerElement: Container = 'aside',\n  context,\n  styleNonce,\n  panelPosition: initialPanelPosition = 'bottom',\n  errorTypes = [],\n}: DevtoolsOptions): React.ReactElement | null {\n  const rootRef = React.useRef<HTMLDivElement>(null)\n  const panelRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'reactQueryDevtoolsOpen',\n    initialIsOpen,\n  )\n  const [devtoolsHeight, setDevtoolsHeight] = useLocalStorage<number>(\n    'reactQueryDevtoolsHeight',\n    defaultPanelSize,\n  )\n  const [devtoolsWidth, setDevtoolsWidth] = useLocalStorage<number>(\n    'reactQueryDevtoolsWidth',\n    defaultPanelSize,\n  )\n\n  const [panelPosition = 'bottom', setPanelPosition] = useLocalStorage<Side>(\n    'reactQueryDevtoolsPanelPosition',\n    initialPanelPosition,\n  )\n\n  const [isResolvedOpen, setIsResolvedOpen] = React.useState(false)\n  const [isResizing, setIsResizing] = React.useState(false)\n  const isMounted = useIsMounted()\n\n  const handleDragStart = (\n    panelElement: HTMLDivElement | null,\n    startEvent: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (!panelElement) return\n    if (startEvent.button !== 0) return // Only allow left click for drag\n    const isVertical = isVerticalSide(panelPosition)\n    setIsResizing(true)\n\n    const { height, width } = panelElement.getBoundingClientRect()\n    const startX = startEvent.clientX\n    const startY = startEvent.clientY\n    let newSize = 0\n\n    const run = (moveEvent: MouseEvent) => {\n      // prevent mouse selecting stuff with mouse drag\n      moveEvent.preventDefault()\n\n      // calculate the correct size based on mouse position and current panel position\n      // hint: it is different formula for the opposite sides\n      if (isVertical) {\n        newSize =\n          width +\n          (panelPosition === 'right'\n            ? startX - moveEvent.clientX\n            : moveEvent.clientX - startX)\n        setDevtoolsWidth(newSize)\n      } else {\n        newSize =\n          height +\n          (panelPosition === 'bottom'\n            ? startY - moveEvent.clientY\n            : moveEvent.clientY - startY)\n        setDevtoolsHeight(newSize)\n      }\n\n      if (newSize < minPanelSize) {\n        setIsOpen(false)\n      } else {\n        setIsOpen(true)\n      }\n    }\n\n    const unsub = () => {\n      if (isResizing) {\n        setIsResizing(false)\n      }\n\n      document.removeEventListener('mousemove', run, false)\n      document.removeEventListener('mouseUp', unsub, false)\n    }\n\n    document.addEventListener('mousemove', run, false)\n    document.addEventListener('mouseup', unsub, false)\n  }\n\n  React.useEffect(() => {\n    setIsResolvedOpen(isOpen ?? false)\n  }, [isOpen, isResolvedOpen, setIsResolvedOpen])\n\n  // Toggle panel visibility before/after transition (depending on direction).\n  // Prevents focusing in a closed panel.\n  React.useEffect(() => {\n    const ref = panelRef.current\n    if (ref) {\n      const handlePanelTransitionStart = () => {\n        if (isResolvedOpen) {\n          ref.style.visibility = 'visible'\n        }\n      }\n\n      const handlePanelTransitionEnd = () => {\n        if (!isResolvedOpen) {\n          ref.style.visibility = 'hidden'\n        }\n      }\n\n      ref.addEventListener('transitionstart', handlePanelTransitionStart)\n      ref.addEventListener('transitionend', handlePanelTransitionEnd)\n\n      return () => {\n        ref.removeEventListener('transitionstart', handlePanelTransitionStart)\n        ref.removeEventListener('transitionend', handlePanelTransitionEnd)\n      }\n    }\n    return\n  }, [isResolvedOpen])\n\n  React.useEffect(() => {\n    if (isResolvedOpen && rootRef.current?.parentElement) {\n      const { parentElement } = rootRef.current\n      const styleProp = getSidedProp('padding', panelPosition)\n      const isVertical = isVerticalSide(panelPosition)\n\n      const previousPaddings = (({\n        padding,\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n      }) => ({\n        padding,\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n      }))(parentElement.style)\n\n      const run = () => {\n        // reset the padding\n        parentElement.style.padding = '0px'\n        parentElement.style.paddingTop = '0px'\n        parentElement.style.paddingBottom = '0px'\n        parentElement.style.paddingLeft = '0px'\n        parentElement.style.paddingRight = '0px'\n        // set the new padding based on the new panel position\n\n        parentElement.style[styleProp] = `${\n          isVertical ? devtoolsWidth : devtoolsHeight\n        }px`\n      }\n\n      run()\n\n      if (typeof window !== 'undefined') {\n        window.addEventListener('resize', run)\n\n        return () => {\n          window.removeEventListener('resize', run)\n          Object.entries(previousPaddings).forEach(\n            ([property, previousValue]) => {\n              parentElement.style[property as keyof typeof previousPaddings] =\n                previousValue\n            },\n          )\n        }\n      }\n    }\n    return\n  }, [isResolvedOpen, panelPosition, devtoolsHeight, devtoolsWidth])\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  // get computed style based on panel position\n  const style = getSidePanelStyle({\n    position: panelPosition,\n    devtoolsTheme: theme,\n    isOpen: isResolvedOpen,\n    height: devtoolsHeight,\n    width: devtoolsWidth,\n    isResizing,\n    panelStyle,\n  })\n\n  // Do not render on the server\n  if (!isMounted()) return null\n\n  return (\n    <Container\n      ref={rootRef}\n      className=\"ReactQueryDevtools\"\n      aria-label=\"React Query Devtools\"\n    >\n      <ThemeProvider theme={theme}>\n        <ReactQueryDevtoolsPanel\n          ref={panelRef as any}\n          context={context}\n          styleNonce={styleNonce}\n          position={panelPosition}\n          onPositionChange={setPanelPosition}\n          showCloseButton\n          closeButtonProps={closeButtonProps}\n          {...otherPanelProps}\n          style={style}\n          isOpen={isResolvedOpen}\n          setIsOpen={setIsOpen}\n          onDragStart={(e) => handleDragStart(panelRef.current, e)}\n          errorTypes={errorTypes}\n        />\n      </ThemeProvider>\n      {!isResolvedOpen ? (\n        <button\n          type=\"button\"\n          {...otherToggleButtonProps}\n          aria-label=\"Open React Query Devtools\"\n          aria-controls=\"ReactQueryDevtoolsPanel\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          onClick={(e) => {\n            setIsOpen(true)\n            onToggleClick?.(e)\n          }}\n          style={{\n            background: 'none',\n            border: 0,\n            padding: 0,\n            position: 'fixed',\n            zIndex: 99999,\n            display: 'inline-flex',\n            fontSize: '1.5em',\n            margin: '.5em',\n            cursor: 'pointer',\n            width: 'fit-content',\n            ...(position === 'top-right'\n              ? {\n                  top: '0',\n                  right: '0',\n                }\n              : position === 'top-left'\n              ? {\n                  top: '0',\n                  left: '0',\n                }\n              : position === 'bottom-right'\n              ? {\n                  bottom: '0',\n                  right: '0',\n                }\n              : {\n                  bottom: '0',\n                  left: '0',\n                }),\n            ...toggleButtonStyle,\n          }}\n        >\n          <Logo aria-hidden />\n          <ScreenReader text=\"Open React Query Devtools\" />\n        </button>\n      ) : null}\n    </Container>\n  )\n}\n\nconst useSubscribeToQueryCache = <T,>(\n  queryCache: QueryCache,\n  getSnapshot: () => T,\n  skip: boolean = false,\n): T => {\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        if (!skip)\n          return queryCache.subscribe(notifyManager.batchCalls(onStoreChange))\n        return () => {\n          return\n        }\n      },\n      [queryCache, skip],\n    ),\n    getSnapshot,\n    getSnapshot,\n  )\n}\n\nexport const ReactQueryDevtoolsPanel = React.forwardRef<\n  HTMLDivElement,\n  DevtoolsPanelOptions\n>(function ReactQueryDevtoolsPanel(props, ref): React.ReactElement {\n  const {\n    isOpen = true,\n    styleNonce,\n    setIsOpen,\n    context,\n    onDragStart,\n    onPositionChange,\n    showCloseButton,\n    position,\n    closeButtonProps = {},\n    errorTypes = [],\n    ...panelProps\n  } = props\n\n  const { onClick: onCloseClick, ...otherCloseButtonProps } = closeButtonProps\n\n  const queryClient = useQueryClient({ context })\n  const queryCache = queryClient.getQueryCache()\n\n  const [sort, setSort] = useLocalStorage(\n    'reactQueryDevtoolsSortFn',\n    Object.keys(sortFns)[0],\n  )\n\n  const [filter, setFilter] = useLocalStorage('reactQueryDevtoolsFilter', '')\n\n  const [baseSort, setBaseSort] = useLocalStorage(\n    'reactQueryDevtoolsBaseSort',\n    1,\n  )\n\n  const sortFn = React.useMemo(() => sortFns[sort as string], [sort])\n\n  const queriesCount = useSubscribeToQueryCache(\n    queryCache,\n    () => queryCache.getAll().length,\n    !isOpen,\n  )\n\n  const [activeQueryHash, setActiveQueryHash] = useLocalStorage(\n    'reactQueryDevtoolsActiveQueryHash',\n    '',\n  )\n\n  const queries = React.useMemo(() => {\n    const unsortedQueries = queryCache.getAll()\n\n    if (queriesCount === 0) {\n      return []\n    }\n\n    const filtered = filter\n      ? unsortedQueries.filter(\n          (item) => rankItem(item.queryHash, filter).passed,\n        )\n      : [...unsortedQueries]\n\n    const sorted = sortFn\n      ? filtered.sort((a, b) => sortFn(a, b) * (baseSort as number))\n      : filtered\n\n    return sorted\n  }, [baseSort, sortFn, filter, queriesCount, queryCache])\n\n  const [isMockOffline, setMockOffline] = React.useState(false)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Panel\n        ref={ref}\n        className=\"ReactQueryDevtoolsPanel\"\n        aria-label=\"React Query Devtools Panel\"\n        id=\"ReactQueryDevtoolsPanel\"\n        {...panelProps}\n        style={{\n          height: defaultPanelSize,\n          position: 'relative',\n          ...panelProps.style,\n        }}\n      >\n        <style\n          nonce={styleNonce}\n          dangerouslySetInnerHTML={{\n            __html: `\n            .ReactQueryDevtoolsPanel * {\n              scrollbar-color: ${theme.backgroundAlt} ${theme.gray};\n            }\n\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar, .ReactQueryDevtoolsPanel scrollbar {\n              width: 1em;\n              height: 1em;\n            }\n\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar-track, .ReactQueryDevtoolsPanel scrollbar-track {\n              background: ${theme.backgroundAlt};\n            }\n\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar-thumb, .ReactQueryDevtoolsPanel scrollbar-thumb {\n              background: ${theme.gray};\n              border-radius: .5em;\n              border: 3px solid ${theme.backgroundAlt};\n            }\n          `,\n          }}\n        />\n        <div\n          style={getResizeHandleStyle(position)}\n          onMouseDown={onDragStart}\n        ></div>\n\n        {isOpen && (\n          <div\n            style={{\n              flex: '1 1 500px',\n              minHeight: '40%',\n              maxHeight: '100%',\n              overflow: 'auto',\n              borderRight: `1px solid ${theme.grayAlt}`,\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <button\n                type=\"button\"\n                aria-label=\"Close React Query Devtools\"\n                aria-controls=\"ReactQueryDevtoolsPanel\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"true\"\n                onClick={() => setIsOpen(false)}\n                style={{\n                  display: 'inline-flex',\n                  background: 'none',\n                  border: 0,\n                  padding: 0,\n                  marginRight: '.5em',\n                  cursor: 'pointer',\n                }}\n              >\n                <Logo aria-hidden />\n                <ScreenReader text=\"Close React Query Devtools\" />\n              </button>\n\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: '.5em',\n                  }}\n                >\n                  <QueryStatusCount queryCache={queryCache} />\n                  {position && onPositionChange ? (\n                    <Select\n                      aria-label=\"Panel position\"\n                      value={position}\n                      style={{ marginInlineStart: '.5em' }}\n                      onChange={(e) => onPositionChange(e.target.value as Side)}\n                    >\n                      <option value=\"left\">Left</option>\n                      <option value=\"right\">Right</option>\n                      <option value=\"top\">Top</option>\n                      <option value=\"bottom\">Bottom</option>\n                    </Select>\n                  ) : null}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexWrap: 'wrap',\n                    gap: '0.5em',\n                  }}\n                >\n                  <Input\n                    placeholder=\"Filter\"\n                    aria-label=\"Filter by queryhash\"\n                    value={filter ?? ''}\n                    onChange={(e) => setFilter(e.target.value)}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Escape') setFilter('')\n                    }}\n                    style={{\n                      flex: '1',\n                      width: '100%',\n                    }}\n                  />\n                  <Select\n                    aria-label=\"Sort queries\"\n                    value={sort}\n                    onChange={(e) => setSort(e.target.value)}\n                    style={{\n                      flex: '1',\n                      minWidth: 75,\n                      marginRight: '.5em',\n                    }}\n                  >\n                    {Object.keys(sortFns).map((key) => (\n                      <option key={key} value={key}>\n                        Sort by {key}\n                      </option>\n                    ))}\n                  </Select>\n                  <Button\n                    type=\"button\"\n                    onClick={() => setBaseSort((old) => old * -1)}\n                    style={{\n                      padding: '.3em .4em',\n                      marginRight: '.5em',\n                    }}\n                  >\n                    {baseSort === 1 ? '⬆ Asc' : '⬇ Desc'}\n                  </Button>\n                  <Button\n                    title=\"Clear cache\"\n                    aria-label=\"Clear cache\"\n                    type=\"button\"\n                    onClick={() => queryCache.clear()}\n                    style={{\n                      padding: '.3em .4em',\n                      marginRight: '.5em',\n                    }}\n                  >\n                    Clear\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    onClick={() => {\n                      if (isMockOffline) {\n                        onlineManager.setOnline(undefined)\n                        setMockOffline(false)\n                        window.dispatchEvent(new Event('online'))\n                      } else {\n                        onlineManager.setOnline(false)\n                        setMockOffline(true)\n                      }\n                    }}\n                    aria-label={\n                      isMockOffline\n                        ? 'Restore offline mock'\n                        : 'Mock offline behavior'\n                    }\n                    title={\n                      isMockOffline\n                        ? 'Restore offline mock'\n                        : 'Mock offline behavior'\n                    }\n                    style={{\n                      padding: '0',\n                      height: '2em',\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"2em\"\n                      height=\"2em\"\n                      viewBox=\"0 0 24 24\"\n                      stroke={isMockOffline ? theme.danger : 'currentColor'}\n                      fill=\"none\"\n                    >\n                      {isMockOffline ? (\n                        <>\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\" />\n                          <path d=\"M9.172 15.172a4 4 0 0 1 5.656 0\" />\n                          <path d=\"M6.343 12.343a7.963 7.963 0 0 1 3.864 -2.14m4.163 .155a7.965 7.965 0 0 1 3.287 2\" />\n                          <path d=\"M3.515 9.515a12 12 0 0 1 3.544 -2.455m3.101 -.92a12 12 0 0 1 10.325 3.374\" />\n                          <line x1=\"3\" y1=\"3\" x2=\"21\" y2=\"21\" />\n                        </>\n                      ) : (\n                        <>\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\" />\n                          <path d=\"M9.172 15.172a4 4 0 0 1 5.656 0\" />\n                          <path d=\"M6.343 12.343a8 8 0 0 1 11.314 0\" />\n                          <path d=\"M3.515 9.515c4.686 -4.687 12.284 -4.687 17 0\" />\n                        </>\n                      )}\n                    </svg>\n                    <ScreenReader\n                      text={\n                        isMockOffline\n                          ? 'Restore offline mock'\n                          : 'Mock offline behavior'\n                      }\n                    />\n                  </Button>\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                overflowY: 'auto',\n                flex: '1',\n              }}\n            >\n              {queries.map((query) => {\n                return (\n                  <QueryRow\n                    queryKey={query.queryKey}\n                    activeQueryHash={activeQueryHash}\n                    setActiveQueryHash={setActiveQueryHash}\n                    key={query.queryHash}\n                    queryCache={queryCache}\n                  />\n                )\n              })}\n            </div>\n          </div>\n        )}\n\n        {activeQueryHash && isOpen ? (\n          <ActiveQuery\n            activeQueryHash={activeQueryHash}\n            queryCache={queryCache}\n            queryClient={queryClient}\n            errorTypes={errorTypes}\n          />\n        ) : null}\n\n        {showCloseButton ? (\n          <Button\n            type=\"button\"\n            aria-controls=\"ReactQueryDevtoolsPanel\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"true\"\n            {...(otherCloseButtonProps as Record<string, unknown>)}\n            style={{\n              position: 'absolute',\n              zIndex: 99999,\n              margin: '.5em',\n              bottom: 0,\n              left: 0,\n              ...otherCloseButtonProps.style,\n            }}\n            onClick={(e) => {\n              setIsOpen(false)\n              onCloseClick?.(e)\n            }}\n          >\n            Close\n          </Button>\n        ) : null}\n      </Panel>\n    </ThemeProvider>\n  )\n})\n\nconst ActiveQuery = ({\n  queryCache,\n  activeQueryHash,\n  queryClient,\n  errorTypes,\n}: {\n  queryCache: QueryCache\n  activeQueryHash: string\n  queryClient: QueryClient\n  errorTypes: DevToolsErrorType[]\n}) => {\n  const activeQuery = useSubscribeToQueryCache(queryCache, () =>\n    queryCache.getAll().find((query) => query.queryHash === activeQueryHash),\n  )\n\n  const activeQueryState = useSubscribeToQueryCache(\n    queryCache,\n    () =>\n      queryCache.getAll().find((query) => query.queryHash === activeQueryHash)\n        ?.state,\n  )\n\n  const isStale =\n    useSubscribeToQueryCache(queryCache, () =>\n      queryCache\n        .getAll()\n        .find((query) => query.queryHash === activeQueryHash)\n        ?.isStale(),\n    ) ?? false\n\n  const observerCount =\n    useSubscribeToQueryCache(queryCache, () =>\n      queryCache\n        .getAll()\n        .find((query) => query.queryHash === activeQueryHash)\n        ?.getObserversCount(),\n    ) ?? 0\n\n  const handleRefetch = () => {\n    const promise = activeQuery?.fetch()\n    promise?.catch(noop)\n  }\n\n  const currentErrorTypeName = useMemo(() => {\n    if (activeQuery && activeQueryState?.error) {\n      const errorType = errorTypes.find(\n        (type) =>\n          type.initializer(activeQuery).toString() ===\n          activeQueryState.error?.toString(),\n      )\n      return errorType?.name\n    }\n    return undefined\n  }, [activeQuery, activeQueryState?.error, errorTypes])\n\n  if (!activeQuery || !activeQueryState) {\n    return null\n  }\n\n  const triggerError = (errorType?: DevToolsErrorType) => {\n    const error =\n      errorType?.initializer(activeQuery) ??\n      new Error('Unknown error from devtools')\n\n    const __previousQueryOptions = activeQuery.options\n\n    activeQuery.setState({\n      status: 'error',\n      error,\n      fetchMeta: {\n        ...activeQuery.state.fetchMeta,\n        __previousQueryOptions,\n      },\n    })\n  }\n\n  const restoreQueryAfterLoadingOrError = () => {\n    activeQuery.fetch(activeQuery.state.fetchMeta.__previousQueryOptions, {\n      // Make sure this fetch will cancel the previous one\n      cancelRefetch: true,\n    })\n  }\n\n  return (\n    <ActiveQueryPanel>\n      <div\n        style={{\n          padding: '.5em',\n          background: theme.backgroundAlt,\n          position: 'sticky',\n          top: 0,\n          zIndex: 1,\n        }}\n      >\n        Query Details\n      </div>\n      <div\n        style={{\n          padding: '.5em',\n        }}\n      >\n        <div\n          style={{\n            marginBottom: '.5em',\n            display: 'flex',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Code\n            style={{\n              lineHeight: '1.8em',\n            }}\n          >\n            <pre\n              style={{\n                margin: 0,\n                padding: 0,\n                overflow: 'auto',\n              }}\n            >\n              {displayValue(activeQuery.queryKey, true)}\n            </pre>\n          </Code>\n          <span\n            style={{\n              padding: '0.3em .6em',\n              borderRadius: '0.4em',\n              fontWeight: 'bold',\n              textShadow: '0 2px 10px black',\n              background: getQueryStatusColor({\n                queryState: activeQueryState,\n                isStale: isStale,\n                observerCount: observerCount,\n                theme,\n              }),\n              flexShrink: 0,\n            }}\n          >\n            {getQueryStatusLabel(activeQuery)}\n          </span>\n        </div>\n        <div\n          style={{\n            marginBottom: '.5em',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          Observers: <Code>{observerCount}</Code>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          Last Updated:{' '}\n          <Code>\n            {new Date(activeQueryState.dataUpdatedAt).toLocaleTimeString()}\n          </Code>\n        </div>\n      </div>\n      <div\n        style={{\n          background: theme.backgroundAlt,\n          padding: '.5em',\n          position: 'sticky',\n          top: 0,\n          zIndex: 1,\n        }}\n      >\n        Actions\n      </div>\n      <div\n        style={{\n          padding: '0.5em',\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '0.5em',\n          alignItems: 'flex-end',\n        }}\n      >\n        <Button\n          type=\"button\"\n          onClick={handleRefetch}\n          disabled={activeQueryState.fetchStatus === 'fetching'}\n          style={{\n            background: theme.active,\n          }}\n        >\n          Refetch\n        </Button>{' '}\n        <Button\n          type=\"button\"\n          onClick={() => queryClient.invalidateQueries(activeQuery)}\n          style={{\n            background: theme.warning,\n            color: theme.inputTextColor,\n          }}\n        >\n          Invalidate\n        </Button>{' '}\n        <Button\n          type=\"button\"\n          onClick={() => queryClient.resetQueries(activeQuery)}\n          style={{\n            background: theme.gray,\n          }}\n        >\n          Reset\n        </Button>{' '}\n        <Button\n          type=\"button\"\n          onClick={() => queryClient.removeQueries(activeQuery)}\n          style={{\n            background: theme.danger,\n          }}\n        >\n          Remove\n        </Button>{' '}\n        <Button\n          type=\"button\"\n          onClick={() => {\n            // Return early if the query is already restoring\n            if (\n              activeQuery.state.fetchStatus === 'fetching' &&\n              typeof activeQuery.state.fetchMeta?.__previousQueryOptions ===\n                'undefined'\n            ) {\n              return\n            }\n\n            if (activeQuery.state.data === undefined) {\n              restoreQueryAfterLoadingOrError()\n            } else {\n              const __previousQueryOptions = activeQuery.options\n              // Trigger a fetch in order to trigger suspense as well.\n              activeQuery.fetch({\n                ...__previousQueryOptions,\n                queryFn: () => {\n                  return new Promise(() => {\n                    // Never resolve\n                  })\n                },\n                cacheTime: -1,\n              })\n              activeQuery.setState({\n                data: undefined,\n                status: 'loading',\n                fetchMeta: {\n                  ...activeQuery.state.fetchMeta,\n                  __previousQueryOptions,\n                },\n              })\n            }\n          }}\n          style={{\n            background: theme.paused,\n          }}\n        >\n          {activeQuery.state.status === 'loading' ? 'Restore' : 'Trigger'}{' '}\n          loading\n        </Button>{' '}\n        {errorTypes.length === 0 || activeQuery.state.status === 'error' ? (\n          <Button\n            type=\"button\"\n            onClick={() => {\n              if (!activeQuery.state.error) {\n                triggerError()\n              } else {\n                queryClient.resetQueries(activeQuery)\n              }\n            }}\n            style={{\n              background: theme.danger,\n            }}\n          >\n            {activeQuery.state.status === 'error' ? 'Restore' : 'Trigger'} error\n          </Button>\n        ) : (\n          <label>\n            Trigger error:\n            <Select\n              value={currentErrorTypeName ?? ''}\n              style={{ marginInlineStart: '.5em' }}\n              onChange={(e) => {\n                const errorType = errorTypes.find(\n                  (t) => t.name === e.target.value,\n                )\n\n                triggerError(errorType)\n              }}\n            >\n              <option key=\"\" value=\"\" />\n              {errorTypes.map((errorType) => (\n                <option key={errorType.name} value={errorType.name}>\n                  {errorType.name}\n                </option>\n              ))}\n            </Select>\n          </label>\n        )}\n      </div>\n      <div\n        style={{\n          background: theme.backgroundAlt,\n          padding: '.5em',\n          position: 'sticky',\n          top: 0,\n          zIndex: 1,\n        }}\n      >\n        Data Explorer\n      </div>\n      <div\n        style={{\n          padding: '.5em',\n        }}\n      >\n        <Explorer\n          label=\"Data\"\n          value={activeQueryState.data}\n          defaultExpanded={{}}\n          copyable\n        />\n      </div>\n      <div\n        style={{\n          background: theme.backgroundAlt,\n          padding: '.5em',\n          position: 'sticky',\n          top: 0,\n          zIndex: 1,\n        }}\n      >\n        Query Explorer\n      </div>\n      <div\n        style={{\n          padding: '.5em',\n        }}\n      >\n        <Explorer\n          label=\"Query\"\n          value={activeQuery}\n          defaultExpanded={{\n            queryKey: true,\n          }}\n        />\n      </div>\n    </ActiveQueryPanel>\n  )\n}\n\nconst QueryStatusCount = ({ queryCache }: { queryCache: QueryCache }) => {\n  const hasFresh = useSubscribeToQueryCache(\n    queryCache,\n    () =>\n      queryCache.getAll().filter((q) => getQueryStatusLabel(q) === 'fresh')\n        .length,\n  )\n  const hasFetching = useSubscribeToQueryCache(\n    queryCache,\n    () =>\n      queryCache.getAll().filter((q) => getQueryStatusLabel(q) === 'fetching')\n        .length,\n  )\n  const hasPaused = useSubscribeToQueryCache(\n    queryCache,\n    () =>\n      queryCache.getAll().filter((q) => getQueryStatusLabel(q) === 'paused')\n        .length,\n  )\n  const hasStale = useSubscribeToQueryCache(\n    queryCache,\n    () =>\n      queryCache.getAll().filter((q) => getQueryStatusLabel(q) === 'stale')\n        .length,\n  )\n  const hasInactive = useSubscribeToQueryCache(\n    queryCache,\n    () =>\n      queryCache.getAll().filter((q) => getQueryStatusLabel(q) === 'inactive')\n        .length,\n  )\n  return (\n    <QueryKeys>\n      <QueryKey\n        style={{\n          background: theme.success,\n          opacity: hasFresh ? 1 : 0.3,\n        }}\n      >\n        fresh <Code>({hasFresh})</Code>\n      </QueryKey>{' '}\n      <QueryKey\n        style={{\n          background: theme.active,\n          opacity: hasFetching ? 1 : 0.3,\n        }}\n      >\n        fetching <Code>({hasFetching})</Code>\n      </QueryKey>{' '}\n      <QueryKey\n        style={{\n          background: theme.paused,\n          opacity: hasPaused ? 1 : 0.3,\n        }}\n      >\n        paused <Code>({hasPaused})</Code>\n      </QueryKey>{' '}\n      <QueryKey\n        style={{\n          background: theme.warning,\n          color: 'black',\n          textShadow: '0',\n          opacity: hasStale ? 1 : 0.3,\n        }}\n      >\n        stale <Code>({hasStale})</Code>\n      </QueryKey>{' '}\n      <QueryKey\n        style={{\n          background: theme.gray,\n          opacity: hasInactive ? 1 : 0.3,\n        }}\n      >\n        inactive <Code>({hasInactive})</Code>\n      </QueryKey>\n    </QueryKeys>\n  )\n}\n\ninterface QueryRowProps {\n  queryKey: QueryKeyType\n  setActiveQueryHash: (hash: string) => void\n  activeQueryHash?: string\n  queryCache: QueryCache\n}\n\nconst QueryRow = React.memo(\n  ({\n    queryKey,\n    setActiveQueryHash,\n    activeQueryHash,\n    queryCache,\n  }: QueryRowProps) => {\n    const queryHash =\n      useSubscribeToQueryCache(\n        queryCache,\n        () => queryCache.find(queryKey)?.queryHash,\n      ) ?? ''\n\n    const queryState = useSubscribeToQueryCache(\n      queryCache,\n      () => queryCache.find(queryKey)?.state,\n    )\n\n    const isStale =\n      useSubscribeToQueryCache(queryCache, () =>\n        queryCache.find(queryKey)?.isStale(),\n      ) ?? false\n\n    const isDisabled =\n      useSubscribeToQueryCache(queryCache, () =>\n        queryCache.find(queryKey)?.isDisabled(),\n      ) ?? false\n\n    const observerCount =\n      useSubscribeToQueryCache(queryCache, () =>\n        queryCache.find(queryKey)?.getObserversCount(),\n      ) ?? 0\n\n    if (!queryState) {\n      return null\n    }\n\n    return (\n      <div\n        role=\"button\"\n        aria-label={`Open query details for ${queryHash}`}\n        onClick={() =>\n          setActiveQueryHash(activeQueryHash === queryHash ? '' : queryHash)\n        }\n        style={{\n          display: 'flex',\n          borderBottom: `solid 1px ${theme.grayAlt}`,\n          cursor: 'pointer',\n          background:\n            queryHash === activeQueryHash ? 'rgba(255,255,255,.1)' : undefined,\n        }}\n      >\n        <div\n          style={{\n            flex: '0 0 auto',\n            width: '2em',\n            height: '2em',\n            background: getQueryStatusColor({\n              queryState,\n              isStale,\n              observerCount,\n              theme,\n            }),\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontWeight: 'bold',\n            textShadow: isStale ? '0' : '0 0 10px black',\n            color: isStale ? 'black' : 'white',\n          }}\n        >\n          {observerCount}\n        </div>\n        {isDisabled ? (\n          <div\n            style={{\n              flex: '0 0 auto',\n              height: '2em',\n              background: theme.gray,\n              display: 'flex',\n              alignItems: 'center',\n              fontWeight: 'bold',\n              padding: '0 0.5em',\n            }}\n          >\n            disabled\n          </div>\n        ) : null}\n        <Code\n          style={{\n            padding: '.5em',\n          }}\n        >\n          {`${queryHash}`}\n        </Code>\n      </div>\n    )\n  },\n)\n\nQueryRow.displayName = 'QueryRow'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}