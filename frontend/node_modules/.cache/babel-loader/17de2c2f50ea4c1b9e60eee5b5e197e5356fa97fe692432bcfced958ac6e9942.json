{"ast":null,"code":"import _slicedToArray from \"C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nvar defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport var defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport var DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  var _React$useContext = React.useContext(DesignTokenContext),\n    rootDesignToken = _React$useContext.token,\n    hashed = _React$useContext.hashed,\n    theme = _React$useContext.theme,\n    components = _React$useContext.components;\n  var salt = \"\".concat(version, \"-\").concat(hashed || '');\n  var mergedTheme = theme || defaultTheme;\n  var _useCacheToken = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n      salt: salt,\n      override: Object.assign({\n        override: rootDesignToken\n      }, components),\n      formatToken: formatToken\n    }),\n    _useCacheToken2 = _slicedToArray(_useCacheToken, 2),\n    token = _useCacheToken2[0],\n    hashId = _useCacheToken2[1];\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"names":["createTheme","useCacheToken","useStyleRegister","React","version","PresetColors","defaultDerivative","defaultSeedToken","formatToken","genComponentStyleHook","statisticToken","merge","mergeToken","statistic","genPresetColor","defaultTheme","defaultConfig","token","hashed","DesignTokenContext","createContext","useToken","_React$useContext","useContext","rootDesignToken","theme","components","salt","concat","mergedTheme","_useCacheToken","override","Object","assign","_useCacheToken2","_slicedToArray","hashId"],"sources":["C:/Users/parkj/Desktop/nginx-file-browser-master/frontend/node_modules/antd/es/theme/internal.js"],"sourcesContent":["import { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nconst defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport const defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport const DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAClF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,iBAAiB,MAAM,kBAAkB;AAChD,OAAOC,gBAAgB,MAAM,eAAe;AAC5C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,qBAAqB,MAAM,8BAA8B;AAChE,OAAOC,cAAc,IAAIC,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACjF,OAAOC,cAAc,MAAM,uBAAuB;AAClD,IAAMC,YAAY,GAAGf,WAAW,CAACM,iBAAiB,CAAC;AACnD;AACA;AACAD,YAAY;AACZ;AACAQ,SAAS,EAAEH,cAAc,EAAEE,UAAU;AACrC;AACAV,gBAAgB,EAAEO,qBAAqB,EAAEK,cAAc;AACvD;AACA;AACA,OAAO,IAAME,aAAa,GAAG;EAC3BC,KAAK,EAAEV,gBAAgB;EACvBW,MAAM,EAAE;AACV,CAAC;AACD,OAAO,IAAMC,kBAAkB,GAAG,aAAahB,KAAK,CAACiB,aAAa,CAACJ,aAAa,CAAC;AACjF;AACA,OAAO,SAASK,QAAQA,CAAA,EAAG;EACzB,IAAAC,iBAAA,GAKInB,KAAK,CAACoB,UAAU,CAACJ,kBAAkB,CAAC;IAJ/BK,eAAe,GAAAF,iBAAA,CAAtBL,KAAK;IACLC,MAAM,GAAAI,iBAAA,CAANJ,MAAM;IACNO,KAAK,GAAAH,iBAAA,CAALG,KAAK;IACLC,UAAU,GAAAJ,iBAAA,CAAVI,UAAU;EAEZ,IAAMC,IAAI,MAAAC,MAAA,CAAMxB,OAAO,OAAAwB,MAAA,CAAIV,MAAM,IAAI,EAAE,CAAE;EACzC,IAAMW,WAAW,GAAGJ,KAAK,IAAIV,YAAY;EACzC,IAAAe,cAAA,GAAwB7B,aAAa,CAAC4B,WAAW,EAAE,CAACtB,gBAAgB,EAAEiB,eAAe,CAAC,EAAE;MACtFG,IAAI,EAAJA,IAAI;MACJI,QAAQ,EAAEC,MAAM,CAACC,MAAM,CAAC;QACtBF,QAAQ,EAAEP;MACZ,CAAC,EAAEE,UAAU,CAAC;MACdlB,WAAW,EAAXA;IACF,CAAC,CAAC;IAAA0B,eAAA,GAAAC,cAAA,CAAAL,cAAA;IANKb,KAAK,GAAAiB,eAAA;IAAEE,MAAM,GAAAF,eAAA;EAOpB,OAAO,CAACL,WAAW,EAAEZ,KAAK,EAAEC,MAAM,GAAGkB,MAAM,GAAG,EAAE,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}