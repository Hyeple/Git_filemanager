{"ast":null,"code":"import _slicedToArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport { Popup } from 'rc-tooltip';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { parseColor } from './util';\n// ant-tooltip css-dev-only-do-not-override-w2s56n ant-tooltip-placement-top  ant-tooltip-hidden\nexport default function PurePanel(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'top' : _props$placement,\n    title = props.title,\n    color = props.color,\n    overlayInnerStyle = props.overlayInnerStyle;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls, true),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  // Color\n  var colorInfo = parseColor(prefixCls, color);\n  var formattedOverlayInnerStyle = Object.assign(Object.assign({}, overlayInnerStyle), colorInfo.overlayStyle);\n  var arrowContentStyle = colorInfo.arrowStyle;\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(hashId, prefixCls, \"\".concat(prefixCls, \"-pure\"), \"\".concat(prefixCls, \"-placement-\").concat(placement), className, colorInfo.className),\n    style: arrowContentStyle\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-arrow\")\n  }), /*#__PURE__*/React.createElement(Popup, Object.assign({}, props, {\n    className: hashId,\n    prefixCls: prefixCls,\n    overlayInnerStyle: formattedOverlayInnerStyle\n  }), title)));\n}","map":{"version":3,"names":["classNames","Popup","React","ConfigContext","useStyle","parseColor","PurePanel","props","customizePrefixCls","prefixCls","className","_props$placement","placement","title","color","overlayInnerStyle","_React$useContext","useContext","getPrefixCls","_useStyle","_useStyle2","_slicedToArray","wrapSSR","hashId","colorInfo","formattedOverlayInnerStyle","Object","assign","overlayStyle","arrowContentStyle","arrowStyle","createElement","concat","style"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/antd/es/tooltip/PurePanel.js"],"sourcesContent":["import classNames from 'classnames';\r\nimport { Popup } from 'rc-tooltip';\r\nimport * as React from 'react';\r\nimport { ConfigContext } from '../config-provider';\r\nimport useStyle from './style';\r\nimport { parseColor } from './util';\r\n// ant-tooltip css-dev-only-do-not-override-w2s56n ant-tooltip-placement-top  ant-tooltip-hidden\r\nexport default function PurePanel(props) {\r\n  const {\r\n    prefixCls: customizePrefixCls,\r\n    className,\r\n    placement = 'top',\r\n    title,\r\n    color,\r\n    overlayInnerStyle\r\n  } = props;\r\n  const {\r\n    getPrefixCls\r\n  } = React.useContext(ConfigContext);\r\n  const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\r\n  const [wrapSSR, hashId] = useStyle(prefixCls, true);\r\n  // Color\r\n  const colorInfo = parseColor(prefixCls, color);\r\n  const formattedOverlayInnerStyle = Object.assign(Object.assign({}, overlayInnerStyle), colorInfo.overlayStyle);\r\n  const arrowContentStyle = colorInfo.arrowStyle;\r\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\r\n    className: classNames(hashId, prefixCls, `${prefixCls}-pure`, `${prefixCls}-placement-${placement}`, className, colorInfo.className),\r\n    style: arrowContentStyle\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    className: `${prefixCls}-arrow`\r\n  }), /*#__PURE__*/React.createElement(Popup, Object.assign({}, props, {\r\n    className: hashId,\r\n    prefixCls: prefixCls,\r\n    overlayInnerStyle: formattedOverlayInnerStyle\r\n  }), title)));\r\n}"],"mappings":";AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,KAAK,QAAQ,YAAY;AAClC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,QAAQ,MAAM,SAAS;AAC9B,SAASC,UAAU,QAAQ,QAAQ;AACnC;AACA,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EACvC,IACaC,kBAAkB,GAM3BD,KAAK,CANPE,SAAS;IACTC,SAAS,GAKPH,KAAK,CALPG,SAAS;IAAAC,gBAAA,GAKPJ,KAAK,CAJPK,SAAS;IAATA,SAAS,GAAAD,gBAAA,cAAG,KAAK,GAAAA,gBAAA;IACjBE,KAAK,GAGHN,KAAK,CAHPM,KAAK;IACLC,KAAK,GAEHP,KAAK,CAFPO,KAAK;IACLC,iBAAiB,GACfR,KAAK,CADPQ,iBAAiB;EAEnB,IAAAC,iBAAA,GAEId,KAAK,CAACe,UAAU,CAACd,aAAa,CAAC;IADjCe,YAAY,GAAAF,iBAAA,CAAZE,YAAY;EAEd,IAAMT,SAAS,GAAGS,YAAY,CAAC,SAAS,EAAEV,kBAAkB,CAAC;EAC7D,IAAAW,SAAA,GAA0Bf,QAAQ,CAACK,SAAS,EAAE,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,OAAO,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EACtB;EACA,IAAMI,SAAS,GAAGnB,UAAU,CAACI,SAAS,EAAEK,KAAK,CAAC;EAC9C,IAAMW,0BAA0B,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEZ,iBAAiB,CAAC,EAAES,SAAS,CAACI,YAAY,CAAC;EAC9G,IAAMC,iBAAiB,GAAGL,SAAS,CAACM,UAAU;EAC9C,OAAOR,OAAO,EAAE,aAAapB,KAAK,CAAC6B,aAAa,CAAC,KAAK,EAAE;IACtDrB,SAAS,EAAEV,UAAU,CAACuB,MAAM,EAAEd,SAAS,KAAAuB,MAAA,CAAKvB,SAAS,eAAAuB,MAAA,CAAYvB,SAAS,iBAAAuB,MAAA,CAAcpB,SAAS,GAAIF,SAAS,EAAEc,SAAS,CAACd,SAAS,CAAC;IACpIuB,KAAK,EAAEJ;EACT,CAAC,EAAE,aAAa3B,KAAK,CAAC6B,aAAa,CAAC,KAAK,EAAE;IACzCrB,SAAS,KAAAsB,MAAA,CAAKvB,SAAS;EACzB,CAAC,CAAC,EAAE,aAAaP,KAAK,CAAC6B,aAAa,CAAC9B,KAAK,EAAEyB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEpB,KAAK,EAAE;IACnEG,SAAS,EAAEa,MAAM;IACjBd,SAAS,EAAEA,SAAS;IACpBM,iBAAiB,EAAEU;EACrB,CAAC,CAAC,EAAEZ,KAAK,CAAC,CAAC,CAAC;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}