{"ast":null,"code":"import _slicedToArray from \"C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\nimport useState from \"rc-util/es/hooks/useState\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\nimport warning from '../../_util/warning';\nimport { ConfigContext } from '../../config-provider';\nimport { FormContext, NoStyleItemContext } from '../context';\nimport useFormItemStatus from '../hooks/useFormItemStatus';\nimport useFrameState from '../hooks/useFrameState';\nimport useItemRef from '../hooks/useItemRef';\nimport { getFieldId, toArray } from '../util';\nimport ItemHolder from './ItemHolder';\nimport useChildren from '../hooks/useChildren';\nimport useStyle from '../style';\nvar NAME_SPLIT = '__SPLIT__';\nvar ValidateStatuses = ['success', 'warning', 'error', 'validating', ''];\nvar MemoInput = /*#__PURE__*/React.memo(function (_ref) {\n  var children = _ref.children;\n  return children;\n}, function (prev, next) {\n  return prev.value === next.value && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every(function (value, index) {\n    return value === next.childProps[index];\n  });\n});\nfunction hasValidName(name) {\n  if (name === null) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', '`null` is passed as `name` property') : void 0;\n  }\n  return !(name === undefined || name === null);\n}\nfunction genEmptyMeta() {\n  return {\n    errors: [],\n    warnings: [],\n    touched: false,\n    validating: false,\n    name: [],\n    validated: false\n  };\n}\nfunction InternalFormItem(props) {\n  var name = props.name,\n    noStyle = props.noStyle,\n    className = props.className,\n    dependencies = props.dependencies,\n    customizePrefixCls = props.prefixCls,\n    shouldUpdate = props.shouldUpdate,\n    rules = props.rules,\n    children = props.children,\n    required = props.required,\n    label = props.label,\n    messageVariables = props.messageVariables,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'onChange' : _props$trigger,\n    validateTrigger = props.validateTrigger,\n    hidden = props.hidden,\n    help = props.help;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var _React$useContext2 = React.useContext(FormContext),\n    formName = _React$useContext2.name;\n  var mergedChildren = useChildren(children);\n  var isRenderProps = typeof mergedChildren === 'function';\n  var notifyParentMetaChange = React.useContext(NoStyleItemContext);\n  var _React$useContext3 = React.useContext(FieldContext),\n    contextValidateTrigger = _React$useContext3.validateTrigger;\n  var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\n  var hasName = hasValidName(name);\n  var prefixCls = getPrefixCls('form', customizePrefixCls);\n  // Style\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  // ========================= MISC =========================\n  // Get `noStyle` required info\n  var listContext = React.useContext(ListContext);\n  var fieldKeyPathRef = React.useRef();\n  // ======================== Errors ========================\n  // >>>>> Collect sub field errors\n  var _useFrameState = useFrameState({}),\n    _useFrameState2 = _slicedToArray(_useFrameState, 2),\n    subFieldErrors = _useFrameState2[0],\n    setSubFieldErrors = _useFrameState2[1];\n  // >>>>> Current field errors\n  var _useState = useState(function () {\n      return genEmptyMeta();\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    meta = _useState2[0],\n    setMeta = _useState2[1];\n  var onMetaChange = function onMetaChange(nextMeta) {\n    // This keyInfo is not correct when field is removed\n    // Since origin keyManager no longer keep the origin key anymore\n    // Which means we need cache origin one and reuse when removed\n    var keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name);\n    // Destroy will reset all the meta\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true);\n    // Bump to parent since noStyle\n    if (noStyle && help !== false && notifyParentMetaChange) {\n      var namePath = nextMeta.name;\n      if (!nextMeta.destroy) {\n        if (keyInfo !== undefined) {\n          var _keyInfo = _slicedToArray(keyInfo, 2),\n            fieldKey = _keyInfo[0],\n            restPath = _keyInfo[1];\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\n          fieldKeyPathRef.current = namePath;\n        }\n      } else {\n        // Use origin cache data\n        namePath = fieldKeyPathRef.current || namePath;\n      }\n      notifyParentMetaChange(nextMeta, namePath);\n    }\n  };\n  // >>>>> Collect noStyle Field error to the top FormItem\n  var onSubItemMetaChange = function onSubItemMetaChange(subMeta, uniqueKeys) {\n    // Only `noStyle` sub item will trigger\n    setSubFieldErrors(function (prevSubFieldErrors) {\n      var clone = Object.assign({}, prevSubFieldErrors);\n      // name: ['user', 1] + key: [4] = ['user', 4]\n      var mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\n      var mergedNameKey = mergedNamePath.join(NAME_SPLIT);\n      if (subMeta.destroy) {\n        // Remove\n        delete clone[mergedNameKey];\n      } else {\n        // Update\n        clone[mergedNameKey] = subMeta;\n      }\n      return clone;\n    });\n  };\n  // >>>>> Get merged errors\n  var _React$useMemo = React.useMemo(function () {\n      var errorList = _toConsumableArray(meta.errors);\n      var warningList = _toConsumableArray(meta.warnings);\n      Object.values(subFieldErrors).forEach(function (subFieldError) {\n        errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\n        warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\n      });\n      return [errorList, warningList];\n    }, [subFieldErrors, meta.errors, meta.warnings]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    mergedErrors = _React$useMemo2[0],\n    mergedWarnings = _React$useMemo2[1];\n  // ===================== Children Ref =====================\n  var getItemRef = useItemRef();\n  // ======================== Render ========================\n  function renderLayout(baseChildren, fieldId, isRequired) {\n    if (noStyle && !hidden) {\n      return baseChildren;\n    }\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\n      key: \"row\"\n    }, props, {\n      className: classNames(className, hashId),\n      prefixCls: prefixCls,\n      fieldId: fieldId,\n      isRequired: isRequired,\n      errors: mergedErrors,\n      warnings: mergedWarnings,\n      meta: meta,\n      onSubItemMetaChange: onSubItemMetaChange\n    }), baseChildren);\n  }\n  if (!hasName && !isRenderProps && !dependencies) {\n    return wrapSSR(renderLayout(mergedChildren));\n  }\n  var variables = {};\n  if (typeof label === 'string') {\n    variables.label = label;\n  } else if (name) {\n    variables.label = String(name);\n  }\n  if (messageVariables) {\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\n  }\n  // >>>>> With Field\n  return wrapSSR( /*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\n    messageVariables: variables,\n    trigger: trigger,\n    validateTrigger: mergedValidateTrigger,\n    onMetaChange: onMetaChange\n  }), function (control, renderMeta, context) {\n    var mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\n    var fieldId = getFieldId(mergedName, formName);\n    var isRequired = required !== undefined ? required : !!(rules && rules.some(function (rule) {\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\n        return true;\n      }\n      if (typeof rule === 'function') {\n        var ruleEntity = rule(context);\n        return ruleEntity && ruleEntity.required && !ruleEntity.warningOnly;\n      }\n      return false;\n    }));\n    // ======================= Children =======================\n    var mergedControl = Object.assign({}, control);\n    var childNode = null;\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'Form.Item', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\n    if (Array.isArray(mergedChildren) && hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\n      childNode = mergedChildren;\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'Form.Item', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'Form.Item', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\n    } else if (dependencies && !isRenderProps && !hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\n    } else if (isValidElement(mergedChildren)) {\n      process.env.NODE_ENV !== \"production\" ? warning(mergedChildren.props.defaultValue === undefined, 'Form.Item', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\n      var childProps = Object.assign(Object.assign({}, mergedChildren.props), mergedControl);\n      if (!childProps.id) {\n        childProps.id = fieldId;\n      }\n      if (help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\n        var describedbyArr = [];\n        if (help || mergedErrors.length > 0) {\n          describedbyArr.push(\"\".concat(fieldId, \"_help\"));\n        }\n        if (props.extra) {\n          describedbyArr.push(\"\".concat(fieldId, \"_extra\"));\n        }\n        childProps['aria-describedby'] = describedbyArr.join(' ');\n      }\n      if (mergedErrors.length > 0) {\n        childProps['aria-invalid'] = 'true';\n      }\n      if (isRequired) {\n        childProps['aria-required'] = 'true';\n      }\n      if (supportRef(mergedChildren)) {\n        childProps.ref = getItemRef(mergedName, mergedChildren);\n      }\n      // We should keep user origin event handler\n      var triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\n      triggers.forEach(function (eventName) {\n        childProps[eventName] = function () {\n          var _a2, _c2;\n          var _a, _b, _c;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\n          (_c = (_b = mergedChildren.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\n        };\n      });\n      // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\n      var watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\n        value: mergedControl[props.valuePropName || 'value'],\n        update: mergedChildren,\n        childProps: watchingChildProps\n      }, cloneElement(mergedChildren, childProps));\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\n      childNode = mergedChildren(context);\n    } else {\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length, 'Form.Item', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\n      childNode = mergedChildren;\n    }\n    return renderLayout(childNode, fieldId, isRequired);\n  }));\n}\nvar FormItem = InternalFormItem;\nFormItem.useStatus = useFormItemStatus;\nexport default FormItem;","map":{"version":3,"names":["_toConsumableArray","classNames","Field","FieldContext","ListContext","useState","supportRef","React","cloneElement","isValidElement","warning","ConfigContext","FormContext","NoStyleItemContext","useFormItemStatus","useFrameState","useItemRef","getFieldId","toArray","ItemHolder","useChildren","useStyle","NAME_SPLIT","ValidateStatuses","MemoInput","memo","_ref","children","prev","next","value","update","childProps","length","every","index","hasValidName","name","process","env","NODE_ENV","undefined","genEmptyMeta","errors","warnings","touched","validating","validated","InternalFormItem","props","noStyle","className","dependencies","customizePrefixCls","prefixCls","shouldUpdate","rules","required","label","messageVariables","_props$trigger","trigger","validateTrigger","hidden","help","_React$useContext","useContext","getPrefixCls","_React$useContext2","formName","mergedChildren","isRenderProps","notifyParentMetaChange","_React$useContext3","contextValidateTrigger","mergedValidateTrigger","hasName","_useStyle","_useStyle2","_slicedToArray","wrapSSR","hashId","listContext","fieldKeyPathRef","useRef","_useFrameState","_useFrameState2","subFieldErrors","setSubFieldErrors","_useState","_useState2","meta","setMeta","onMetaChange","nextMeta","keyInfo","getKey","destroy","namePath","_keyInfo","fieldKey","restPath","concat","current","onSubItemMetaChange","subMeta","uniqueKeys","prevSubFieldErrors","clone","Object","assign","mergedNamePath","slice","mergedNameKey","join","_React$useMemo","useMemo","errorList","warningList","values","forEach","subFieldError","push","apply","_React$useMemo2","mergedErrors","mergedWarnings","getItemRef","renderLayout","baseChildren","fieldId","isRequired","createElement","key","variables","String","control","renderMeta","context","mergedName","some","rule","warningOnly","ruleEntity","mergedControl","childNode","Array","isArray","defaultValue","id","extra","describedbyArr","ref","triggers","Set","eventName","_a2","_c2","_a","_b","_c","_len","arguments","args","_key","call","watchingChildProps","valuePropName","FormItem","useStatus"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/antd/es/form/FormItem/index.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport classNames from 'classnames';\r\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\r\nimport useState from \"rc-util/es/hooks/useState\";\r\nimport { supportRef } from \"rc-util/es/ref\";\r\nimport * as React from 'react';\r\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\r\nimport warning from '../../_util/warning';\r\nimport { ConfigContext } from '../../config-provider';\r\nimport { FormContext, NoStyleItemContext } from '../context';\r\nimport useFormItemStatus from '../hooks/useFormItemStatus';\r\nimport useFrameState from '../hooks/useFrameState';\r\nimport useItemRef from '../hooks/useItemRef';\r\nimport { getFieldId, toArray } from '../util';\r\nimport ItemHolder from './ItemHolder';\r\nimport useChildren from '../hooks/useChildren';\r\nimport useStyle from '../style';\r\nconst NAME_SPLIT = '__SPLIT__';\r\nconst ValidateStatuses = ['success', 'warning', 'error', 'validating', ''];\r\nconst MemoInput = /*#__PURE__*/React.memo(_ref => {\r\n  let {\r\n    children\r\n  } = _ref;\r\n  return children;\r\n}, (prev, next) => prev.value === next.value && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every((value, index) => value === next.childProps[index]));\r\nfunction hasValidName(name) {\r\n  if (name === null) {\r\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', '`null` is passed as `name` property') : void 0;\r\n  }\r\n  return !(name === undefined || name === null);\r\n}\r\nfunction genEmptyMeta() {\r\n  return {\r\n    errors: [],\r\n    warnings: [],\r\n    touched: false,\r\n    validating: false,\r\n    name: [],\r\n    validated: false\r\n  };\r\n}\r\nfunction InternalFormItem(props) {\r\n  const {\r\n    name,\r\n    noStyle,\r\n    className,\r\n    dependencies,\r\n    prefixCls: customizePrefixCls,\r\n    shouldUpdate,\r\n    rules,\r\n    children,\r\n    required,\r\n    label,\r\n    messageVariables,\r\n    trigger = 'onChange',\r\n    validateTrigger,\r\n    hidden,\r\n    help\r\n  } = props;\r\n  const {\r\n    getPrefixCls\r\n  } = React.useContext(ConfigContext);\r\n  const {\r\n    name: formName\r\n  } = React.useContext(FormContext);\r\n  const mergedChildren = useChildren(children);\r\n  const isRenderProps = typeof mergedChildren === 'function';\r\n  const notifyParentMetaChange = React.useContext(NoStyleItemContext);\r\n  const {\r\n    validateTrigger: contextValidateTrigger\r\n  } = React.useContext(FieldContext);\r\n  const mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\r\n  const hasName = hasValidName(name);\r\n  const prefixCls = getPrefixCls('form', customizePrefixCls);\r\n  // Style\r\n  const [wrapSSR, hashId] = useStyle(prefixCls);\r\n  // ========================= MISC =========================\r\n  // Get `noStyle` required info\r\n  const listContext = React.useContext(ListContext);\r\n  const fieldKeyPathRef = React.useRef();\r\n  // ======================== Errors ========================\r\n  // >>>>> Collect sub field errors\r\n  const [subFieldErrors, setSubFieldErrors] = useFrameState({});\r\n  // >>>>> Current field errors\r\n  const [meta, setMeta] = useState(() => genEmptyMeta());\r\n  const onMetaChange = nextMeta => {\r\n    // This keyInfo is not correct when field is removed\r\n    // Since origin keyManager no longer keep the origin key anymore\r\n    // Which means we need cache origin one and reuse when removed\r\n    const keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name);\r\n    // Destroy will reset all the meta\r\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true);\r\n    // Bump to parent since noStyle\r\n    if (noStyle && help !== false && notifyParentMetaChange) {\r\n      let namePath = nextMeta.name;\r\n      if (!nextMeta.destroy) {\r\n        if (keyInfo !== undefined) {\r\n          const [fieldKey, restPath] = keyInfo;\r\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\r\n          fieldKeyPathRef.current = namePath;\r\n        }\r\n      } else {\r\n        // Use origin cache data\r\n        namePath = fieldKeyPathRef.current || namePath;\r\n      }\r\n      notifyParentMetaChange(nextMeta, namePath);\r\n    }\r\n  };\r\n  // >>>>> Collect noStyle Field error to the top FormItem\r\n  const onSubItemMetaChange = (subMeta, uniqueKeys) => {\r\n    // Only `noStyle` sub item will trigger\r\n    setSubFieldErrors(prevSubFieldErrors => {\r\n      const clone = Object.assign({}, prevSubFieldErrors);\r\n      // name: ['user', 1] + key: [4] = ['user', 4]\r\n      const mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\r\n      const mergedNameKey = mergedNamePath.join(NAME_SPLIT);\r\n      if (subMeta.destroy) {\r\n        // Remove\r\n        delete clone[mergedNameKey];\r\n      } else {\r\n        // Update\r\n        clone[mergedNameKey] = subMeta;\r\n      }\r\n      return clone;\r\n    });\r\n  };\r\n  // >>>>> Get merged errors\r\n  const [mergedErrors, mergedWarnings] = React.useMemo(() => {\r\n    const errorList = _toConsumableArray(meta.errors);\r\n    const warningList = _toConsumableArray(meta.warnings);\r\n    Object.values(subFieldErrors).forEach(subFieldError => {\r\n      errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\r\n      warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\r\n    });\r\n    return [errorList, warningList];\r\n  }, [subFieldErrors, meta.errors, meta.warnings]);\r\n  // ===================== Children Ref =====================\r\n  const getItemRef = useItemRef();\r\n  // ======================== Render ========================\r\n  function renderLayout(baseChildren, fieldId, isRequired) {\r\n    if (noStyle && !hidden) {\r\n      return baseChildren;\r\n    }\r\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\r\n      key: \"row\"\r\n    }, props, {\r\n      className: classNames(className, hashId),\r\n      prefixCls: prefixCls,\r\n      fieldId: fieldId,\r\n      isRequired: isRequired,\r\n      errors: mergedErrors,\r\n      warnings: mergedWarnings,\r\n      meta: meta,\r\n      onSubItemMetaChange: onSubItemMetaChange\r\n    }), baseChildren);\r\n  }\r\n  if (!hasName && !isRenderProps && !dependencies) {\r\n    return wrapSSR(renderLayout(mergedChildren));\r\n  }\r\n  let variables = {};\r\n  if (typeof label === 'string') {\r\n    variables.label = label;\r\n  } else if (name) {\r\n    variables.label = String(name);\r\n  }\r\n  if (messageVariables) {\r\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\r\n  }\r\n  // >>>>> With Field\r\n  return wrapSSR( /*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\r\n    messageVariables: variables,\r\n    trigger: trigger,\r\n    validateTrigger: mergedValidateTrigger,\r\n    onMetaChange: onMetaChange\r\n  }), (control, renderMeta, context) => {\r\n    const mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\r\n    const fieldId = getFieldId(mergedName, formName);\r\n    const isRequired = required !== undefined ? required : !!(rules && rules.some(rule => {\r\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\r\n        return true;\r\n      }\r\n      if (typeof rule === 'function') {\r\n        const ruleEntity = rule(context);\r\n        return ruleEntity && ruleEntity.required && !ruleEntity.warningOnly;\r\n      }\r\n      return false;\r\n    }));\r\n    // ======================= Children =======================\r\n    const mergedControl = Object.assign({}, control);\r\n    let childNode = null;\r\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'Form.Item', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\r\n    if (Array.isArray(mergedChildren) && hasName) {\r\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\r\n      childNode = mergedChildren;\r\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\r\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'Form.Item', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\r\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'Form.Item', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\r\n    } else if (dependencies && !isRenderProps && !hasName) {\r\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Form.Item', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\r\n    } else if (isValidElement(mergedChildren)) {\r\n      process.env.NODE_ENV !== \"production\" ? warning(mergedChildren.props.defaultValue === undefined, 'Form.Item', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\r\n      const childProps = Object.assign(Object.assign({}, mergedChildren.props), mergedControl);\r\n      if (!childProps.id) {\r\n        childProps.id = fieldId;\r\n      }\r\n      if (help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\r\n        const describedbyArr = [];\r\n        if (help || mergedErrors.length > 0) {\r\n          describedbyArr.push(`${fieldId}_help`);\r\n        }\r\n        if (props.extra) {\r\n          describedbyArr.push(`${fieldId}_extra`);\r\n        }\r\n        childProps['aria-describedby'] = describedbyArr.join(' ');\r\n      }\r\n      if (mergedErrors.length > 0) {\r\n        childProps['aria-invalid'] = 'true';\r\n      }\r\n      if (isRequired) {\r\n        childProps['aria-required'] = 'true';\r\n      }\r\n      if (supportRef(mergedChildren)) {\r\n        childProps.ref = getItemRef(mergedName, mergedChildren);\r\n      }\r\n      // We should keep user origin event handler\r\n      const triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\r\n      triggers.forEach(eventName => {\r\n        childProps[eventName] = function () {\r\n          var _a2, _c2;\r\n          var _a, _b, _c;\r\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            args[_key] = arguments[_key];\r\n          }\r\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\r\n          (_c = (_b = mergedChildren.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\r\n        };\r\n      });\r\n      // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\r\n      const watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\r\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\r\n        value: mergedControl[props.valuePropName || 'value'],\r\n        update: mergedChildren,\r\n        childProps: watchingChildProps\r\n      }, cloneElement(mergedChildren, childProps));\r\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\r\n      childNode = mergedChildren(context);\r\n    } else {\r\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length, 'Form.Item', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\r\n      childNode = mergedChildren;\r\n    }\r\n    return renderLayout(childNode, fieldId, isRequired);\r\n  }));\r\n}\r\nconst FormItem = InternalFormItem;\r\nFormItem.useStatus = useFormItemStatus;\r\nexport default FormItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}