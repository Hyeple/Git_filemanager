{"ast":null,"code":"import React from 'react';\nimport { cloneElement, isFragment } from '../_util/reactNode';\nvar rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nexport var isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nexport function isString(str) {\n  return typeof str === 'string';\n}\nexport function isUnBorderedButtonType(type) {\n  return type === 'text' || type === 'link';\n}\nfunction splitCNCharsBySpace(child, needInserted) {\n  if (child === null || child === undefined) {\n    return;\n  }\n  var SPACE = needInserted ? ' ' : '';\n  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return cloneElement(child, {\n      children: child.props.children.split('').join(SPACE)\n    });\n  }\n  if (typeof child === 'string') {\n    return isTwoCNChar(child) ? /*#__PURE__*/React.createElement(\"span\", null, child.split('').join(SPACE)) : /*#__PURE__*/React.createElement(\"span\", null, child);\n  }\n  if (isFragment(child)) {\n    return /*#__PURE__*/React.createElement(\"span\", null, child);\n  }\n  return child;\n}\nexport function spaceChildren(children, needInserted) {\n  var isPrevChildPure = false;\n  var childList = [];\n  React.Children.forEach(children, function (child) {\n    var type = typeof child;\n    var isCurrentChildPure = type === 'string' || type === 'number';\n    if (isPrevChildPure && isCurrentChildPure) {\n      var lastIndex = childList.length - 1;\n      var lastChild = childList[lastIndex];\n      childList[lastIndex] = \"\".concat(lastChild).concat(child);\n    } else {\n      childList.push(child);\n    }\n    isPrevChildPure = isCurrentChildPure;\n  });\n  return React.Children.map(childList, function (child) {\n    return splitCNCharsBySpace(child, needInserted);\n  });\n}\nvar ButtonTypes = ['default', 'primary', 'ghost', 'dashed', 'link', 'text'];\nvar ButtonShapes = ['default', 'circle', 'round'];\nvar ButtonHTMLTypes = ['submit', 'button', 'reset'];","map":{"version":3,"names":["React","cloneElement","isFragment","rxTwoCNChar","isTwoCNChar","test","bind","isString","str","isUnBorderedButtonType","type","splitCNCharsBySpace","child","needInserted","undefined","SPACE","props","children","split","join","createElement","spaceChildren","isPrevChildPure","childList","Children","forEach","isCurrentChildPure","lastIndex","length","lastChild","concat","push","map","ButtonTypes","ButtonShapes","ButtonHTMLTypes"],"sources":["C:/Users/parkj/Desktop/OSS/Git_filemanager/frontend/node_modules/antd/es/button/buttonHelpers.js"],"sourcesContent":["import React from 'react';\r\nimport { cloneElement, isFragment } from '../_util/reactNode';\r\nconst rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\r\nexport const isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\r\nexport function isString(str) {\r\n  return typeof str === 'string';\r\n}\r\nexport function isUnBorderedButtonType(type) {\r\n  return type === 'text' || type === 'link';\r\n}\r\nfunction splitCNCharsBySpace(child, needInserted) {\r\n  if (child === null || child === undefined) {\r\n    return;\r\n  }\r\n  const SPACE = needInserted ? ' ' : '';\r\n  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {\r\n    return cloneElement(child, {\r\n      children: child.props.children.split('').join(SPACE)\r\n    });\r\n  }\r\n  if (typeof child === 'string') {\r\n    return isTwoCNChar(child) ? /*#__PURE__*/React.createElement(\"span\", null, child.split('').join(SPACE)) : /*#__PURE__*/React.createElement(\"span\", null, child);\r\n  }\r\n  if (isFragment(child)) {\r\n    return /*#__PURE__*/React.createElement(\"span\", null, child);\r\n  }\r\n  return child;\r\n}\r\nexport function spaceChildren(children, needInserted) {\r\n  let isPrevChildPure = false;\r\n  const childList = [];\r\n  React.Children.forEach(children, child => {\r\n    const type = typeof child;\r\n    const isCurrentChildPure = type === 'string' || type === 'number';\r\n    if (isPrevChildPure && isCurrentChildPure) {\r\n      const lastIndex = childList.length - 1;\r\n      const lastChild = childList[lastIndex];\r\n      childList[lastIndex] = `${lastChild}${child}`;\r\n    } else {\r\n      childList.push(child);\r\n    }\r\n    isPrevChildPure = isCurrentChildPure;\r\n  });\r\n  return React.Children.map(childList, child => splitCNCharsBySpace(child, needInserted));\r\n}\r\nconst ButtonTypes = ['default', 'primary', 'ghost', 'dashed', 'link', 'text'];\r\nconst ButtonShapes = ['default', 'circle', 'round'];\r\nconst ButtonHTMLTypes = ['submit', 'button', 'reset'];"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}